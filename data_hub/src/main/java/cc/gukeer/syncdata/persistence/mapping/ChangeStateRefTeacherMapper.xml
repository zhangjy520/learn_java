<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.gukeer.syncdata.persistence.dao.ChangeStateRefTeacherMapper" >
  <resultMap id="BaseResultMap" type="cc.gukeer.syncdata.persistence.entity.ChangeStateRefTeacher" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="sync_teacher_id" property="syncTeacherId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="sync_class_id" property="syncClassId" jdbcType="VARCHAR" />
    <result column="event" property="event" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="sync_date" property="syncDate" jdbcType="BIGINT" />
    <result column="sync_del_flag" property="syncDelFlag" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sync_teacher_id, type, sync_class_id, event, update_date, source, sync_date, 
    sync_del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.gukeer.syncdata.persistence.entity.ChangeStateRefTeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from change_state_ref_teacher_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from change_state_ref_teacher_class
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from change_state_ref_teacher_class
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cc.gukeer.syncdata.persistence.entity.ChangeStateRefTeacherExample" >
    delete from change_state_ref_teacher_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.gukeer.syncdata.persistence.entity.ChangeStateRefTeacher" >
    insert into change_state_ref_teacher_class (id, sync_teacher_id, type, 
      sync_class_id, event, update_date, 
      source, sync_date, sync_del_flag
      )
    values (#{id,jdbcType=VARCHAR}, #{syncTeacherId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{syncClassId,jdbcType=VARCHAR}, #{event,jdbcType=VARCHAR}, #{updateDate,jdbcType=BIGINT}, 
      #{source,jdbcType=VARCHAR}, #{syncDate,jdbcType=BIGINT}, #{syncDelFlag,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cc.gukeer.syncdata.persistence.entity.ChangeStateRefTeacher" >
    insert into change_state_ref_teacher_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="syncTeacherId != null" >
        sync_teacher_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="syncClassId != null" >
        sync_class_id,
      </if>
      <if test="event != null" >
        event,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="syncDate != null" >
        sync_date,
      </if>
      <if test="syncDelFlag != null" >
        sync_del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="syncTeacherId != null" >
        #{syncTeacherId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="syncClassId != null" >
        #{syncClassId,jdbcType=VARCHAR},
      </if>
      <if test="event != null" >
        #{event,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="syncDate != null" >
        #{syncDate,jdbcType=BIGINT},
      </if>
      <if test="syncDelFlag != null" >
        #{syncDelFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update change_state_ref_teacher_class
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.syncTeacherId != null" >
        sync_teacher_id = #{record.syncTeacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.syncClassId != null" >
        sync_class_id = #{record.syncClassId,jdbcType=VARCHAR},
      </if>
      <if test="record.event != null" >
        event = #{record.event,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=BIGINT},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.syncDate != null" >
        sync_date = #{record.syncDate,jdbcType=BIGINT},
      </if>
      <if test="record.syncDelFlag != null" >
        sync_del_flag = #{record.syncDelFlag,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update change_state_ref_teacher_class
    set id = #{record.id,jdbcType=VARCHAR},
      sync_teacher_id = #{record.syncTeacherId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      sync_class_id = #{record.syncClassId,jdbcType=VARCHAR},
      event = #{record.event,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=BIGINT},
      source = #{record.source,jdbcType=VARCHAR},
      sync_date = #{record.syncDate,jdbcType=BIGINT},
      sync_del_flag = #{record.syncDelFlag,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.gukeer.syncdata.persistence.entity.ChangeStateRefTeacher" >
    update change_state_ref_teacher_class
    <set >
      <if test="syncTeacherId != null" >
        sync_teacher_id = #{syncTeacherId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="syncClassId != null" >
        sync_class_id = #{syncClassId,jdbcType=VARCHAR},
      </if>
      <if test="event != null" >
        event = #{event,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="syncDate != null" >
        sync_date = #{syncDate,jdbcType=BIGINT},
      </if>
      <if test="syncDelFlag != null" >
        sync_del_flag = #{syncDelFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.gukeer.syncdata.persistence.entity.ChangeStateRefTeacher" >
    update change_state_ref_teacher_class
    set sync_teacher_id = #{syncTeacherId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      sync_class_id = #{syncClassId,jdbcType=VARCHAR},
      event = #{event,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=BIGINT},
      source = #{source,jdbcType=VARCHAR},
      sync_date = #{syncDate,jdbcType=BIGINT},
      sync_del_flag = #{syncDelFlag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
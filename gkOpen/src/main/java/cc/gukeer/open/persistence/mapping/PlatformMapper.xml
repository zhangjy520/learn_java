<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.gukeer.open.persistence.dao.PlatformMapper" >
  <resultMap id="BaseResultMap" type="cc.gukeer.open.persistence.entity.Platform" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="identity" property="identity" jdbcType="VARCHAR" />
    <result column="url_app" property="urlApp" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="url_visit" property="urlVisit" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="init_status" property="initStatus" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cc.gukeer.open.persistence.entity.Platform" extends="BaseResultMap" >
    <result column="introduce" property="introduce" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, identity, url_app, del_flag, url_visit, create_time, init_status, update_time, 
    password
  </sql>
  <sql id="Blob_Column_List" >
    introduce
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cc.gukeer.open.persistence.entity.PlatformExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from open_platform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.gukeer.open.persistence.entity.PlatformExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from open_platform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from open_platform
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from open_platform
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cc.gukeer.open.persistence.entity.PlatformExample" >
    delete from open_platform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.gukeer.open.persistence.entity.Platform" >
    insert into open_platform (id, name, identity, 
      url_app, del_flag, url_visit, 
      create_time, init_status, update_time, 
      password, introduce)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}, 
      #{urlApp,jdbcType=VARCHAR}, #{delFlag,jdbcType=INTEGER}, #{urlVisit,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{initStatus,jdbcType=INTEGER}, #{updateTime,jdbcType=BIGINT}, 
      #{password,jdbcType=VARCHAR}, #{introduce,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cc.gukeer.open.persistence.entity.Platform" >
    insert into open_platform
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="identity != null" >
        identity,
      </if>
      <if test="urlApp != null" >
        url_app,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="urlVisit != null" >
        url_visit,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="initStatus != null" >
        init_status,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="urlApp != null" >
        #{urlApp,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="urlVisit != null" >
        #{urlVisit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="initStatus != null" >
        #{initStatus,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.gukeer.open.persistence.entity.PlatformExample" resultType="java.lang.Integer" >
    select count(*) from open_platform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update open_platform
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null" >
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.urlApp != null" >
        url_app = #{record.urlApp,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.urlVisit != null" >
        url_visit = #{record.urlVisit,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.initStatus != null" >
        init_status = #{record.initStatus,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update open_platform
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=VARCHAR},
      url_app = #{record.urlApp,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      url_visit = #{record.urlVisit,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      init_status = #{record.initStatus,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      password = #{record.password,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update open_platform
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=VARCHAR},
      url_app = #{record.urlApp,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      url_visit = #{record.urlVisit,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      init_status = #{record.initStatus,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.gukeer.open.persistence.entity.Platform" >
    update open_platform
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="urlApp != null" >
        url_app = #{urlApp,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="urlVisit != null" >
        url_visit = #{urlVisit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="initStatus != null" >
        init_status = #{initStatus,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cc.gukeer.open.persistence.entity.Platform" >
    update open_platform
    set name = #{name,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR},
      url_app = #{urlApp,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER},
      url_visit = #{urlVisit,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      init_status = #{initStatus,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=BIGINT},
      password = #{password,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.gukeer.open.persistence.entity.Platform" >
    update open_platform
    set name = #{name,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR},
      url_app = #{urlApp,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER},
      url_visit = #{urlVisit,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      init_status = #{initStatus,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=BIGINT},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
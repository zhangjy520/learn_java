<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.A_ClassRoomMapper">
    <resultMap id="BaseResultMap" type="cn.gukeer.platform.persistence.entity.ClassRoom"
               extends="cn.gukeer.platform.persistence.dao.ClassRoomMapper.BaseResultMap">
    </resultMap>

    <select id="findAllTeachBuilding" resultMap="BaseResultMap">
    SELECT *
    FROM teach_class_room
    WHERE school_id=#{schoolId}
    GROUP BY teach_building
    </select>


    <insert id="batchSaveRefRoomCycle">
        INSERT INTO `teach_ref_room_cycle`
        (`id`,
        `room_id`,
        `cycle_id`)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},#{item.roomId},#{item.cycleId}
            )
        </foreach>
    </insert>

    <select id="findBuildingBySchoolTypeList" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT *
        FROM teach_class_room
        WHERE school_type IN
        <foreach collection="schoolTypeList" item="schoolType" index="index" open="(" separator="," close=")">
            (
            #{schoolType.id}
            )
        </foreach>
        GROUP BY teach_building
    </select>

    <select id="findBuildingByschoolTypeId" resultMap="BaseResultMap">
        SELECT *
        FROM teach_class_room
        WHERE school_type =#{schoolTypeId}
        GROUP BY teach_building
    </select>

    <insert id="insertClassRoomBatch">
        INSERT INTO `teach_class_room`
        (`id`,
        `room_name`,
        `room_type`,
        `room_num`,
        `teach_building`,
        `room_type_name`,
        `school_id`,
        `school_type`,
        `school_type_name`,
        `floor`,
        `count`,
        `available_seat`,
        `exam_seat`,
        `course_select`,
        `remarks`,
        `create_by`,
        `create_date`
        )
        values
        <foreach collection="roomList" item="item" index="index" separator=",">
            (
            #{item.id},#{item.roomName},#{item.roomType},#{item.roomNum},#{item.teachBuilding},#{item.roomTypeName},#{item.schoolId},#{item.schoolType},
            #{item.schoolTypeName},#{item.floor},#{item.count},#{item.availableSeat},#{item.examSeat},#{item.courseSelect},
            #{item.remarks},#{item.createBy},#{item.createDate}
            )
        </foreach>
    </insert>



    <select id="findCascadeClassRoom" resultType="cn.gukeer.platform.persistence.entity.ClassRoom">
        SELECT
        *
        FROM
        (

        SELECT
            ost.name schoolTypeName,tcr.id, tcr.teach_building teachBuilding, tcr.floor, tcr.room_num roomNum
        FROM
            teach_class_room tcr,
            org_school_type ost
        WHERE
            tcr.school_type = ost.id
        and tcr.school_id=#{schoolId}

        <if test="'0'!=xqId and '-1' !=xqId and null !=xqId and '' !=xqId">
            AND  ost.id= #{xqId}
        </if>
        <if test="null !=teachBuilding and '' !=teachBuilding">
            AND tcr.teach_building= #{teachBuilding}
        </if>

        <if test=" null !=floor and '' !=floor">
            AND tcr.floor= #{floor}
        </if>
        ) tmp
        <choose>
            <when test="'xq'==flag">
                GROUP BY tmp.teachBuilding
            </when>
            <when test="'teachBuilding'==flag">
                GROUP BY tmp.floor
            </when>
            <otherwise>
                GROUP BY tmp.roomNum
            </otherwise>
        </choose>

    </select>

</mapper>

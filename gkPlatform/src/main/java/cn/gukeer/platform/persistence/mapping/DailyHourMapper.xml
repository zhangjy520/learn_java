<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.DailyHourMapper" >
  <resultMap id="BaseResultMap" type="cn.gukeer.platform.persistence.entity.DailyHour" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="school_id" property="schoolId" jdbcType="VARCHAR" />
    <result column="grade_class_id" property="gradeClassId" jdbcType="VARCHAR" />
    <result column="skts" property="skts" jdbcType="INTEGER" />
    <result column="swks" property="swks" jdbcType="INTEGER" />
    <result column="xwks" property="xwks" jdbcType="INTEGER" />
    <result column="kjc" property="kjc" jdbcType="INTEGER" />
    <result column="cycle_id" property="cycleId" jdbcType="VARCHAR" />
    <result column="xn" property="xn" jdbcType="VARCHAR" />
    <result column="xq" property="xq" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, school_id, grade_class_id, skts, swks, xwks, kjc, cycle_id, xn, xq, create_time, 
    update_time, update_by, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.gukeer.platform.persistence.entity.DailyHourExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from teach_daily_hour
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from teach_daily_hour
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teach_daily_hour
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gukeer.platform.persistence.entity.DailyHourExample" >
    delete from teach_daily_hour
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gukeer.platform.persistence.entity.DailyHour" >
    insert into teach_daily_hour (id, school_id, grade_class_id, 
      skts, swks, xwks, kjc, 
      cycle_id, xn, xq, create_time, 
      update_time, update_by, del_flag
      )
    values (#{id,jdbcType=VARCHAR}, #{schoolId,jdbcType=VARCHAR}, #{gradeClassId,jdbcType=VARCHAR}, 
      #{skts,jdbcType=INTEGER}, #{swks,jdbcType=INTEGER}, #{xwks,jdbcType=INTEGER}, #{kjc,jdbcType=INTEGER}, 
      #{cycleId,jdbcType=VARCHAR}, #{xn,jdbcType=VARCHAR}, #{xq,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT}, #{updateBy,jdbcType=VARCHAR}, #{delFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gukeer.platform.persistence.entity.DailyHour" >
    insert into teach_daily_hour
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="gradeClassId != null" >
        grade_class_id,
      </if>
      <if test="skts != null" >
        skts,
      </if>
      <if test="swks != null" >
        swks,
      </if>
      <if test="xwks != null" >
        xwks,
      </if>
      <if test="kjc != null" >
        kjc,
      </if>
      <if test="cycleId != null" >
        cycle_id,
      </if>
      <if test="xn != null" >
        xn,
      </if>
      <if test="xq != null" >
        xq,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="gradeClassId != null" >
        #{gradeClassId,jdbcType=VARCHAR},
      </if>
      <if test="skts != null" >
        #{skts,jdbcType=INTEGER},
      </if>
      <if test="swks != null" >
        #{swks,jdbcType=INTEGER},
      </if>
      <if test="xwks != null" >
        #{xwks,jdbcType=INTEGER},
      </if>
      <if test="kjc != null" >
        #{kjc,jdbcType=INTEGER},
      </if>
      <if test="cycleId != null" >
        #{cycleId,jdbcType=VARCHAR},
      </if>
      <if test="xn != null" >
        #{xn,jdbcType=VARCHAR},
      </if>
      <if test="xq != null" >
        #{xq,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update teach_daily_hour
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeClassId != null" >
        grade_class_id = #{record.gradeClassId,jdbcType=VARCHAR},
      </if>
      <if test="record.skts != null" >
        skts = #{record.skts,jdbcType=INTEGER},
      </if>
      <if test="record.swks != null" >
        swks = #{record.swks,jdbcType=INTEGER},
      </if>
      <if test="record.xwks != null" >
        xwks = #{record.xwks,jdbcType=INTEGER},
      </if>
      <if test="record.kjc != null" >
        kjc = #{record.kjc,jdbcType=INTEGER},
      </if>
      <if test="record.cycleId != null" >
        cycle_id = #{record.cycleId,jdbcType=VARCHAR},
      </if>
      <if test="record.xn != null" >
        xn = #{record.xn,jdbcType=VARCHAR},
      </if>
      <if test="record.xq != null" >
        xq = #{record.xq,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teach_daily_hour
    set id = #{record.id,jdbcType=VARCHAR},
      school_id = #{record.schoolId,jdbcType=VARCHAR},
      grade_class_id = #{record.gradeClassId,jdbcType=VARCHAR},
      skts = #{record.skts,jdbcType=INTEGER},
      swks = #{record.swks,jdbcType=INTEGER},
      xwks = #{record.xwks,jdbcType=INTEGER},
      kjc = #{record.kjc,jdbcType=INTEGER},
      cycle_id = #{record.cycleId,jdbcType=VARCHAR},
      xn = #{record.xn,jdbcType=VARCHAR},
      xq = #{record.xq,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gukeer.platform.persistence.entity.DailyHour" >
    update teach_daily_hour
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="gradeClassId != null" >
        grade_class_id = #{gradeClassId,jdbcType=VARCHAR},
      </if>
      <if test="skts != null" >
        skts = #{skts,jdbcType=INTEGER},
      </if>
      <if test="swks != null" >
        swks = #{swks,jdbcType=INTEGER},
      </if>
      <if test="xwks != null" >
        xwks = #{xwks,jdbcType=INTEGER},
      </if>
      <if test="kjc != null" >
        kjc = #{kjc,jdbcType=INTEGER},
      </if>
      <if test="cycleId != null" >
        cycle_id = #{cycleId,jdbcType=VARCHAR},
      </if>
      <if test="xn != null" >
        xn = #{xn,jdbcType=VARCHAR},
      </if>
      <if test="xq != null" >
        xq = #{xq,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gukeer.platform.persistence.entity.DailyHour" >
    update teach_daily_hour
    set school_id = #{schoolId,jdbcType=VARCHAR},
      grade_class_id = #{gradeClassId,jdbcType=VARCHAR},
      skts = #{skts,jdbcType=INTEGER},
      swks = #{swks,jdbcType=INTEGER},
      xwks = #{xwks,jdbcType=INTEGER},
      kjc = #{kjc,jdbcType=INTEGER},
      cycle_id = #{cycleId,jdbcType=VARCHAR},
      xn = #{xn,jdbcType=VARCHAR},
      xq = #{xq,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
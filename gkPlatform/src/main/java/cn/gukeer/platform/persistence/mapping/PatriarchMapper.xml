<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.PatriarchMapper" >
  <resultMap id="BaseResultMap" type="cn.gukeer.platform.persistence.entity.Patriarch" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="student_school_id" property="studentSchoolId" jdbcType="VARCHAR" />
    <result column="student_id" property="studentId" jdbcType="VARCHAR" />
    <result column="pinyin" property="pinyin" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="work" property="work" jdbcType="VARCHAR" />
    <result column="work_at" property="workAt" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="sfjhr" property="sfjhr" jdbcType="INTEGER" />
    <result column="sfyqsh" property="sfyqsh" jdbcType="INTEGER" />
    <result column="patriarch_flag" property="patriarchFlag" jdbcType="INTEGER" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, student_school_id, student_id, pinyin, account, work, work_at, phone, gender, 
    sfjhr, sfyqsh, patriarch_flag, del_flag, remarks, create_by, create_date, update_by, 
    update_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.gukeer.platform.persistence.entity.PatriarchExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user_patriarch
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_patriarch
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_patriarch
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gukeer.platform.persistence.entity.PatriarchExample" >
    delete from user_patriarch
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gukeer.platform.persistence.entity.Patriarch" >
    insert into user_patriarch (id, name, student_school_id, 
      student_id, pinyin, account, 
      work, work_at, phone, 
      gender, sfjhr, sfyqsh, 
      patriarch_flag, del_flag, remarks, 
      create_by, create_date, update_by, 
      update_date)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{studentSchoolId,jdbcType=VARCHAR}, 
      #{studentId,jdbcType=VARCHAR}, #{pinyin,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{work,jdbcType=VARCHAR}, #{workAt,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{sfjhr,jdbcType=INTEGER}, #{sfyqsh,jdbcType=INTEGER}, 
      #{patriarchFlag,jdbcType=INTEGER}, #{delFlag,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=BIGINT}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.gukeer.platform.persistence.entity.Patriarch" >
    insert into user_patriarch
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="studentSchoolId != null" >
        student_school_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="pinyin != null" >
        pinyin,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="work != null" >
        work,
      </if>
      <if test="workAt != null" >
        work_at,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="sfjhr != null" >
        sfjhr,
      </if>
      <if test="sfyqsh != null" >
        sfyqsh,
      </if>
      <if test="patriarchFlag != null" >
        patriarch_flag,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="studentSchoolId != null" >
        #{studentSchoolId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null" >
        #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="work != null" >
        #{work,jdbcType=VARCHAR},
      </if>
      <if test="workAt != null" >
        #{workAt,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="sfjhr != null" >
        #{sfjhr,jdbcType=INTEGER},
      </if>
      <if test="sfyqsh != null" >
        #{sfyqsh,jdbcType=INTEGER},
      </if>
      <if test="patriarchFlag != null" >
        #{patriarchFlag,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_patriarch
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.studentSchoolId != null" >
        student_school_id = #{record.studentSchoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.pinyin != null" >
        pinyin = #{record.pinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.work != null" >
        work = #{record.work,jdbcType=VARCHAR},
      </if>
      <if test="record.workAt != null" >
        work_at = #{record.workAt,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.sfjhr != null" >
        sfjhr = #{record.sfjhr,jdbcType=INTEGER},
      </if>
      <if test="record.sfyqsh != null" >
        sfyqsh = #{record.sfyqsh,jdbcType=INTEGER},
      </if>
      <if test="record.patriarchFlag != null" >
        patriarch_flag = #{record.patriarchFlag,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_patriarch
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      student_school_id = #{record.studentSchoolId,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      pinyin = #{record.pinyin,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      work = #{record.work,jdbcType=VARCHAR},
      work_at = #{record.workAt,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      sfjhr = #{record.sfjhr,jdbcType=INTEGER},
      sfyqsh = #{record.sfyqsh,jdbcType=INTEGER},
      patriarch_flag = #{record.patriarchFlag,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gukeer.platform.persistence.entity.Patriarch" >
    update user_patriarch
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="studentSchoolId != null" >
        student_school_id = #{studentSchoolId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null" >
        pinyin = #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="work != null" >
        work = #{work,jdbcType=VARCHAR},
      </if>
      <if test="workAt != null" >
        work_at = #{workAt,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="sfjhr != null" >
        sfjhr = #{sfjhr,jdbcType=INTEGER},
      </if>
      <if test="sfyqsh != null" >
        sfyqsh = #{sfyqsh,jdbcType=INTEGER},
      </if>
      <if test="patriarchFlag != null" >
        patriarch_flag = #{patriarchFlag,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gukeer.platform.persistence.entity.Patriarch" >
    update user_patriarch
    set name = #{name,jdbcType=VARCHAR},
      student_school_id = #{studentSchoolId,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=VARCHAR},
      pinyin = #{pinyin,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      work = #{work,jdbcType=VARCHAR},
      work_at = #{workAt,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      sfjhr = #{sfjhr,jdbcType=INTEGER},
      sfyqsh = #{sfyqsh,jdbcType=INTEGER},
      patriarch_flag = #{patriarchFlag,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
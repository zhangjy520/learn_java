<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.A_StudentExtensionMapper">

    <resultMap id="ExtensionBaseResultMap" type="cn.gukeer.platform.persistence.entity.Student"
               extends="cn.gukeer.platform.persistence.dao.StudentMapper.BaseResultMap">
    </resultMap>
    <resultMap id="ExtensionBaseResultMap2" type="cn.gukeer.platform.modelView.StudentView"
               extends="cn.gukeer.platform.persistence.dao.StudentMapper.BaseResultMap">
        <result column="className" property="className" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, school_id, class_id, student_account, patriach_account, xsxm, xmpy, xszp, csrq, 
    rxrq, xsxb, xssg, xd, nj, xh, xjh, qgxjh, jyid, syd, yxzjlx, yxzjh, jbs, sfsbt,
    sbtxh, xslb, gb, mz, jg, zzmm, zslb, lydq, hkszd, xjzd, hkxz, sfbshk, status, del_flag, 
    remarks, create_by, create_date, update_by, update_date
  </sql>
    <select id="selectByClassIdAndName" resultMap="ExtensionBaseResultMap2">
        select a.*,b.name as className
        from user_student a , org_grade_class b
        where a.class_id = b.id
        and b.school_id = a.school_id
        and b.school_id = #{schoolId,jdbcType=INTEGER}
        <if test='classId != null and classId!="0" and classId !=""'>
            and a.class_id = #{classId}
        </if>
        <if test='xd !="" and xd!="0" and xd !=null'>
            and b.xd = #{xd}
        </if>
        <if test="xq != 0">
            and b.xq = #{xq,jdbcType=INTEGER}
        </if>
        <if test="nj != 0">
            and b.nj = #{nj,jdbcType=INTEGER}
        </if>
        <if test="status != -1">
            and a.status = #{status,jdbcType=INTEGER}
        </if>
        and a.xsxm LIKE #{name,jdbcType=VARCHAR}
        and a.del_flag = 0
        and b.del_flag = 0
    </select>

    <update id="changeDelFlag" parameterType="String">
    UPDATE user_student
    SET del_flag = 1
    where id = #{id,jdbcType=INTEGER}
  </update>

    <insert id="insertStudentBatch">
        INSERT INTO `user_student`
        (`id`,
        `school_id`,
        `class_id`,
        `account`,
        `xsxm`,
        `xmpy`,
        `xszp`,
        `phone`,
        `csrq`,
        `rxrq`,
        `xsxb`,
        `xssg`,
        `xd`,
        `nj`,
        `xh`,
        `xjh`,
        `qgxjh`,
        `jyid`,
        `syd`,
        `yxzjlx`,
        `yxzjh`,
        `jbs`,
        `sfsbt`,
        `sbtxh`,
        `xslb`,
        `gb`,
        `mz`,
        `jg`,
        `zzmm`,
        `zslb`,
        `lydq`,
        `hkszd`,
        `xjzd`,
        `hkxz`,
        `sfbshk`,
        `status`,
        `del_flag`,
        `remarks`,
        `create_by`,
        `create_date`,
        `update_by`,
        `update_date`)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},#{item.schoolId},#{item.classId},#{item.account},#{item.xsxm},
            #{item.xmpy},#{item.xszp},#{item.phone},#{item.csrq},#{item.rxrq},#{item.xsxb},
            #{item.xssg},#{item.xd},#{item.nj},#{item.xh},#{item.xjh},#{item.qgxjh},
            #{item.jyid},#{item.syd},#{item.yxzjlx},#{item.yxzjh},#{item.jbs},#{item.sfsbt},
            #{item.sbtxh},#{item.xslb},#{item.gb},#{item.mz},#{item.jg},#{item.zzmm},
            #{item.zslb},#{item.lydq},#{item.hkszd},#{item.xjzd},#{item.hkxz},#{item.sfbshk},
            #{item.status},#{item.delFlag},#{item.remarks},#{item.createBy},#{item.createDate},#{item.updateBy},
            #{item.updateDate}
            )
        </foreach>
    </insert>

    <select id="findStudentByStuNum" resultType="java.util.Map">
          SELECT * FROM v_student_classinfo WHERE xh = #{stuNum} AND school_id = #{schoolId}
    </select>

    <select id="getParList" resultType="java.util.Map">
        SELECT * FROM
        v_partiarch_student_class_info v WHERE v.`delFlag`=0
        <if test='schoolId !="" and schoolId !=null'>
            AND v.`schoolId` =#{schoolId}
        </if>
        <if test='name !="" and name !=null'>
            AND (v.`parentName` LIKE #{name} OR v.`xsxm` LIKE #{name})
        </if>
        <if test='flag == null'>
            AND v.`parAccount` IS NULL
        </if>
        <if test="flag != null">
            and v.`parAccount` IS NOT NULL
        </if>
    </select>

    <insert id="batchInsetPatriarch">
        INSERT INTO `user_patriarch`
        (`id`,
        `name`,
        `student_school_id`,
        `student_id`,
        `pinyin`,
        `account`,
        `work`,
        `work_at`,
        `phone`,
        `gender`,
        `sfjhr`,
        `sfyqsh`,
        `patriarch_flag`,
        `del_flag`,
        `create_by`,
        `create_date`)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},#{item.name},#{item.studentSchoolId},#{item.studentId},
            #{item.pinyin},#{item.account},#{item.work},#{item.workAt},
            #{item.phone},#{item.gender},#{item.sfjhr},#{item.sfyqsh},
            #{item.patriarchFlag},#{item.delFlag},#{item.createBy},#{item.createDate}
            )
        </foreach>
    </insert>

    <select id="selectBatchStudents" resultMap="ExtensionBaseResultMap" parameterType="java.util.List">
        SELECT * FROM user_student
        <if test="idList != null and idList.size() > 0">
            WHERE school_id = #{schoolId} AND del_flag = 0 AND id IN
            <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>

    <select id="getAreaStuList" resultType="java.util.Map">
        SELECT
        *
        FROM
        v_student_class_school
        WHERE del_flag = 0
        <if test='schoolId !="" and schoolId !=null'>
            AND school_id = #{schoolId}
        </if>
        <if test='stuName !="" and stuName !=null'>
            AND xsxm LIKE #{stuName}
        </if>
        <if test='stuName =="" or stuName ==null'>
            <if test='xd !="" and xd !=null'>
                AND xd = #{xd}
            </if>
            <if test='nj !="" and nj !=null'>
                AND nj = #{nj}
            </if>
            <if test='classId !="" and classId !=null'>
                AND class_id = #{classId}
            </if>
        </if>
    </select>

    <select id="genderReport" resultType="java.util.Map">
        SELECT
        sectionName,
        COUNT(*) as countAll,
        SUM(CASE WHEN v.xsxb='1' THEN 1 ELSE 0 END) man,
        SUM(CASE WHEN v.xsxb='2' THEN 1 ELSE 0 END) woman
        FROM v_student_classinfo v WHERE v.school_id IN
        <foreach item="school" index="index" collection="schoolList" open="(" separator="," close=")">
            #{school.id}
        </foreach>
        AND v.del_flag = 0 GROUP BY sectionName ORDER BY v.`sectionYear` DESC,v.`sectionName`,v.`nj`
    </select>

    <select id="personCountReport" resultType="java.util.Map">
        SELECT
        indexName,
        MAX(per) maxP,
        MIN(per) minP,
        TRUNCATE(SUM(per)/#{size},2) avgP
        FROM (
        SELECT
        sectionYear,
        sectionName,
        nj,
        indexName,
        className,
        COUNT(*) per
        FROM v_student_classinfo v WHERE v.school_id IN
        <foreach item="school" index="index" collection="schoolList" open="(" separator="," close=")">
            #{school.id}
        </foreach>
         AND v.del_flag = 0 GROUP BY indexName,className
        ) AS a GROUP BY indexName ORDER BY a.`sectionYear` DESC,a.`sectionName`,a.`nj`
  </select>

    <select id="lydqReport" resultType="java.util.Map">
        SELECT
        COUNT(*) allCount,
        SUM(CASE WHEN s.lydq='0' THEN 1 ELSE 0 END) qn,
        SUM(CASE WHEN s.lydq='1' THEN 1 ELSE 0 END) sn,
        SUM(CASE WHEN s.lydq='2' THEN 1 ELSE 0 END) sw
        FROM user_student s WHERE
        school_id IN
        <foreach item="school" index="index" collection="schoolList" open="(" separator="," close=")">
            #{school.id}
        </foreach>
        AND s.del_flag = 0
    </select>



</mapper>
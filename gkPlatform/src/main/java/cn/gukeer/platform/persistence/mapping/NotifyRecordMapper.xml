<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.NotifyRecordMapper" >
  <resultMap id="BaseResultMap" type="cn.gukeer.platform.persistence.entity.NotifyRecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="notify_id" property="notifyId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="read_flag" property="readFlag" jdbcType="INTEGER" />
    <result column="read_date" property="readDate" jdbcType="BIGINT" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, notify_id, user_id, read_flag, read_date, user_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.gukeer.platform.persistence.entity.NotifyRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from oa_notify_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from oa_notify_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from oa_notify_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gukeer.platform.persistence.entity.NotifyRecordExample" >
    delete from oa_notify_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gukeer.platform.persistence.entity.NotifyRecord" >
    insert into oa_notify_record (id, notify_id, user_id, 
      read_flag, read_date, user_type
      )
    values (#{id,jdbcType=VARCHAR}, #{notifyId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{readFlag,jdbcType=INTEGER}, #{readDate,jdbcType=BIGINT}, #{userType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gukeer.platform.persistence.entity.NotifyRecord" >
    insert into oa_notify_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="notifyId != null" >
        notify_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="readFlag != null" >
        read_flag,
      </if>
      <if test="readDate != null" >
        read_date,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="notifyId != null" >
        #{notifyId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="readFlag != null" >
        #{readFlag,jdbcType=INTEGER},
      </if>
      <if test="readDate != null" >
        #{readDate,jdbcType=BIGINT},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_notify_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyId != null" >
        notify_id = #{record.notifyId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.readFlag != null" >
        read_flag = #{record.readFlag,jdbcType=INTEGER},
      </if>
      <if test="record.readDate != null" >
        read_date = #{record.readDate,jdbcType=BIGINT},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_notify_record
    set id = #{record.id,jdbcType=VARCHAR},
      notify_id = #{record.notifyId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      read_flag = #{record.readFlag,jdbcType=INTEGER},
      read_date = #{record.readDate,jdbcType=BIGINT},
      user_type = #{record.userType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gukeer.platform.persistence.entity.NotifyRecord" >
    update oa_notify_record
    <set >
      <if test="notifyId != null" >
        notify_id = #{notifyId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="readFlag != null" >
        read_flag = #{readFlag,jdbcType=INTEGER},
      </if>
      <if test="readDate != null" >
        read_date = #{readDate,jdbcType=BIGINT},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gukeer.platform.persistence.entity.NotifyRecord" >
    update oa_notify_record
    set notify_id = #{notifyId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      read_flag = #{readFlag,jdbcType=INTEGER},
      read_date = #{readDate,jdbcType=BIGINT},
      user_type = #{userType,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
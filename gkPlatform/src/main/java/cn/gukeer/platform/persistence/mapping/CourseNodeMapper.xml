<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.CourseNodeMapper" >
  <resultMap id="BaseResultMap" type="cn.gukeer.platform.persistence.entity.CourseNode" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="school_id" property="schoolId" jdbcType="VARCHAR" />
    <result column="course_node_init_id" property="courseNodeInitId" jdbcType="VARCHAR" />
    <result column="cycle_id" property="cycleId" jdbcType="VARCHAR" />
    <result column="cycle_year" property="cycleYear" jdbcType="VARCHAR" />
    <result column="cycle_semester" property="cycleSemester" jdbcType="INTEGER" />
    <result column="node" property="node" jdbcType="INTEGER" />
    <result column="node_name" property="nodeName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="BIGINT" />
    <result column="end_time" property="endTime" jdbcType="BIGINT" />
    <result column="morning_afternoon" property="morningAfternoon" jdbcType="VARCHAR" />
    <result column="week" property="week" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="summer_winter_time" property="summerWinterTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, school_id, course_node_init_id, cycle_id, cycle_year, cycle_semester, node, node_name, 
    start_time, end_time, morning_afternoon, week, create_time, update_time, update_by, 
    del_flag, summer_winter_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.gukeer.platform.persistence.entity.CourseNodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from teach_course_node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from teach_course_node
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teach_course_node
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gukeer.platform.persistence.entity.CourseNodeExample" >
    delete from teach_course_node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gukeer.platform.persistence.entity.CourseNode" >
    insert into teach_course_node (id, school_id, course_node_init_id, 
      cycle_id, cycle_year, cycle_semester, 
      node, node_name, start_time, 
      end_time, morning_afternoon, week, 
      create_time, update_time, update_by, 
      del_flag, summer_winter_time)
    values (#{id,jdbcType=VARCHAR}, #{schoolId,jdbcType=VARCHAR}, #{courseNodeInitId,jdbcType=VARCHAR}, 
      #{cycleId,jdbcType=VARCHAR}, #{cycleYear,jdbcType=VARCHAR}, #{cycleSemester,jdbcType=INTEGER}, 
      #{node,jdbcType=INTEGER}, #{nodeName,jdbcType=VARCHAR}, #{startTime,jdbcType=BIGINT}, 
      #{endTime,jdbcType=BIGINT}, #{morningAfternoon,jdbcType=VARCHAR}, #{week,jdbcType=INTEGER}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{updateBy,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=INTEGER}, #{summerWinterTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gukeer.platform.persistence.entity.CourseNode" >
    insert into teach_course_node
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="courseNodeInitId != null" >
        course_node_init_id,
      </if>
      <if test="cycleId != null" >
        cycle_id,
      </if>
      <if test="cycleYear != null" >
        cycle_year,
      </if>
      <if test="cycleSemester != null" >
        cycle_semester,
      </if>
      <if test="node != null" >
        node,
      </if>
      <if test="nodeName != null" >
        node_name,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="morningAfternoon != null" >
        morning_afternoon,
      </if>
      <if test="week != null" >
        week,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="summerWinterTime != null" >
        summer_winter_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="courseNodeInitId != null" >
        #{courseNodeInitId,jdbcType=VARCHAR},
      </if>
      <if test="cycleId != null" >
        #{cycleId,jdbcType=VARCHAR},
      </if>
      <if test="cycleYear != null" >
        #{cycleYear,jdbcType=VARCHAR},
      </if>
      <if test="cycleSemester != null" >
        #{cycleSemester,jdbcType=INTEGER},
      </if>
      <if test="node != null" >
        #{node,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null" >
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="morningAfternoon != null" >
        #{morningAfternoon,jdbcType=VARCHAR},
      </if>
      <if test="week != null" >
        #{week,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="summerWinterTime != null" >
        #{summerWinterTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update teach_course_node
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseNodeInitId != null" >
        course_node_init_id = #{record.courseNodeInitId,jdbcType=VARCHAR},
      </if>
      <if test="record.cycleId != null" >
        cycle_id = #{record.cycleId,jdbcType=VARCHAR},
      </if>
      <if test="record.cycleYear != null" >
        cycle_year = #{record.cycleYear,jdbcType=VARCHAR},
      </if>
      <if test="record.cycleSemester != null" >
        cycle_semester = #{record.cycleSemester,jdbcType=INTEGER},
      </if>
      <if test="record.node != null" >
        node = #{record.node,jdbcType=INTEGER},
      </if>
      <if test="record.nodeName != null" >
        node_name = #{record.nodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
      <if test="record.morningAfternoon != null" >
        morning_afternoon = #{record.morningAfternoon,jdbcType=VARCHAR},
      </if>
      <if test="record.week != null" >
        week = #{record.week,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.summerWinterTime != null" >
        summer_winter_time = #{record.summerWinterTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teach_course_node
    set id = #{record.id,jdbcType=VARCHAR},
      school_id = #{record.schoolId,jdbcType=VARCHAR},
      course_node_init_id = #{record.courseNodeInitId,jdbcType=VARCHAR},
      cycle_id = #{record.cycleId,jdbcType=VARCHAR},
      cycle_year = #{record.cycleYear,jdbcType=VARCHAR},
      cycle_semester = #{record.cycleSemester,jdbcType=INTEGER},
      node = #{record.node,jdbcType=INTEGER},
      node_name = #{record.nodeName,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT},
      morning_afternoon = #{record.morningAfternoon,jdbcType=VARCHAR},
      week = #{record.week,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      summer_winter_time = #{record.summerWinterTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gukeer.platform.persistence.entity.CourseNode" >
    update teach_course_node
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="courseNodeInitId != null" >
        course_node_init_id = #{courseNodeInitId,jdbcType=VARCHAR},
      </if>
      <if test="cycleId != null" >
        cycle_id = #{cycleId,jdbcType=VARCHAR},
      </if>
      <if test="cycleYear != null" >
        cycle_year = #{cycleYear,jdbcType=VARCHAR},
      </if>
      <if test="cycleSemester != null" >
        cycle_semester = #{cycleSemester,jdbcType=INTEGER},
      </if>
      <if test="node != null" >
        node = #{node,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null" >
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="morningAfternoon != null" >
        morning_afternoon = #{morningAfternoon,jdbcType=VARCHAR},
      </if>
      <if test="week != null" >
        week = #{week,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="summerWinterTime != null" >
        summer_winter_time = #{summerWinterTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gukeer.platform.persistence.entity.CourseNode" >
    update teach_course_node
    set school_id = #{schoolId,jdbcType=VARCHAR},
      course_node_init_id = #{courseNodeInitId,jdbcType=VARCHAR},
      cycle_id = #{cycleId,jdbcType=VARCHAR},
      cycle_year = #{cycleYear,jdbcType=VARCHAR},
      cycle_semester = #{cycleSemester,jdbcType=INTEGER},
      node = #{node,jdbcType=INTEGER},
      node_name = #{nodeName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      morning_afternoon = #{morningAfternoon,jdbcType=VARCHAR},
      week = #{week,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER},
      summer_winter_time = #{summerWinterTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.LogMapper" >
  <resultMap id="BaseResultMap" type="cn.gukeer.platform.persistence.entity.Log" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="remote_addr" property="remoteAddr" jdbcType="VARCHAR" />
    <result column="user_agent" property="userAgent" jdbcType="VARCHAR" />
    <result column="request_uri" property="requestUri" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.gukeer.platform.persistence.entity.LogWithBLOBs" extends="BaseResultMap" >
    <result column="params" property="params" jdbcType="LONGVARCHAR" />
    <result column="exception" property="exception" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, title, create_by, create_date, remote_addr, user_agent, request_uri, method
  </sql>
  <sql id="Blob_Column_List" >
    params, exception
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.gukeer.platform.persistence.entity.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.gukeer.platform.persistence.entity.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gukeer.platform.persistence.entity.LogExample" >
    delete from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gukeer.platform.persistence.entity.LogWithBLOBs" >
    insert into sys_log (id, type, title, 
      create_by, create_date, remote_addr, 
      user_agent, request_uri, method, 
      params, exception)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, #{title,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=BIGINT}, #{remoteAddr,jdbcType=VARCHAR}, 
      #{userAgent,jdbcType=VARCHAR}, #{requestUri,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{params,jdbcType=LONGVARCHAR}, #{exception,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gukeer.platform.persistence.entity.LogWithBLOBs" >
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="remoteAddr != null" >
        remote_addr,
      </if>
      <if test="userAgent != null" >
        user_agent,
      </if>
      <if test="requestUri != null" >
        request_uri,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="params != null" >
        params,
      </if>
      <if test="exception != null" >
        exception,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="remoteAddr != null" >
        #{remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null" >
        #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null" >
        #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="exception != null" >
        #{exception,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.remoteAddr != null" >
        remote_addr = #{record.remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.userAgent != null" >
        user_agent = #{record.userAgent,jdbcType=VARCHAR},
      </if>
      <if test="record.requestUri != null" >
        request_uri = #{record.requestUri,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null" >
        params = #{record.params,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.exception != null" >
        exception = #{record.exception,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update sys_log
    set id = #{record.id,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      remote_addr = #{record.remoteAddr,jdbcType=VARCHAR},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      request_uri = #{record.requestUri,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=LONGVARCHAR},
      exception = #{record.exception,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_log
    set id = #{record.id,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      remote_addr = #{record.remoteAddr,jdbcType=VARCHAR},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      request_uri = #{record.requestUri,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gukeer.platform.persistence.entity.LogWithBLOBs" >
    update sys_log
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="remoteAddr != null" >
        remote_addr = #{remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null" >
        user_agent = #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null" >
        request_uri = #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="exception != null" >
        exception = #{exception,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.gukeer.platform.persistence.entity.LogWithBLOBs" >
    update sys_log
    set type = #{type,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      remote_addr = #{remoteAddr,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      request_uri = #{requestUri,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      params = #{params,jdbcType=LONGVARCHAR},
      exception = #{exception,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gukeer.platform.persistence.entity.Log" >
    update sys_log
    set type = #{type,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      remote_addr = #{remoteAddr,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      request_uri = #{requestUri,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
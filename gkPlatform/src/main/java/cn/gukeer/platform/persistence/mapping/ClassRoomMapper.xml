<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.ClassRoomMapper" >
  <resultMap id="BaseResultMap" type="cn.gukeer.platform.persistence.entity.ClassRoom" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="room_name" property="roomName" jdbcType="VARCHAR" />
    <result column="room_type" property="roomType" jdbcType="VARCHAR" />
    <result column="room_type_name" property="roomTypeName" jdbcType="VARCHAR" />
    <result column="room_num" property="roomNum" jdbcType="VARCHAR" />
    <result column="school_id" property="schoolId" jdbcType="VARCHAR" />
    <result column="teach_building" property="teachBuilding" jdbcType="VARCHAR" />
    <result column="teach_building_num" property="teachBuildingNum" jdbcType="INTEGER" />
    <result column="school_type" property="schoolType" jdbcType="VARCHAR" />
    <result column="school_type_name" property="schoolTypeName" jdbcType="VARCHAR" />
    <result column="floor" property="floor" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="available_seat" property="availableSeat" jdbcType="INTEGER" />
    <result column="exam_seat" property="examSeat" jdbcType="INTEGER" />
    <result column="course_select" property="courseSelect" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, room_name, room_type, room_type_name, room_num, school_id, teach_building, teach_building_num, 
    school_type, school_type_name, floor, count, available_seat, exam_seat, course_select, 
    remarks, update_by, update_date, create_by, create_date, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.gukeer.platform.persistence.entity.ClassRoomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from teach_class_room
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from teach_class_room
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teach_class_room
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gukeer.platform.persistence.entity.ClassRoomExample" >
    delete from teach_class_room
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gukeer.platform.persistence.entity.ClassRoom" >
    insert into teach_class_room (id, room_name, room_type, 
      room_type_name, room_num, school_id, 
      teach_building, teach_building_num, school_type, 
      school_type_name, floor, count, 
      available_seat, exam_seat, course_select, 
      remarks, update_by, update_date, 
      create_by, create_date, del_flag
      )
    values (#{id,jdbcType=VARCHAR}, #{roomName,jdbcType=VARCHAR}, #{roomType,jdbcType=VARCHAR}, 
      #{roomTypeName,jdbcType=VARCHAR}, #{roomNum,jdbcType=VARCHAR}, #{schoolId,jdbcType=VARCHAR}, 
      #{teachBuilding,jdbcType=VARCHAR}, #{teachBuildingNum,jdbcType=INTEGER}, #{schoolType,jdbcType=VARCHAR}, 
      #{schoolTypeName,jdbcType=VARCHAR}, #{floor,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{availableSeat,jdbcType=INTEGER}, #{examSeat,jdbcType=INTEGER}, #{courseSelect,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=BIGINT}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=BIGINT}, #{delFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gukeer.platform.persistence.entity.ClassRoom" >
    insert into teach_class_room
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roomName != null" >
        room_name,
      </if>
      <if test="roomType != null" >
        room_type,
      </if>
      <if test="roomTypeName != null" >
        room_type_name,
      </if>
      <if test="roomNum != null" >
        room_num,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="teachBuilding != null" >
        teach_building,
      </if>
      <if test="teachBuildingNum != null" >
        teach_building_num,
      </if>
      <if test="schoolType != null" >
        school_type,
      </if>
      <if test="schoolTypeName != null" >
        school_type_name,
      </if>
      <if test="floor != null" >
        floor,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="availableSeat != null" >
        available_seat,
      </if>
      <if test="examSeat != null" >
        exam_seat,
      </if>
      <if test="courseSelect != null" >
        course_select,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roomName != null" >
        #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="roomType != null" >
        #{roomType,jdbcType=VARCHAR},
      </if>
      <if test="roomTypeName != null" >
        #{roomTypeName,jdbcType=VARCHAR},
      </if>
      <if test="roomNum != null" >
        #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="teachBuilding != null" >
        #{teachBuilding,jdbcType=VARCHAR},
      </if>
      <if test="teachBuildingNum != null" >
        #{teachBuildingNum,jdbcType=INTEGER},
      </if>
      <if test="schoolType != null" >
        #{schoolType,jdbcType=VARCHAR},
      </if>
      <if test="schoolTypeName != null" >
        #{schoolTypeName,jdbcType=VARCHAR},
      </if>
      <if test="floor != null" >
        #{floor,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="availableSeat != null" >
        #{availableSeat,jdbcType=INTEGER},
      </if>
      <if test="examSeat != null" >
        #{examSeat,jdbcType=INTEGER},
      </if>
      <if test="courseSelect != null" >
        #{courseSelect,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update teach_class_room
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.roomName != null" >
        room_name = #{record.roomName,jdbcType=VARCHAR},
      </if>
      <if test="record.roomType != null" >
        room_type = #{record.roomType,jdbcType=VARCHAR},
      </if>
      <if test="record.roomTypeName != null" >
        room_type_name = #{record.roomTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.roomNum != null" >
        room_num = #{record.roomNum,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.teachBuilding != null" >
        teach_building = #{record.teachBuilding,jdbcType=VARCHAR},
      </if>
      <if test="record.teachBuildingNum != null" >
        teach_building_num = #{record.teachBuildingNum,jdbcType=INTEGER},
      </if>
      <if test="record.schoolType != null" >
        school_type = #{record.schoolType,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolTypeName != null" >
        school_type_name = #{record.schoolTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.floor != null" >
        floor = #{record.floor,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.availableSeat != null" >
        available_seat = #{record.availableSeat,jdbcType=INTEGER},
      </if>
      <if test="record.examSeat != null" >
        exam_seat = #{record.examSeat,jdbcType=INTEGER},
      </if>
      <if test="record.courseSelect != null" >
        course_select = #{record.courseSelect,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teach_class_room
    set id = #{record.id,jdbcType=VARCHAR},
      room_name = #{record.roomName,jdbcType=VARCHAR},
      room_type = #{record.roomType,jdbcType=VARCHAR},
      room_type_name = #{record.roomTypeName,jdbcType=VARCHAR},
      room_num = #{record.roomNum,jdbcType=VARCHAR},
      school_id = #{record.schoolId,jdbcType=VARCHAR},
      teach_building = #{record.teachBuilding,jdbcType=VARCHAR},
      teach_building_num = #{record.teachBuildingNum,jdbcType=INTEGER},
      school_type = #{record.schoolType,jdbcType=VARCHAR},
      school_type_name = #{record.schoolTypeName,jdbcType=VARCHAR},
      floor = #{record.floor,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      available_seat = #{record.availableSeat,jdbcType=INTEGER},
      exam_seat = #{record.examSeat,jdbcType=INTEGER},
      course_select = #{record.courseSelect,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gukeer.platform.persistence.entity.ClassRoom" >
    update teach_class_room
    <set >
      <if test="roomName != null" >
        room_name = #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="roomType != null" >
        room_type = #{roomType,jdbcType=VARCHAR},
      </if>
      <if test="roomTypeName != null" >
        room_type_name = #{roomTypeName,jdbcType=VARCHAR},
      </if>
      <if test="roomNum != null" >
        room_num = #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="teachBuilding != null" >
        teach_building = #{teachBuilding,jdbcType=VARCHAR},
      </if>
      <if test="teachBuildingNum != null" >
        teach_building_num = #{teachBuildingNum,jdbcType=INTEGER},
      </if>
      <if test="schoolType != null" >
        school_type = #{schoolType,jdbcType=VARCHAR},
      </if>
      <if test="schoolTypeName != null" >
        school_type_name = #{schoolTypeName,jdbcType=VARCHAR},
      </if>
      <if test="floor != null" >
        floor = #{floor,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="availableSeat != null" >
        available_seat = #{availableSeat,jdbcType=INTEGER},
      </if>
      <if test="examSeat != null" >
        exam_seat = #{examSeat,jdbcType=INTEGER},
      </if>
      <if test="courseSelect != null" >
        course_select = #{courseSelect,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gukeer.platform.persistence.entity.ClassRoom" >
    update teach_class_room
    set room_name = #{roomName,jdbcType=VARCHAR},
      room_type = #{roomType,jdbcType=VARCHAR},
      room_type_name = #{roomTypeName,jdbcType=VARCHAR},
      room_num = #{roomNum,jdbcType=VARCHAR},
      school_id = #{schoolId,jdbcType=VARCHAR},
      teach_building = #{teachBuilding,jdbcType=VARCHAR},
      teach_building_num = #{teachBuildingNum,jdbcType=INTEGER},
      school_type = #{schoolType,jdbcType=VARCHAR},
      school_type_name = #{schoolTypeName,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      available_seat = #{availableSeat,jdbcType=INTEGER},
      exam_seat = #{examSeat,jdbcType=INTEGER},
      course_select = #{courseSelect,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.ClassCardMapper" >
  <resultMap id="BaseResultMap" type="cn.gukeer.platform.persistence.entity.ClassCard" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="mac_id" property="macId" jdbcType="VARCHAR" />
    <result column="equipment_name" property="equipmentName" jdbcType="VARCHAR" />
    <result column="teach_class_room_id" property="teachClassRoomId" jdbcType="VARCHAR" />
    <result column="class_id" property="classId" jdbcType="VARCHAR" />
    <result column="classroom" property="classroom" jdbcType="VARCHAR" />
    <result column="class_slogan" property="classSlogan" jdbcType="VARCHAR" />
    <result column="school_id" property="schoolId" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mac_id, equipment_name, teach_class_room_id, class_id, classroom, class_slogan, 
    school_id, update_by, update_date, create_by, create_date, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.gukeer.platform.persistence.entity.ClassCardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from teach_class_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from teach_class_card
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teach_class_card
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gukeer.platform.persistence.entity.ClassCardExample" >
    delete from teach_class_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gukeer.platform.persistence.entity.ClassCard" >
    insert into teach_class_card (id, mac_id, equipment_name, 
      teach_class_room_id, class_id, classroom, 
      class_slogan, school_id, update_by, 
      update_date, create_by, create_date, 
      del_flag)
    values (#{id,jdbcType=VARCHAR}, #{macId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{teachClassRoomId,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}, #{classroom,jdbcType=VARCHAR}, 
      #{classSlogan,jdbcType=VARCHAR}, #{schoolId,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=BIGINT}, 
      #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.gukeer.platform.persistence.entity.ClassCard" >
    insert into teach_class_card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="macId != null" >
        mac_id,
      </if>
      <if test="equipmentName != null" >
        equipment_name,
      </if>
      <if test="teachClassRoomId != null" >
        teach_class_room_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="classroom != null" >
        classroom,
      </if>
      <if test="classSlogan != null" >
        class_slogan,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="macId != null" >
        #{macId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentName != null" >
        #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="teachClassRoomId != null" >
        #{teachClassRoomId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null" >
        #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="classSlogan != null" >
        #{classSlogan,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update teach_class_card
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.macId != null" >
        mac_id = #{record.macId,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentName != null" >
        equipment_name = #{record.equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.teachClassRoomId != null" >
        teach_class_room_id = #{record.teachClassRoomId,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.classroom != null" >
        classroom = #{record.classroom,jdbcType=VARCHAR},
      </if>
      <if test="record.classSlogan != null" >
        class_slogan = #{record.classSlogan,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teach_class_card
    set id = #{record.id,jdbcType=VARCHAR},
      mac_id = #{record.macId,jdbcType=VARCHAR},
      equipment_name = #{record.equipmentName,jdbcType=VARCHAR},
      teach_class_room_id = #{record.teachClassRoomId,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      classroom = #{record.classroom,jdbcType=VARCHAR},
      class_slogan = #{record.classSlogan,jdbcType=VARCHAR},
      school_id = #{record.schoolId,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gukeer.platform.persistence.entity.ClassCard" >
    update teach_class_card
    <set >
      <if test="macId != null" >
        mac_id = #{macId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentName != null" >
        equipment_name = #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="teachClassRoomId != null" >
        teach_class_room_id = #{teachClassRoomId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null" >
        classroom = #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="classSlogan != null" >
        class_slogan = #{classSlogan,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gukeer.platform.persistence.entity.ClassCard" >
    update teach_class_card
    set mac_id = #{macId,jdbcType=VARCHAR},
      equipment_name = #{equipmentName,jdbcType=VARCHAR},
      teach_class_room_id = #{teachClassRoomId,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=VARCHAR},
      classroom = #{classroom,jdbcType=VARCHAR},
      class_slogan = #{classSlogan,jdbcType=VARCHAR},
      school_id = #{schoolId,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>



</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.gukeer.syncdata.persistence.dao.A_ChangeStateTeacherMapper" >
    <!--批量处理-->
    <insert id="insertBatch" parameterType="cc.gukeer.syncdata.persistence.entity.ChangeStateTeacher" >
        insert into change_state_user_teacher (id, sync_id, school_id,
        department_id, name, gender,
        identity, is_manage, title_id,
        no, phone, mobile,
        email, start_work, head_url,
        zc, sfzrjs, jg, zzmm,
        rjxk, xq, zgxl, zgbyxx,
        lwxsj, sfhq, sfbzr,account,
        wyyz, zyjsgwfl, update_date,
        event, source, sync_del_flag,
        sync_date)values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.syncId,jdbcType=VARCHAR},#{item.schoolId,jdbcType=VARCHAR},
            #{item.departmentId,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.gender,jdbcType=INTEGER},
            #{item.identity,jdbcType=VARCHAR}, #{item.isManage,jdbcType=INTEGER}, #{item.titleId,jdbcType=VARCHAR},
            #{item.no,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR},
            #{item.email,jdbcType=VARCHAR}, #{item.startWork,jdbcType=BIGINT}, #{item.headUrl,jdbcType=VARCHAR},
            #{item.zc,jdbcType=VARCHAR}, #{item.sfzrjs,jdbcType=VARCHAR}, #{item.jg,jdbcType=VARCHAR}, #{item.zzmm,jdbcType=VARCHAR},
            #{item.rjxk,jdbcType=VARCHAR}, #{item.xq,jdbcType=VARCHAR}, #{item.zgxl,jdbcType=VARCHAR}, #{item.zgbyxx,jdbcType=VARCHAR},
            #{item.lwxsj,jdbcType=BIGINT}, #{item.sfhq,jdbcType=VARCHAR}, #{item.sfbzr,jdbcType=VARCHAR},#{item.account,jdbcType=VARCHAR},
            #{item.wyyz,jdbcType=VARCHAR}, #{item.zyjsgwfl,jdbcType=VARCHAR}, #{item.updateDate,jdbcType=BIGINT},
            #{item.event,jdbcType=VARCHAR}, #{item.source,jdbcType=VARCHAR}, #{item.syncDelFlag,jdbcType=VARCHAR},
            #{item.syncDate,jdbcType=BIGINT})
        </foreach>
    </insert>



    <select id="selectMinId" resultType="map" parameterType="java.lang.Long" >
        SELECT id,MIN(sync_date) FROM change_state_user_teacher
        where
        <if test="source != null" >
            source = #{source,jdbcType=VARCHAR} and
        </if>

        <if test="syncDate != null" >
            sync_date > #{syncDate,jdbcType=BIGINT}
        </if>
        GROUP BY sync_id
        HAVING COUNT(1) > 1
    </select>

    <!--<delete id="deleteBatch" parameterType="java.lang.String" >-->
        <!--delete from change_state_user_teacher-->
        <!--where id in-->
        <!--<foreach collection="list" item="item" index="index" separator="," open="(" close=")">-->
            <!--#{item,jdbcType=VARCHAR}-->
        <!--</foreach>-->
    <!--</delete>-->
    <delete id="deleteBatch" parameterType="java.lang.String" >
        DELETE FROM change_state_user_teacher
        WHERE id not in
        <foreach collection="listId" item="item" index="index" separator="," open="(" close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND sync_id in
        <foreach collection="listSyncId" item="item2" index="index" separator="," open="(" close=")">
            #{item2,jdbcType=VARCHAR}
        </foreach>
    </delete>

    <select id="checkBysyncId" resultType="String" parameterType="String" >
        SELECT id FROM change_state_user_teacher
        GROUP BY sync_id
        HAVING COUNT(id)>1
    </select>

    <select id="selectSyncId" resultType="String" parameterType="String" >
        SELECT sync_id FROM change_state_user_teacher
        GROUP BY sync_id
        HAVING COUNT(id)>1
    </select>
    <select id="checkById" resultType="Integer" parameterType="String" >
        select count(id) from change_state_user_teacher where sync_id=#{0} AND source = #{1}
    </select>




</mapper>
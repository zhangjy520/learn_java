<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.gukeer.attendance.persistence.dao.FeedBackMapper" >
  <resultMap id="BaseResultMap" type="cc.gukeer.attendance.persistence.entity.FeedBack" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="apply_name" property="applyName" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="context" property="context" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="system_operate" property="systemOperate" jdbcType="VARCHAR" />
    <result column="software_version" property="softwareVersion" jdbcType="VARCHAR" />
    <result column="vsersion" property="vsersion" jdbcType="VARCHAR" />
    <result column="unit_type" property="unitType" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="feedback_time" property="feedbackTime" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, apply_name, title, context, user_id, system_operate, software_version, vsersion, 
    unit_type, email, phone, feedback_time, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.gukeer.attendance.persistence.entity.FeedBackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from feedback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from feedback
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from feedback
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cc.gukeer.attendance.persistence.entity.FeedBackExample" >
    delete from feedback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.gukeer.attendance.persistence.entity.FeedBack" >
    insert into feedback (id, apply_name, title, 
      context, user_id, system_operate, 
      software_version, vsersion, unit_type, 
      email, phone, feedback_time, 
      status)
    values (#{id,jdbcType=VARCHAR}, #{applyName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{context,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{systemOperate,jdbcType=VARCHAR}, 
      #{softwareVersion,jdbcType=VARCHAR}, #{vsersion,jdbcType=VARCHAR}, #{unitType,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{feedbackTime,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cc.gukeer.attendance.persistence.entity.FeedBack" >
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="applyName != null" >
        apply_name,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="context != null" >
        context,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="systemOperate != null" >
        system_operate,
      </if>
      <if test="softwareVersion != null" >
        software_version,
      </if>
      <if test="vsersion != null" >
        vsersion,
      </if>
      <if test="unitType != null" >
        unit_type,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="feedbackTime != null" >
        feedback_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="applyName != null" >
        #{applyName,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="systemOperate != null" >
        #{systemOperate,jdbcType=VARCHAR},
      </if>
      <if test="softwareVersion != null" >
        #{softwareVersion,jdbcType=VARCHAR},
      </if>
      <if test="vsersion != null" >
        #{vsersion,jdbcType=VARCHAR},
      </if>
      <if test="unitType != null" >
        #{unitType,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="feedbackTime != null" >
        #{feedbackTime,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.gukeer.attendance.persistence.entity.FeedBackExample" resultType="java.lang.Integer" >
    select count(*) from feedback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update feedback
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.applyName != null" >
        apply_name = #{record.applyName,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.context != null" >
        context = #{record.context,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.systemOperate != null" >
        system_operate = #{record.systemOperate,jdbcType=VARCHAR},
      </if>
      <if test="record.softwareVersion != null" >
        software_version = #{record.softwareVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.vsersion != null" >
        vsersion = #{record.vsersion,jdbcType=VARCHAR},
      </if>
      <if test="record.unitType != null" >
        unit_type = #{record.unitType,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackTime != null" >
        feedback_time = #{record.feedbackTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update feedback
    set id = #{record.id,jdbcType=VARCHAR},
      apply_name = #{record.applyName,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      context = #{record.context,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      system_operate = #{record.systemOperate,jdbcType=VARCHAR},
      software_version = #{record.softwareVersion,jdbcType=VARCHAR},
      vsersion = #{record.vsersion,jdbcType=VARCHAR},
      unit_type = #{record.unitType,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      feedback_time = #{record.feedbackTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.gukeer.attendance.persistence.entity.FeedBack" >
    update feedback
    <set >
      <if test="applyName != null" >
        apply_name = #{applyName,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="systemOperate != null" >
        system_operate = #{systemOperate,jdbcType=VARCHAR},
      </if>
      <if test="softwareVersion != null" >
        software_version = #{softwareVersion,jdbcType=VARCHAR},
      </if>
      <if test="vsersion != null" >
        vsersion = #{vsersion,jdbcType=VARCHAR},
      </if>
      <if test="unitType != null" >
        unit_type = #{unitType,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="feedbackTime != null" >
        feedback_time = #{feedbackTime,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.gukeer.attendance.persistence.entity.FeedBack" >
    update feedback
    set apply_name = #{applyName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      context = #{context,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      system_operate = #{systemOperate,jdbcType=VARCHAR},
      software_version = #{softwareVersion,jdbcType=VARCHAR},
      vsersion = #{vsersion,jdbcType=VARCHAR},
      unit_type = #{unitType,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      feedback_time = #{feedbackTime,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.gukeer.smartBoard.persistence.dao.ScanLogMapper" >
  <resultMap id="BaseResultMap" type="cc.gukeer.smartBoard.persistence.entity.ScanLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mac" property="mac" jdbcType="VARCHAR" />
    <result column="ring_num" property="ringNum" jdbcType="INTEGER" />
    <result column="ring_signal" property="ringSignal" jdbcType="INTEGER" />
    <result column="station_mac" property="stationMac" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="last_update" property="lastUpdate" jdbcType="BIGINT" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mac, ring_num, ring_signal, station_mac, location, name, student_id, student_name, 
    type, status, last_update, remarks
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.gukeer.smartBoard.persistence.entity.ScanLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from scan_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from scan_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from scan_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.gukeer.smartBoard.persistence.entity.ScanLogExample" >
    delete from scan_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.gukeer.smartBoard.persistence.entity.ScanLog" >
    insert into scan_log (id, mac, ring_num, 
      ring_signal, station_mac, location, 
      name, student_id, student_name, 
      type, status, last_update, 
      remarks)
    values (#{id,jdbcType=INTEGER}, #{mac,jdbcType=VARCHAR}, #{ringNum,jdbcType=INTEGER}, 
      #{ringSignal,jdbcType=INTEGER}, #{stationMac,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{lastUpdate,jdbcType=BIGINT}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cc.gukeer.smartBoard.persistence.entity.ScanLog" >
    insert into scan_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mac != null" >
        mac,
      </if>
      <if test="ringNum != null" >
        ring_num,
      </if>
      <if test="ringSignal != null" >
        ring_signal,
      </if>
      <if test="stationMac != null" >
        station_mac,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="lastUpdate != null" >
        last_update,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mac != null" >
        #{mac,jdbcType=VARCHAR},
      </if>
      <if test="ringNum != null" >
        #{ringNum,jdbcType=INTEGER},
      </if>
      <if test="ringSignal != null" >
        #{ringSignal,jdbcType=INTEGER},
      </if>
      <if test="stationMac != null" >
        #{stationMac,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="lastUpdate != null" >
        #{lastUpdate,jdbcType=BIGINT},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update scan_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mac != null" >
        mac = #{record.mac,jdbcType=VARCHAR},
      </if>
      <if test="record.ringNum != null" >
        ring_num = #{record.ringNum,jdbcType=INTEGER},
      </if>
      <if test="record.ringSignal != null" >
        ring_signal = #{record.ringSignal,jdbcType=INTEGER},
      </if>
      <if test="record.stationMac != null" >
        station_mac = #{record.stationMac,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.studentName != null" >
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdate != null" >
        last_update = #{record.lastUpdate,jdbcType=BIGINT},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update scan_log
    set id = #{record.id,jdbcType=INTEGER},
      mac = #{record.mac,jdbcType=VARCHAR},
      ring_num = #{record.ringNum,jdbcType=INTEGER},
      ring_signal = #{record.ringSignal,jdbcType=INTEGER},
      station_mac = #{record.stationMac,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=INTEGER},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      last_update = #{record.lastUpdate,jdbcType=BIGINT},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.gukeer.smartBoard.persistence.entity.ScanLog" >
    update scan_log
    <set >
      <if test="mac != null" >
        mac = #{mac,jdbcType=VARCHAR},
      </if>
      <if test="ringNum != null" >
        ring_num = #{ringNum,jdbcType=INTEGER},
      </if>
      <if test="ringSignal != null" >
        ring_signal = #{ringSignal,jdbcType=INTEGER},
      </if>
      <if test="stationMac != null" >
        station_mac = #{stationMac,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="lastUpdate != null" >
        last_update = #{lastUpdate,jdbcType=BIGINT},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.gukeer.smartBoard.persistence.entity.ScanLog" >
    update scan_log
    set mac = #{mac,jdbcType=VARCHAR},
      ring_num = #{ringNum,jdbcType=INTEGER},
      ring_signal = #{ringSignal,jdbcType=INTEGER},
      station_mac = #{stationMac,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      student_name = #{studentName,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      last_update = #{lastUpdate,jdbcType=BIGINT},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
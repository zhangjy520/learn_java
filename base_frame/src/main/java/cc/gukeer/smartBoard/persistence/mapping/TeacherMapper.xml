<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.gukeer.smartBoard.persistence.dao.TeacherMapper" >
  <resultMap id="BaseResultMap" type="cc.gukeer.smartBoard.persistence.entity.Teacher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="quan_pin" property="quanPin" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="identity" property="identity" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="is_manage" property="isManage" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="title_id" property="titleId" jdbcType="INTEGER" />
    <result column="no" property="no" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="start_work" property="startWork" jdbcType="BIGINT" />
    <result column="jszw" property="jszw" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, school_id, department_id, name, quan_pin, gender, identity, account, is_manage, 
    role_id, title_id, no, phone, mobile, email, start_work, jszw, create_by, create_date, 
    update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.gukeer.smartBoard.persistence.entity.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.gukeer.smartBoard.persistence.entity.TeacherExample" >
    delete from user_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.gukeer.smartBoard.persistence.entity.Teacher" >
    insert into user_teacher (id, school_id, department_id, 
      name, quan_pin, gender, 
      identity, account, is_manage, 
      role_id, title_id, no, 
      phone, mobile, email, 
      start_work, jszw, create_by, 
      create_date, update_by, update_date, 
      remarks, del_flag)
    values (#{id,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{quanPin,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{identity,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{isManage,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER}, #{titleId,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{startWork,jdbcType=BIGINT}, #{jszw,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, 
      #{createDate,jdbcType=BIGINT}, #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=BIGINT}, 
      #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cc.gukeer.smartBoard.persistence.entity.Teacher" >
    insert into user_teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="quanPin != null" >
        quan_pin,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="identity != null" >
        identity,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="isManage != null" >
        is_manage,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="titleId != null" >
        title_id,
      </if>
      <if test="no != null" >
        no,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="startWork != null" >
        start_work,
      </if>
      <if test="jszw != null" >
        jszw,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quanPin != null" >
        #{quanPin,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="identity != null" >
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="isManage != null" >
        #{isManage,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="titleId != null" >
        #{titleId,jdbcType=INTEGER},
      </if>
      <if test="no != null" >
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="startWork != null" >
        #{startWork,jdbcType=BIGINT},
      </if>
      <if test="jszw != null" >
        #{jszw,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_teacher
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.quanPin != null" >
        quan_pin = #{record.quanPin,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.identity != null" >
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.isManage != null" >
        is_manage = #{record.isManage,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.titleId != null" >
        title_id = #{record.titleId,jdbcType=INTEGER},
      </if>
      <if test="record.no != null" >
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.startWork != null" >
        start_work = #{record.startWork,jdbcType=BIGINT},
      </if>
      <if test="record.jszw != null" >
        jszw = #{record.jszw,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=BIGINT},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_teacher
    set id = #{record.id,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      quan_pin = #{record.quanPin,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      identity = #{record.identity,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      is_manage = #{record.isManage,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      title_id = #{record.titleId,jdbcType=INTEGER},
      no = #{record.no,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      start_work = #{record.startWork,jdbcType=BIGINT},
      jszw = #{record.jszw,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=BIGINT},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.gukeer.smartBoard.persistence.entity.Teacher" >
    update user_teacher
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quanPin != null" >
        quan_pin = #{quanPin,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="identity != null" >
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="isManage != null" >
        is_manage = #{isManage,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="titleId != null" >
        title_id = #{titleId,jdbcType=INTEGER},
      </if>
      <if test="no != null" >
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="startWork != null" >
        start_work = #{startWork,jdbcType=BIGINT},
      </if>
      <if test="jszw != null" >
        jszw = #{jszw,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.gukeer.smartBoard.persistence.entity.Teacher" >
    update user_teacher
    set school_id = #{schoolId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      quan_pin = #{quanPin,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      identity = #{identity,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      is_manage = #{isManage,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      title_id = #{titleId,jdbcType=INTEGER},
      no = #{no,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      start_work = #{startWork,jdbcType=BIGINT},
      jszw = #{jszw,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=BIGINT},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
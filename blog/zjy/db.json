{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/paste/pasted-2.png","path":"paste/pasted-2.png","modified":1,"renderable":0},{"_id":"source/paste/1.png","path":"paste/1.png","modified":1,"renderable":0},{"_id":"source/paste/pasted-0.png","path":"paste/pasted-0.png","modified":1,"renderable":0},{"_id":"source/paste/pasted-1.png","path":"paste/pasted-1.png","modified":1,"renderable":0},{"_id":"source/paste/pasted-3.png","path":"paste/pasted-3.png","modified":1,"renderable":0},{"_id":"source/paste/pasted-4.png","path":"paste/pasted-4.png","modified":1,"renderable":0},{"_id":"source/paste/pasted-5.png","path":"paste/pasted-5.png","modified":1,"renderable":0},{"_id":"themes/concise2/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/fontdiao.woff","path":"font/fontdiao.woff","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/author.jpg","path":"img/author.jpg","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/fontdiao.eot","path":"font/fontdiao.eot","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/fontdiao.ttf","path":"font/fontdiao.ttf","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/cc-by-nc-sa.svg","path":"img/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/cc-by-nc-nd.svg","path":"img/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/cc-by-nc.svg","path":"img/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/cc-by-nd.svg","path":"img/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/cc-by.svg","path":"img/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/cc-by-sa.svg","path":"img/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/cc-zero.svg","path":"img/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/logo.png","path":"img/logo.png","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/scrollup.png","path":"img/scrollup.png","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/jacman.jpg","path":"img/jacman.jpg","modified":1,"renderable":1},{"_id":"themes/concise2/source/js/gallery.js","path":"js/gallery.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/logo.svg","path":"img/logo.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/js/jquery.qrcode-0.12.0.min.js","path":"js/jquery.qrcode-0.12.0.min.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/js/uyan.js","path":"js/uyan.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/js/jsapi.js","path":"js/jsapi.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/js/embed.js","path":"js/embed.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/plugin/clock.html","path":"plugin/clock.html","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/fontdiao.svg","path":"font/fontdiao.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/Ansley Display-Inline.ttf","path":"css/fonts/Ansley Display-Inline.ttf","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/Antoine-Bold.ttf","path":"css/fonts/Antoine-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/capitalsregular.ttf","path":"css/fonts/capitalsregular.ttf","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/concise2/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/concise2/source/img/banner.jpg","path":"img/banner.jpg","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/Ansley.jpg","path":"css/fonts/Ansley.jpg","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/PetitJardin-Regular.ttf","path":"css/fonts/PetitJardin-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/Yore.jpg","path":"css/fonts/Yore.jpg","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/capitalsregular.jpg","path":"css/fonts/capitalsregular.jpg","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/PetitJardin.jpg","path":"css/fonts/PetitJardin.jpg","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/Yore Script.ttf","path":"css/fonts/Yore Script.ttf","modified":1,"renderable":1},{"_id":"themes/concise2/source/css/fonts/kaiti.ttf","path":"css/fonts/kaiti.ttf","modified":1,"renderable":1}],"Cache":[{"_id":"themes/concise2/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1500460828618},{"_id":"themes/concise2/README.md","hash":"75a5c9fbd7c9cec4d2f277042d2fee550e4936be","modified":1500460828618},{"_id":"themes/concise2/LICENSE","hash":"931516aa36c53eb7843c83d82662eb50cc3c4367","modified":1500460828618},{"_id":"themes/concise2/_config.yml","hash":"5b4da564a8cd640acb222fd174fb3b390b207bfb","modified":1527752405195},{"_id":"themes/concise2/README_zh.md","hash":"d6014b16eaccc97dc54a7779c9e36003752410e1","modified":1500460828618},{"_id":"source/_discarded/mybatis-generator.md","hash":"2ab413812215bbb761bfcb78fc5a745432a5af8f","modified":1513320719348},{"_id":"source/_posts/Query前端参数传递方案.md","hash":"23e21c4c7d0dbf77f42cb83c4081e0e9a95abb1a","modified":1501227656304},{"_id":"source/_posts/active-mq-导致的一些阻塞问题.md","hash":"b86985b437c0a1d71d228cd61e71218c4c0ee69b","modified":1524027132277},{"_id":"source/_posts/active_mq.md","hash":"da378f88e45453761269b0d78bb49c9bc0f0c0ba","modified":1500460828606},{"_id":"source/_posts/data_hub.md","hash":"f70f7f1b34b6471dce782354f7fb56eaad7dafb2","modified":1500460828606},{"_id":"source/_posts/docker内存满了.md","hash":"dcc19b94d837f2a639da439b1e66e87aaf8c22f1","modified":1504012679907},{"_id":"source/_posts/docker私有仓库搭建.md","hash":"4c97a7954764e20cbc0990c4ffbf6c9b3d30e4c9","modified":1500460828606},{"_id":"source/_posts/dwr.md","hash":"b98f288f01a06397b1f27b012763da4e280288a7","modified":1500460828606},{"_id":"source/_posts/fileCount.md","hash":"e05c21bbd3e718adecffc636ab312dd56ec9afcb","modified":1519980959256},{"_id":"source/_posts/first.md","hash":"f97bfff793acf4e4e653705a5b933c7b414c7dfd","modified":1500460828606},{"_id":"source/_posts/heder.md","hash":"9b248e6e7b2b0602625e2aa917667f2b00df2076","modified":1500460828610},{"_id":"source/_posts/http升级https协议-tomcat-nginx.md","hash":"6fedeef6d13ebd7ac84f0b2b277653be39ec0fe9","modified":1534215637930},{"_id":"source/_posts/java_scroll_pdf.md","hash":"6929c129309c013b4690b071ec5cb1a8470c310c","modified":1500460828610},{"_id":"source/_posts/java导入文件视频文件并使用nginx做静态资源代理.md","hash":"93bc32105d11420486bbe35af6462779d70f3d6a","modified":1527668083046},{"_id":"source/_posts/jdk.md","hash":"7d37d2a885096958e8673b1a02dd9c6cf9944a45","modified":1500460828610},{"_id":"source/_posts/jq-java下分别合并指定列单元格.md","hash":"bfaeeb012b3fa8fa4e0f08028c877d9f278b0aef","modified":1537340633549},{"_id":"source/_posts/jvm调试.md","hash":"d0c8b715f24cd705114fbdb0723a7b76a09a50a2","modified":1514257376588},{"_id":"source/_posts/mybatis-generator-源码浅析与修改.md","hash":"6043691fc4ce3a9f588a639f0d141f571a3466cf","modified":1525829980181},{"_id":"source/_posts/mybatis-genrator的自定义注释和修改生成文件名字.md","hash":"929439c912344cd7058847366178486b6f961fe5","modified":1527571159065},{"_id":"source/_posts/mybatis-plus代码生成步骤.md","hash":"6a015e316dbd08344d21b871997e383b53e0338e","modified":1527753269106},{"_id":"source/_posts/mybatis.md","hash":"7bef11061262cfcc8ed8ddc283db70084f16823d","modified":1513137087608},{"_id":"source/_posts/mysql.md","hash":"3ac235b5f555080abaa9bfe850fcd72ebd13a2eb","modified":1528163617054},{"_id":"source/_posts/mysql数据库灾备方案——chapter02（全备-增量）.md","hash":"5ec7c2fad7e3002bda9ebec0fac4b7785de4c1fd","modified":1511233723782},{"_id":"source/_posts/nginx.md","hash":"e2e0e92f7819e1bb81c2be3acc344cfc40e6750c","modified":1501552727776},{"_id":"source/_posts/node_js_pa_chong.md","hash":"f64d87a36cd5c3d2eb2361300ab2dc33409f38cb","modified":1500460828614},{"_id":"source/_posts/ocker私有仓库使用.md","hash":"3a82fd9d4c063247b88b7d29e0cb95c776080333","modified":1500460828614},{"_id":"source/_posts/redis_weather.md","hash":"4d8b776c38e67fd96baaf143753f0f82d276e4b9","modified":1519980866700},{"_id":"source/_posts/state_design_pattern.md","hash":"b8524df8889d4b48dbbec9c38587031823a0978c","modified":1500460828614},{"_id":"source/_posts/timeDocker.md","hash":"73c5f437b6d58fa4001f6cdd203d845ef46e8bf8","modified":1500460828618},{"_id":"source/_posts/使用CountDownLatch实现多线程同步.md","hash":"66988767c430308ab2229196c5248583d01cb379","modified":1537421757533},{"_id":"source/_posts/异构数据库同步方案1-触发器.md","hash":"0d3f8b150e133de7f75f0c2cddefba85fd1e9148","modified":1527749245770},{"_id":"source/_posts/怎样为我的博客添加图片.md","hash":"c121003f67a72de093dde8662353f4a92d31770e","modified":1527749180348},{"_id":"source/_posts/批处理脚本初识.md","hash":"c21d9523ef60bbdde4c69ca9bb78e3a2abd7a131","modified":1525831327019},{"_id":"source/_posts/服务器定时任务，部署相关.md","hash":"a0af82b5816088a2e869a710ee77190e3762e7d4","modified":1511173584117},{"_id":"source/paste/pasted-2.png","hash":"0ce9bd57cd340600b8783d8bcf0feda6c3e0ad1b","modified":1534214240237},{"_id":"source/search/index.md","hash":"08a7a258d4f15d5a8ca5e16404235c6b1fe97707","modified":1500460828618},{"_id":"themes/concise2/languages/zh-CN.yml","hash":"1f3b9d00dd4322352b0c9c82a76dc9865a616d41","modified":1500460828618},{"_id":"themes/concise2/languages/default.yml","hash":"eea72d6138497287c0b3f4bd93e4f6f62b7aff37","modified":1500460828618},{"_id":"themes/concise2/languages/zh-TW.yml","hash":"61a02ba818d641579a86fcd7f5926ab1e6ab5f70","modified":1500460828618},{"_id":"themes/concise2/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1500460828622},{"_id":"themes/concise2/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1500460828622},{"_id":"themes/concise2/layout/index.ejs","hash":"3351633f1071449c99ff88aa78bbe9a51f5fca07","modified":1500460828622},{"_id":"themes/concise2/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1500460828622},{"_id":"themes/concise2/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1500460828622},{"_id":"themes/concise2/layout/layout.ejs","hash":"5b4289a4526899809b9c2facea535367ff51ba2b","modified":1500460828622},{"_id":"themes/concise2/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1500460828622},{"_id":"themes/concise2/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1500460828622},{"_id":"source/paste/1.png","hash":"11efe4ae29382e955173765f61e3d6c94f52d7dd","modified":1527748940966},{"_id":"source/paste/pasted-0.png","hash":"f98c58257f9efeb0bac9a2a30c5a1f1320adb2a5","modified":1525831500312},{"_id":"source/paste/pasted-1.png","hash":"318f14ab9cc2ddc91fe08de48491bcc715fc2838","modified":1525832043161},{"_id":"source/paste/pasted-3.png","hash":"d1a8d9337aa6455f13974735f829a06f528873f0","modified":1534215570586},{"_id":"source/paste/pasted-4.png","hash":"dd8b6505c34e74fcd6f7c0f4bcedd162bbdb62b0","modified":1536833150166},{"_id":"source/paste/pasted-5.png","hash":"49f9d3f5b60dd8133f38a0e10d78955a4ff9c5dc","modified":1536833279147},{"_id":"source/_posts/active_mq/user.png","hash":"322b0ad81ae15bc55ed63aeac211cda17e2359cd","modified":1500460828606},{"_id":"source/_posts/http升级https协议-tomcat-nginx/pasted-2.png","hash":"0ce9bd57cd340600b8783d8bcf0feda6c3e0ad1b","modified":1534214533498},{"_id":"source/_posts/mybatis-plus代码生成步骤/1.png","hash":"0196e8c64489b59fb41964847ab0a6ae58f228ca","modified":1527748357398},{"_id":"source/_posts/nginx/3.png","hash":"f96c17490d00443bec418747f9260dcbba98e665","modified":1500460828614},{"_id":"source/_posts/nginx/4.png","hash":"e8cac80efe8ed56c6111cddf12c5108d0c73ac50","modified":1500460828614},{"_id":"source/_posts/nginx/5.png","hash":"3644270a459e9b38c18a9c9df5b62d8b23703e56","modified":1500460828614},{"_id":"source/_posts/nginx/7.png","hash":"237eee6b9778c5ddb738d435d1b21653dad5b898","modified":1500460828614},{"_id":"source/_posts/state_design_pattern/1.png","hash":"b13cd856e2e8efeb2dcd68ec351fcb657d8ccbd2","modified":1500460828614},{"_id":"source/_posts/state_design_pattern/2.png","hash":"af7426d8dc4050d84caaaff0405772f250362f92","modified":1500460828614},{"_id":"source/_posts/state_design_pattern/3.png","hash":"73e5a55d06abce5fb7b2251d64e6109b2006bc74","modified":1500460828618},{"_id":"source/_posts/state_design_pattern/4.png","hash":"5caf4b9e4408ae953e6b2a244d091004f87e9d3c","modified":1500460828618},{"_id":"source/_posts/timeDocker/2.png","hash":"1e311bba9fc41c0cc2ccf9ec5ac80d05f364968e","modified":1500460828618},{"_id":"source/_posts/timeDocker/3.png","hash":"6e230fbb8222818b489cb15164340b8af03acae2","modified":1500460828618},{"_id":"source/_posts/timeDocker/4.png","hash":"1a1882d8df58d4c6bc0fe54880d46e06b25db0af","modified":1500460828618},{"_id":"source/_posts/timeDocker/6.png","hash":"44f38a22d58874a487f1b0b25b33fd6a01896717","modified":1500460828618},{"_id":"source/_posts/批处理脚本初识/jiegou.png","hash":"127c54467069e692fa8ad9c302fd6f9987cf84b4","modified":1525829773847},{"_id":"themes/concise2/layout/_partial/archive.ejs","hash":"2c7395e7563fe016521712a645c28a13f952d52a","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/analytics.ejs","hash":"697601996220fe0a0f9cd628be67dec3c86ae2aa","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/after_footer.ejs","hash":"fb44e2fd84a07d21652272d439d61ca20621e256","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/article.ejs","hash":"261ecacb8456f4cb972632b6a9103860fa63b9a3","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/article_row.ejs","hash":"4cb855d91ece7f67b2ca0992fffa55472d0b9c93","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/head.ejs","hash":"761941be4922cd3c177c8130296b909bf7db5c09","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/footer.ejs","hash":"af70faf8efb30b47ac9272d9b2d2ae3b3a36a072","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/mathjax.ejs","hash":"d42994ac696f52ba99c1cbac382cd76d5b04a3e8","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/header.ejs","hash":"18515612344ff048b9372b91b7eef6f3b143801f","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/search.ejs","hash":"0bb36ba2557953f4ab4f4a9df9be81092bdceaad","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/sidebar.ejs","hash":"c4f527fff0070fbe65919053a16224412317f40d","modified":1500460828622},{"_id":"themes/concise2/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1500460828622},{"_id":"themes/concise2/layout/_partial/totop.ejs","hash":"bea5bb7cb9350b8af7d97a8d223af63a5b30ab78","modified":1500460828622},{"_id":"themes/concise2/layout/_partial/tinysou_search.ejs","hash":"06ecddc8a9d40b480fe2e958af1dab857a9d5441","modified":1500460828622},{"_id":"themes/concise2/layout/_widget/category.ejs","hash":"c1fae96b5053da021bcc04ab2ce5c2c8d30de8a2","modified":1500460828622},{"_id":"themes/concise2/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1500460828622},{"_id":"themes/concise2/layout/_widget/github-card.ejs","hash":"5c759b6ea214bac56a393247de27e67ce73fb33f","modified":1500460828622},{"_id":"themes/concise2/layout/_widget/douban.ejs","hash":"e3820c36169e88663e6c9177666b2904c1ce47e6","modified":1500460828622},{"_id":"themes/concise2/layout/_widget/links.ejs","hash":"e49868063439c2092cdf9a8ec82cc295b0e42f66","modified":1500460828622},{"_id":"themes/concise2/layout/_widget/tag.ejs","hash":"7e82ad9c916b9ce871b2f65ce8f283c5ba47947b","modified":1500460828622},{"_id":"themes/concise2/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1500460828622},{"_id":"themes/concise2/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1500460828622},{"_id":"themes/concise2/layout/_widget/weibo.ejs","hash":"70909e81b096bdeb286182f9e355e10ba4239699","modified":1500460828622},{"_id":"themes/concise2/source/css/style.styl","hash":"a0a45af186a72ae68979bf26f2a5d0d2303189ca","modified":1500460828654},{"_id":"themes/concise2/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1500460828654},{"_id":"themes/concise2/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1500460828654},{"_id":"themes/concise2/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1500460828658},{"_id":"themes/concise2/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1500460828658},{"_id":"themes/concise2/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1500460828658},{"_id":"themes/concise2/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1500460828658},{"_id":"themes/concise2/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1500460828658},{"_id":"themes/concise2/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1500460828658},{"_id":"themes/concise2/source/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1500460828662},{"_id":"themes/concise2/source/img/author.jpg","hash":"ad4d1e7a72db1161002c5e32a58ae7244a672120","modified":1500460828662},{"_id":"themes/concise2/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1500460828658},{"_id":"themes/concise2/source/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1500460828662},{"_id":"themes/concise2/source/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1500460828662},{"_id":"themes/concise2/source/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1500460828662},{"_id":"themes/concise2/source/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1500460828662},{"_id":"themes/concise2/source/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1500460828662},{"_id":"themes/concise2/source/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1500460828662},{"_id":"themes/concise2/source/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1500460828662},{"_id":"themes/concise2/source/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1500460828662},{"_id":"themes/concise2/source/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1500460828662},{"_id":"themes/concise2/source/img/favicon.ico","hash":"d0dcb08d081531e749ecb3aca099cc2e313d7129","modified":1500460828662},{"_id":"themes/concise2/source/img/logo.png","hash":"56fead4d3d5578026924d44a5d0b58d07f17ff57","modified":1500460828662},{"_id":"themes/concise2/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1500460828662},{"_id":"themes/concise2/source/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1500460828662},{"_id":"themes/concise2/source/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1500460828666},{"_id":"themes/concise2/source/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1500460828662},{"_id":"themes/concise2/source/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1500460828666},{"_id":"themes/concise2/source/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1500460828666},{"_id":"themes/concise2/source/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1500460828666},{"_id":"themes/concise2/source/js/uyan.js","hash":"81b765838018f35ba6bb6470319f9b15e679283d","modified":1500460828666},{"_id":"themes/concise2/source/js/jsapi.js","hash":"48622505e8e2a150c7caa7972ee884ab94a9f530","modified":1500460828666},{"_id":"themes/concise2/source/js/embed.js","hash":"ad5ae707f1b7831187e414d613570e46939ab1c6","modified":1500460828662},{"_id":"themes/concise2/source/plugin/clock.html","hash":"a831afafaa4656de34a9892dc4d0a71283960093","modified":1500460828666},{"_id":"source/_posts/active_mq/index.png","hash":"235bd54bd8c847ce54cacdd4415e06a9583ad642","modified":1500460828606},{"_id":"source/_posts/http升级https协议-tomcat-nginx/pasted-3.png","hash":"d1a8d9337aa6455f13974735f829a06f528873f0","modified":1534215620362},{"_id":"source/_posts/mysql/1.png","hash":"7e86d12e1d9a81480a4116c728ece7416fef6823","modified":1500460828610},{"_id":"source/_posts/mysql/2.png","hash":"1311521d8b87bc951c2108247d63173b251dcf96","modified":1500460828614},{"_id":"source/_posts/nginx/1.png","hash":"7e6d1afc199ab651de2c107d7223037cd6149c1d","modified":1500460828614},{"_id":"source/_posts/nginx/2.png","hash":"3861ef8aa0a7ae2db185288b0591d5924439c5fc","modified":1500460828614},{"_id":"source/_posts/nginx/6.png","hash":"73cabfc91b1b92cc3a693219d567c67753f1ba6a","modified":1500460828614},{"_id":"source/_posts/timeDocker/1.png","hash":"067c5434d557763db404f26dc55a84eb56fbbc12","modified":1500460828618},{"_id":"source/_posts/timeDocker/5.png","hash":"3d2f5e09d70abccaed45a97c9b3a923e13db9f78","modified":1500460828618},{"_id":"source/_posts/怎样为我的博客添加图片/1.png","hash":"11efe4ae29382e955173765f61e3d6c94f52d7dd","modified":1527749008993},{"_id":"source/_posts/怎样为我的博客添加图片/pasted-0.png","hash":"f98c58257f9efeb0bac9a2a30c5a1f1320adb2a5","modified":1525832474734},{"_id":"themes/concise2/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1500460828658},{"_id":"themes/concise2/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1500460828658},{"_id":"themes/concise2/source/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1500460828662},{"_id":"themes/concise2/source/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1500460828666},{"_id":"source/_posts/异构数据库同步方案1-触发器/pasted-1.png","hash":"27b5b30b81101d2c962ac65abee7806f87403f11","modified":1525832758943},{"_id":"themes/concise2/layout/_partial/post/article.ejs","hash":"b09e3acea7076e1f01dfe0c2295e19951ea09437","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/post/catetags.ejs","hash":"0e37bababc8f4659f5b59a552a946b46d89e4158","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/post/comment.ejs","hash":"3ed6e0e543a477d28f3905dbd9a534119daee243","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/post/footer.ejs","hash":"b12ec08a5845a3d8c01257614f1dfead879c87d2","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/post/header.ejs","hash":"36a705942b691abe0d643ea8afa339981b32f6f2","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/post/gallery.ejs","hash":"fafc2501d7e65983b0f5c2b58151ca12e57c0574","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/post/pagination.ejs","hash":"7de9c07a4c968429a8088c31a28b7f3a993ded1b","modified":1500460828618},{"_id":"themes/concise2/layout/_partial/post/jiathis.ejs","hash":"d7f5960039ac74924559ab6ba03c64457b8f0966","modified":1500460828618},{"_id":"themes/concise2/source/css/_base/font.styl","hash":"c8a0faf43b08e37ad07a5669db76d595da966159","modified":1500460828622},{"_id":"themes/concise2/source/css/_base/public.styl","hash":"380f059568847203897bd1fa6b2301d76b21e689","modified":1500460828622},{"_id":"themes/concise2/source/css/_base/variable.styl","hash":"5e0d1850a10fb7df71e504393af8fcc29ce3edd3","modified":1500460828622},{"_id":"themes/concise2/source/css/_partial/article.styl","hash":"c69641b4a34a8c62986b335414413dbde26de25e","modified":1500460828622},{"_id":"themes/concise2/source/css/_partial/aside.styl","hash":"506fde1d67ce750452cbe84bee01a19c7d027c5e","modified":1500460828622},{"_id":"themes/concise2/source/css/_partial/footer.styl","hash":"20d6638d25d9137657cc188b8cfdaf397be989af","modified":1500460828622},{"_id":"themes/concise2/source/css/_partial/gallery.styl","hash":"7246809f4ce3166ec1b259bf475cae1a48e29aad","modified":1500460828622},{"_id":"themes/concise2/source/css/_partial/header.styl","hash":"a4b8db0822c4190636e69cfc41e0c0a994d6b0e8","modified":1500460828622},{"_id":"themes/concise2/source/css/_partial/helper.styl","hash":"1136600932b97534b88465bf05ef313630b2de3d","modified":1500460828622},{"_id":"themes/concise2/source/css/_partial/index.styl","hash":"a72ff14effd276015264f870f47ed8f8413bf5d3","modified":1500460828622},{"_id":"themes/concise2/source/css/_partial/totop.styl","hash":"96363d7c5aaed5f649667fc0752a62620a67e872","modified":1500460828622},{"_id":"themes/concise2/source/css/fonts/Ansley Display-Inline.ttf","hash":"9c4198e95db3ceb832d7e54b13f6e13c7256673e","modified":1500460828622},{"_id":"themes/concise2/source/css/fonts/Antoine-Bold.ttf","hash":"f6056f8c6f268c272a2d1c0d12465862b2bdad89","modified":1500460828622},{"_id":"themes/concise2/source/css/fonts/capitalsregular.ttf","hash":"09f64c2ae78d662953711656fd306a4d1512955f","modified":1500460828630},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1500460828658},{"_id":"themes/concise2/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1500460828658},{"_id":"themes/concise2/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1500460828622},{"_id":"source/_posts/common/images/mybatis_mapper.png","hash":"ccbcb2f0cdbfe47fffc92ef1f392eab548ec35ab","modified":1513320934909},{"_id":"source/_posts/common/images/pasted-0.png","hash":"0a4710f08f243b08febaf495ec91f1e7ccc8ac47","modified":1525830909234},{"_id":"source/_posts/mybatis-generator-源码浅析与修改/images/mybatis_mapper.png","hash":"ccbcb2f0cdbfe47fffc92ef1f392eab548ec35ab","modified":1513321035013},{"_id":"themes/concise2/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1500460828658},{"_id":"themes/concise2/source/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1500460828662},{"_id":"themes/concise2/source/css/_base/highlight/highlight.styl","hash":"91b62bfc58390b0d5db782a75be6965ee3665eb3","modified":1500460828622},{"_id":"themes/concise2/source/css/_base/highlight/theme.styl","hash":"e3a59bd427ba37a54ead9eeba9a5356b3f720a48","modified":1500460828622},{"_id":"themes/concise2/source/css/fonts/Ansley.jpg","hash":"6f6d4ace70fb2a1fb3b51a84209e65a86c7d9e25","modified":1500460828622},{"_id":"themes/concise2/source/css/fonts/PetitJardin-Regular.ttf","hash":"340228da9403e5d06208aee116a3417f6ff3e112","modified":1500460828622},{"_id":"themes/concise2/source/css/fonts/Yore.jpg","hash":"48af544b559ab264df9a5c2a31a1dd3471681858","modified":1500460828626},{"_id":"themes/concise2/source/css/fonts/capitalsregular.jpg","hash":"af600026befc5d9e00f4cdeded145f7929c2da0c","modified":1500460828630},{"_id":"themes/concise2/source/css/fonts/PetitJardin.jpg","hash":"f4689acc45c75946d9546511224a52f994bd25b3","modified":1500460828626},{"_id":"source/_posts/mysql/3.png","hash":"b29cf362a2022493825409612636f9a44300b163","modified":1525832930792},{"_id":"themes/concise2/source/css/fonts/Yore Script.ttf","hash":"e4d5bb87512789ee435b13a4cd7042b2af8b8741","modified":1500460828626},{"_id":"source/_posts/first/images/tom.png","hash":"db307e512ff71137bf07f9f13a19117a607cfbef","modified":1500460828610},{"_id":"themes/concise2/source/css/fonts/kaiti.ttf","hash":"d3a0736027f438306d771cf0965bb309118eb975","modified":1500460828654},{"_id":"public/search/index.html","hash":"a60d53c5cfeab8af4676548f8da219c6307147b2","modified":1537421783623},{"_id":"public/categories/a/index.html","hash":"93db95234294d3dda1dfab5786d96da4ab3e750c","modified":1537421783641},{"_id":"public/archives/index.html","hash":"46f68d7d6f314a2a1081f52f5a161afecb90aef0","modified":1537421783642},{"_id":"public/archives/page/2/index.html","hash":"089b7ef80b2df99e00eeac5b009b9a2b34c37ab4","modified":1537421783642},{"_id":"public/archives/page/3/index.html","hash":"e006d8859074a088ef6274c2d840c184d749f721","modified":1537421783642},{"_id":"public/archives/page/4/index.html","hash":"fcce09c2d57288c460133a5084cd91b5d968107f","modified":1537421783642},{"_id":"public/archives/2016/index.html","hash":"407ad294395400899f2a876191815adc1763126c","modified":1537421783642},{"_id":"public/archives/2016/05/index.html","hash":"76a75e4958139d056a75a4cd502a7f7c3e8e3d5b","modified":1537421783642},{"_id":"public/archives/2016/09/index.html","hash":"e29cc363077aeec505dae03b94570e6516d33891","modified":1537421783642},{"_id":"public/archives/2017/index.html","hash":"55a5afaeaca8fc9eeac4d6c9965c2207fb59f1b4","modified":1537421783642},{"_id":"public/archives/2017/page/2/index.html","hash":"33d175b1a913b8f8d83883989546eea1d05b6f9c","modified":1537421783642},{"_id":"public/archives/2017/04/index.html","hash":"a6ccccb92d6e3c61f62ab9daf67af1e07f727fb3","modified":1537421783642},{"_id":"public/archives/2017/05/index.html","hash":"dd1111477b7e41cfc1cc1837745a3c5915eaa084","modified":1537421783642},{"_id":"public/archives/2017/07/index.html","hash":"da5d6358b6a1c352a7cb19811e2c894d390fd4a6","modified":1537421783643},{"_id":"public/archives/2017/08/index.html","hash":"053e3a7e301ff34734b068dad50ce216f05f7a3e","modified":1537421783643},{"_id":"public/archives/2017/09/index.html","hash":"3d03eb2d570fc323aaa5fd2743b50f9a5ab228d8","modified":1537421783643},{"_id":"public/archives/2017/11/index.html","hash":"dd68c23155724a6f0d75d240794ce307ea9e157c","modified":1537421783643},{"_id":"public/archives/2017/12/index.html","hash":"750e21b037fcc4622b9702db9db649a43d666cef","modified":1537421783643},{"_id":"public/archives/2018/index.html","hash":"249072faccf02467bf35e3a8752b1bba3708200c","modified":1537421783643},{"_id":"public/archives/2018/03/index.html","hash":"b4142860b3fb73d9729a951609ec56f0708f7c7f","modified":1537421783643},{"_id":"public/archives/2018/05/index.html","hash":"3bee151c79eb6b76a971f9656d4bbd948dcd8f7d","modified":1537421783643},{"_id":"public/archives/2018/08/index.html","hash":"663e537e0c53b651c05bf36c40f13ce21eeccb4a","modified":1537421783643},{"_id":"public/archives/2018/09/index.html","hash":"5316931ae3edb650144355c2bc8eb7e4345da41e","modified":1537421783643},{"_id":"public/index.html","hash":"d4d18503928f9b86434ff3cb002e706c39d328f0","modified":1537421783643},{"_id":"public/page/2/index.html","hash":"4b991431b5a102e85379ae58268d4ec478a3b881","modified":1537421783643},{"_id":"public/page/3/index.html","hash":"f739c09ba89876258a131be3aaff8dd828e4e2e4","modified":1537421783643},{"_id":"public/page/4/index.html","hash":"fe5e6c1a3885270968c17680aea835b29a5b5d74","modified":1537421783643},{"_id":"public/tags/server-linux-ubuntu/index.html","hash":"da74b453e002aebc93591e049ca71fda02c68c70","modified":1537421783643},{"_id":"public/tags/java/index.html","hash":"09fa187964ff0480c53374e6af63f0d95e413ed2","modified":1537421783643},{"_id":"public/tags/docker-ubuntu/index.html","hash":"ee94540ece1be1bf1bc6d0ded284df82e5d459e4","modified":1537421783643},{"_id":"public/tags/js-跨域/index.html","hash":"96bfbde036f6169553c7b033fb43feb278f3d087","modified":1537421783643},{"_id":"public/tags/a/index.html","hash":"652f8ca442c4e578e7f90e7992f034cdeb8bc325","modified":1537421783643},{"_id":"public/tags/node-js/index.html","hash":"edd3b1bb962049bc575166b83b59c36967ddba22","modified":1537421783644},{"_id":"public/tags/java-redis/index.html","hash":"92233537f409d24849dc8b94ab5a399357b452f5","modified":1537421783644},{"_id":"public/2016/05/03/java_scroll_pdf/index.html","hash":"4ef79ae15d215874cb3065f4685a65881d02f867","modified":1537421783644},{"_id":"public/2016/05/03/nginx/index.html","hash":"f95615057a6e4cf3cb7d319195c3169d4915c828","modified":1537421783644},{"_id":"public/2016/05/03/state_design_pattern/index.html","hash":"a433932e22a8677eb4cee2eb15f1298c7af16965","modified":1537421783644},{"_id":"public/2016/09/03/dwr/index.html","hash":"35816582d00cee52d7b26bf3ad7f120b039241f1","modified":1537421783644},{"_id":"public/2017/04/25/data_hub/index.html","hash":"913436d01716d5b14dd09453425a86e36c67e31e","modified":1537421783644},{"_id":"public/2017/04/25/first/index.html","hash":"a9a277b4fec11a743b343afeebea0a5684c180a0","modified":1537421783644},{"_id":"public/2017/05/03/fileCount/index.html","hash":"c8ce9bbe533749a239451ac4d260b6c8e8c9b501","modified":1537421783644},{"_id":"public/2017/05/05/mysql/index.html","hash":"db7e624ad81f6b59dd986f28647c9e84e003bcc7","modified":1537421783644},{"_id":"public/2017/05/05/heder/index.html","hash":"d8d41015300b62f68536a6aa4b66ed7ef1f23960","modified":1537421783644},{"_id":"public/2017/05/05/timeDocker/index.html","hash":"27fc28d223cf15178efd2cf327aa8e93c4590806","modified":1537421783644},{"_id":"public/2017/05/05/active_mq/index.html","hash":"0735a1e806dd42f861b26d1d92aa62d6b1994566","modified":1537421783644},{"_id":"public/2017/05/05/docker私有仓库搭建/index.html","hash":"ed88c32073a3fd11dfa1a73e20b9c611b63c681f","modified":1537421783644},{"_id":"public/2017/05/05/jdk/index.html","hash":"c9e68df25db2a709bdcb67b9775d23d2aaf9e2d3","modified":1537421783644},{"_id":"public/2017/05/05/redis_weather/index.html","hash":"a60cb121b5921f693ac8a50aac025eaa21b15e42","modified":1537421783644},{"_id":"public/2017/05/05/node_js_pa_chong/index.html","hash":"7962a0fd91e0aa01faf07f4b764a8b48bfa5acd7","modified":1537421783644},{"_id":"public/2017/07/19/ocker私有仓库使用/index.html","hash":"4bafeae789dd3664a5f886afa966bf75db3ac84d","modified":1537421783644},{"_id":"public/2017/07/19/Query前端参数传递方案/index.html","hash":"e2cebd4815951713da336b7615370d6120e376f8","modified":1537421783645},{"_id":"public/2017/08/18/docker内存满了/index.html","hash":"844d60c390d209e1ba6f14450802ac50adb06f98","modified":1537421783645},{"_id":"public/2017/09/15/jvm调试/index.html","hash":"db0b826bff00744ae36317f1ea6d5c158c97a21e","modified":1537421783645},{"_id":"public/2017/09/29/active-mq-导致的一些阻塞问题/index.html","hash":"474f7fe6eefb9b67285ec65dcca1585db6019231","modified":1537421783645},{"_id":"public/2017/11/20/服务器定时任务，部署相关/index.html","hash":"8fb5982474f171bffb35af086367dcc48c96a915","modified":1537421783645},{"_id":"public/2017/11/21/mysql数据库灾备方案——chapter02（全备-增量）/index.html","hash":"cc1d18273c99159bd4aab728b23718d1eaebe58d","modified":1537421783645},{"_id":"public/2017/12/13/mybatis/index.html","hash":"a7a1976b9d37f4175a46be36f26abdb8066f6962","modified":1537421783645},{"_id":"public/2017/12/15/mybatis-generator-源码浅析与修改/index.html","hash":"7543269c6b90dd8fca74a5ced8cb3c21d4ca4057","modified":1537421783645},{"_id":"public/2018/03/19/异构数据库同步方案1-触发器/index.html","hash":"db8c0a7df536355f83788334df7b71e8b18e80d3","modified":1537421783645},{"_id":"public/2018/05/08/批处理脚本初识/index.html","hash":"0c2c3679148c607af94237b555a28a390cc7c9bf","modified":1537421783645},{"_id":"public/2018/05/09/怎样为我的博客添加图片/index.html","hash":"c277919b98ef09cab371bda2cbc6904afc9c2053","modified":1537421783645},{"_id":"public/2018/05/29/mybatis-genrator的自定义注释和修改生成文件名字/index.html","hash":"5aef25ce66f789cfc796b0ccda3d6cb6e54253bf","modified":1537421783645},{"_id":"public/2018/05/30/java导入文件视频文件并使用nginx做静态资源代理/index.html","hash":"e09bf9becc8ae46a321e21244210d5ffaee72d55","modified":1537421783645},{"_id":"public/2018/05/31/mybatis-plus代码生成步骤/index.html","hash":"fe1c8dbd789826997cb5fd5fadc53d1344df298c","modified":1537421783645},{"_id":"public/2018/08/14/http升级https协议-tomcat-nginx/index.html","hash":"47e5d1129026fe481000437ec566d85efb3b1e88","modified":1537421783645},{"_id":"public/2018/09/13/jq-java下分别合并指定列单元格/index.html","hash":"ff2779421593ed3a7e1e34edd7cac4972b9e3306","modified":1537421783645},{"_id":"public/2018/09/20/使用CountDownLatch实现多线程同步/index.html","hash":"31df5d632721f4be91e844bf2bb7252fab4dcaa8","modified":1537421783670},{"_id":"public/paste/pasted-2.png","hash":"0ce9bd57cd340600b8783d8bcf0feda6c3e0ad1b","modified":1537421783685},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1537421783685},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1537421783686},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1537421783686},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1537421783686},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1537421783686},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1537421783686},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1537421783686},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1537421783686},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1537421783686},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1537421783686},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1537421783686},{"_id":"public/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1537421783686},{"_id":"public/img/author.jpg","hash":"ad4d1e7a72db1161002c5e32a58ae7244a672120","modified":1537421783686},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1537421783686},{"_id":"public/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1537421783686},{"_id":"public/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1537421783686},{"_id":"public/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537421783686},{"_id":"public/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537421783686},{"_id":"public/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537421783686},{"_id":"public/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537421783687},{"_id":"public/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537421783687},{"_id":"public/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537421783687},{"_id":"public/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537421783687},{"_id":"public/img/favicon.ico","hash":"d0dcb08d081531e749ecb3aca099cc2e313d7129","modified":1537421783687},{"_id":"public/img/logo.png","hash":"56fead4d3d5578026924d44a5d0b58d07f17ff57","modified":1537421783687},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1537421783687},{"_id":"public/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1537421783687},{"_id":"public/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1537421783687},{"_id":"public/css/fonts/Ansley Display-Inline.ttf","hash":"9c4198e95db3ceb832d7e54b13f6e13c7256673e","modified":1537421783687},{"_id":"public/css/fonts/Antoine-Bold.ttf","hash":"f6056f8c6f268c272a2d1c0d12465862b2bdad89","modified":1537421783687},{"_id":"public/css/fonts/capitalsregular.ttf","hash":"09f64c2ae78d662953711656fd306a4d1512955f","modified":1537421783687},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1537421783687},{"_id":"public/2018/05/31/mybatis-plus代码生成步骤/1.png","hash":"0196e8c64489b59fb41964847ab0a6ae58f228ca","modified":1537421783687},{"_id":"public/2018/05/08/批处理脚本初识/jiegou.png","hash":"127c54467069e692fa8ad9c302fd6f9987cf84b4","modified":1537421783687},{"_id":"public/2017/05/05/active_mq/user.png","hash":"322b0ad81ae15bc55ed63aeac211cda17e2359cd","modified":1537421783687},{"_id":"public/2018/08/14/http升级https协议-tomcat-nginx/pasted-2.png","hash":"0ce9bd57cd340600b8783d8bcf0feda6c3e0ad1b","modified":1537421783687},{"_id":"public/2016/05/03/state_design_pattern/1.png","hash":"b13cd856e2e8efeb2dcd68ec351fcb657d8ccbd2","modified":1537421783687},{"_id":"public/2016/05/03/state_design_pattern/2.png","hash":"af7426d8dc4050d84caaaff0405772f250362f92","modified":1537421783687},{"_id":"public/2016/05/03/state_design_pattern/3.png","hash":"73e5a55d06abce5fb7b2251d64e6109b2006bc74","modified":1537421783688},{"_id":"public/2016/05/03/state_design_pattern/4.png","hash":"5caf4b9e4408ae953e6b2a244d091004f87e9d3c","modified":1537421783688},{"_id":"public/2017/05/05/timeDocker/2.png","hash":"1e311bba9fc41c0cc2ccf9ec5ac80d05f364968e","modified":1537421783688},{"_id":"public/2017/05/05/timeDocker/3.png","hash":"6e230fbb8222818b489cb15164340b8af03acae2","modified":1537421783688},{"_id":"public/2017/05/05/timeDocker/4.png","hash":"1a1882d8df58d4c6bc0fe54880d46e06b25db0af","modified":1537421783689},{"_id":"public/2017/05/05/timeDocker/6.png","hash":"44f38a22d58874a487f1b0b25b33fd6a01896717","modified":1537421783689},{"_id":"public/2016/05/03/nginx/3.png","hash":"f96c17490d00443bec418747f9260dcbba98e665","modified":1537421783689},{"_id":"public/2016/05/03/nginx/4.png","hash":"e8cac80efe8ed56c6111cddf12c5108d0c73ac50","modified":1537421783689},{"_id":"public/2016/05/03/nginx/5.png","hash":"3644270a459e9b38c18a9c9df5b62d8b23703e56","modified":1537421783689},{"_id":"public/2016/05/03/nginx/7.png","hash":"237eee6b9778c5ddb738d435d1b21653dad5b898","modified":1537421783689},{"_id":"public/paste/1.png","hash":"11efe4ae29382e955173765f61e3d6c94f52d7dd","modified":1537421784554},{"_id":"public/paste/pasted-0.png","hash":"f98c58257f9efeb0bac9a2a30c5a1f1320adb2a5","modified":1537421784554},{"_id":"public/paste/pasted-1.png","hash":"318f14ab9cc2ddc91fe08de48491bcc715fc2838","modified":1537421784563},{"_id":"public/paste/pasted-3.png","hash":"d1a8d9337aa6455f13974735f829a06f528873f0","modified":1537421784563},{"_id":"public/paste/pasted-4.png","hash":"dd8b6505c34e74fcd6f7c0f4bcedd162bbdb62b0","modified":1537421784563},{"_id":"public/paste/pasted-5.png","hash":"49f9d3f5b60dd8133f38a0e10d78955a4ff9c5dc","modified":1537421784563},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1537421784563},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1537421784564},{"_id":"public/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1537421784564},{"_id":"public/2017/12/15/mybatis-generator-源码浅析与修改/images/mybatis_mapper.png","hash":"ccbcb2f0cdbfe47fffc92ef1f392eab548ec35ab","modified":1537421784564},{"_id":"public/2017/05/05/active_mq/index.png","hash":"235bd54bd8c847ce54cacdd4415e06a9583ad642","modified":1537421784564},{"_id":"public/2018/08/14/http升级https协议-tomcat-nginx/pasted-3.png","hash":"d1a8d9337aa6455f13974735f829a06f528873f0","modified":1537421784564},{"_id":"public/2018/05/09/怎样为我的博客添加图片/1.png","hash":"11efe4ae29382e955173765f61e3d6c94f52d7dd","modified":1537421784564},{"_id":"public/2018/05/09/怎样为我的博客添加图片/pasted-0.png","hash":"f98c58257f9efeb0bac9a2a30c5a1f1320adb2a5","modified":1537421784564},{"_id":"public/2017/05/05/mysql/1.png","hash":"7e86d12e1d9a81480a4116c728ece7416fef6823","modified":1537421784564},{"_id":"public/2017/05/05/mysql/2.png","hash":"1311521d8b87bc951c2108247d63173b251dcf96","modified":1537421784564},{"_id":"public/2017/05/05/timeDocker/1.png","hash":"067c5434d557763db404f26dc55a84eb56fbbc12","modified":1537421784564},{"_id":"public/2017/05/05/timeDocker/5.png","hash":"3d2f5e09d70abccaed45a97c9b3a923e13db9f78","modified":1537421784566},{"_id":"public/2016/05/03/nginx/1.png","hash":"7e6d1afc199ab651de2c107d7223037cd6149c1d","modified":1537421784566},{"_id":"public/2016/05/03/nginx/2.png","hash":"3861ef8aa0a7ae2db185288b0591d5924439c5fc","modified":1537421784566},{"_id":"public/2016/05/03/nginx/6.png","hash":"73cabfc91b1b92cc3a693219d567c67753f1ba6a","modified":1537421784566},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1537421784578},{"_id":"public/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1537421784578},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1537421784578},{"_id":"public/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1537421784578},{"_id":"public/plugin/clock.html","hash":"0968d0bbc18d42357948fb9265813544e87d208e","modified":1537421784578},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1537421784578},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1537421784578},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1537421784578},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1537421784578},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1537421784578},{"_id":"public/css/style.css","hash":"e5fac00996d00a21ce664ee13bd72cb72409ca29","modified":1537421784578},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1537421784578},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1537421784578},{"_id":"public/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1537421784579},{"_id":"public/js/uyan.js","hash":"81b765838018f35ba6bb6470319f9b15e679283d","modified":1537421784579},{"_id":"public/js/jsapi.js","hash":"48622505e8e2a150c7caa7972ee884ab94a9f530","modified":1537421784579},{"_id":"public/js/embed.js","hash":"ad5ae707f1b7831187e414d613570e46939ab1c6","modified":1537421784579},{"_id":"public/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1537421784579},{"_id":"public/css/fonts/Ansley.jpg","hash":"6f6d4ace70fb2a1fb3b51a84209e65a86c7d9e25","modified":1537421784579},{"_id":"public/css/fonts/PetitJardin-Regular.ttf","hash":"340228da9403e5d06208aee116a3417f6ff3e112","modified":1537421784579},{"_id":"public/css/fonts/Yore.jpg","hash":"48af544b559ab264df9a5c2a31a1dd3471681858","modified":1537421784579},{"_id":"public/css/fonts/capitalsregular.jpg","hash":"af600026befc5d9e00f4cdeded145f7929c2da0c","modified":1537421784579},{"_id":"public/2018/03/19/异构数据库同步方案1-触发器/pasted-1.png","hash":"27b5b30b81101d2c962ac65abee7806f87403f11","modified":1537421784579},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1537421784585},{"_id":"public/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1537421784585},{"_id":"public/css/fonts/PetitJardin.jpg","hash":"f4689acc45c75946d9546511224a52f994bd25b3","modified":1537421784585},{"_id":"public/css/fonts/Yore Script.ttf","hash":"e4d5bb87512789ee435b13a4cd7042b2af8b8741","modified":1537421784594},{"_id":"public/2017/05/05/mysql/3.png","hash":"b29cf362a2022493825409612636f9a44300b163","modified":1537421784603},{"_id":"public/2017/04/25/first/images/tom.png","hash":"db307e512ff71137bf07f9f13a19117a607cfbef","modified":1537421784603},{"_id":"public/css/fonts/kaiti.ttf","hash":"d3a0736027f438306d771cf0965bb309118eb975","modified":1537421784615}],"Category":[{"name":"a","_id":"cjma58eqo000wawpfl2xj60th"}],"Data":[],"Page":[{"layout":"search","title":"search","_content":"","source":"search/index.md","raw":"layout: search\ntitle: search\n---","date":"2017-07-19T10:40:28.618Z","updated":"2017-07-19T10:40:28.618Z","path":"search/index.html","comments":1,"_id":"cjma58ep30001awpf4jsexaga","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"jQuery前端参数传递方案","author":"zjy","date":"2017-07-19T10:04:42.000Z","_content":"# 前端参数传递方案\n\n\n## 需求\n```\n 在页面之间进行传值的时候，如果遇到参数长度非常大的时候，我们直接url传值会400错误，\n 参数太长。我们当然可以把参数经过post后台传递，但是请求产生的网络开销呢？下面介绍几种方式好不好\n \n```\n\n## cookie\n\n```\n将需要传递的参数   \n\n参数传递起始页面：setCookie(key,value);\n参数接受页面：getCookie（key）;\n\n代码如下：\n\nfunction setCookie(name,value)\n{\n  var Days = 30; //此 cookie 将被保存 30 天\n  var exp  = new Date();    //new Date(\"December 31, 9998\");\n  exp.setTime(exp.getTime() + Days*24*60*60*1000);\n  document.cookie = name + \"=\"+ escape(value) +\";expires=\"+ exp.toGMTString();\n}\nfunction getCookie(name)\n{\n  var arr = document.cookie.match(new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\"));\n  if(arr != null) return unescape(arr[2]); return null;\n}\n\n\n但是这样做的问题就是，用户假如禁用了cookie，那么这些方法将无效\n\n```\n\n## LocalStorage \n\n```\n1、localStorage拓展了cookie的4K限制2、localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽，但是这个却是只有在高版本的浏览器中才支持的localStorage的局限1、浏览器的大小不统一，并且在IE8以上的IE版本才支持localStorage这个属性\n2、目前所有的浏览器中都会把localStorage的值类型限定为string类型，这个在对我们日常比较常见的JSON对象类型需要一些转换\n3、localStorage在浏览器的隐私模式下面是不可读取的\n4、localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，会导致页面变卡\n5、localStorage不能被爬虫抓取到localStorage与sessionStorage的唯一一点区别就是localStorage属于永久性存储，而sessionStorage属于当会话结束的时候，sessionStorage中的键值对会被清空\n\n语法：\n获取键值：localStorage.getItem(“key”)\n设置键值：localStorage.setItem(“key”,”value”)\n清除键值：localStorage.removeItem(“key”)\n清除所有键值：localStorage.clear()\n获取键值2：localStorage.keyName\n设置键值2：localStorage.keyName = “value”\n\n```\n\n\n## js生成唯一的key \n\n```\nfunction generateUUID() {\nvar d = new Date().getTime();\nvar uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = (d + Math.random()*16)%16 | 0; d = Math.floor(d/16); return (c=='x' ? r : (r&0x3|0x8)).toString(16); });\nreturn uuid;\n}; //碰撞率：1/2^^122\n\n\nfunction generateUUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n    return v.toString(16);\n  });\n}\n\n\nfunction generateUUID() {\n  function S4() {\n    return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n  }\n  return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n}\n\n\nfunction generateUUID(len, radix) {\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n  var uuid = [], i;\n  radix = radix || chars.length;\n \n  if (len) {\n   // Compact form\n   for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random()*radix];\n  } else {\n   // rfc4122, version 4 form\n   var r;\n \n   // rfc4122 requires these characters\n   uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n   uuid[14] = '4';\n \n   // Fill in random data. At i==19 set the high bits of clock sequence as\n   // per rfc4122, sec. 4.1.5\n   for (i = 0; i < 36; i++) {\n    if (!uuid[i]) {\n     r = 0 | Math.random()*16;\n     uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\n    }\n   }\n  }\n \n  return uuid.join('');\n}\n\n\n\nfunction generateUUID() {\n  var s = [];\n  var hexDigits = \"0123456789abcdef\";\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n  s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = \"-\";\n \n  var uuid = s.join(\"\");\n  return uuid;\n}\n\n```","source":"_posts/Query前端参数传递方案.md","raw":"title: jQuery前端参数传递方案\nauthor: zjy\ndate: 2017-07-19 18:04:42\ntags:\n---\n# 前端参数传递方案\n\n\n## 需求\n```\n 在页面之间进行传值的时候，如果遇到参数长度非常大的时候，我们直接url传值会400错误，\n 参数太长。我们当然可以把参数经过post后台传递，但是请求产生的网络开销呢？下面介绍几种方式好不好\n \n```\n\n## cookie\n\n```\n将需要传递的参数   \n\n参数传递起始页面：setCookie(key,value);\n参数接受页面：getCookie（key）;\n\n代码如下：\n\nfunction setCookie(name,value)\n{\n  var Days = 30; //此 cookie 将被保存 30 天\n  var exp  = new Date();    //new Date(\"December 31, 9998\");\n  exp.setTime(exp.getTime() + Days*24*60*60*1000);\n  document.cookie = name + \"=\"+ escape(value) +\";expires=\"+ exp.toGMTString();\n}\nfunction getCookie(name)\n{\n  var arr = document.cookie.match(new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\"));\n  if(arr != null) return unescape(arr[2]); return null;\n}\n\n\n但是这样做的问题就是，用户假如禁用了cookie，那么这些方法将无效\n\n```\n\n## LocalStorage \n\n```\n1、localStorage拓展了cookie的4K限制2、localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽，但是这个却是只有在高版本的浏览器中才支持的localStorage的局限1、浏览器的大小不统一，并且在IE8以上的IE版本才支持localStorage这个属性\n2、目前所有的浏览器中都会把localStorage的值类型限定为string类型，这个在对我们日常比较常见的JSON对象类型需要一些转换\n3、localStorage在浏览器的隐私模式下面是不可读取的\n4、localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，会导致页面变卡\n5、localStorage不能被爬虫抓取到localStorage与sessionStorage的唯一一点区别就是localStorage属于永久性存储，而sessionStorage属于当会话结束的时候，sessionStorage中的键值对会被清空\n\n语法：\n获取键值：localStorage.getItem(“key”)\n设置键值：localStorage.setItem(“key”,”value”)\n清除键值：localStorage.removeItem(“key”)\n清除所有键值：localStorage.clear()\n获取键值2：localStorage.keyName\n设置键值2：localStorage.keyName = “value”\n\n```\n\n\n## js生成唯一的key \n\n```\nfunction generateUUID() {\nvar d = new Date().getTime();\nvar uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = (d + Math.random()*16)%16 | 0; d = Math.floor(d/16); return (c=='x' ? r : (r&0x3|0x8)).toString(16); });\nreturn uuid;\n}; //碰撞率：1/2^^122\n\n\nfunction generateUUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n    return v.toString(16);\n  });\n}\n\n\nfunction generateUUID() {\n  function S4() {\n    return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n  }\n  return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n}\n\n\nfunction generateUUID(len, radix) {\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n  var uuid = [], i;\n  radix = radix || chars.length;\n \n  if (len) {\n   // Compact form\n   for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random()*radix];\n  } else {\n   // rfc4122, version 4 form\n   var r;\n \n   // rfc4122 requires these characters\n   uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n   uuid[14] = '4';\n \n   // Fill in random data. At i==19 set the high bits of clock sequence as\n   // per rfc4122, sec. 4.1.5\n   for (i = 0; i < 36; i++) {\n    if (!uuid[i]) {\n     r = 0 | Math.random()*16;\n     uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\n    }\n   }\n  }\n \n  return uuid.join('');\n}\n\n\n\nfunction generateUUID() {\n  var s = [];\n  var hexDigits = \"0123456789abcdef\";\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n  s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = \"-\";\n \n  var uuid = s.join(\"\");\n  return uuid;\n}\n\n```","slug":"Query前端参数传递方案","published":1,"updated":"2017-07-28T07:40:56.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eow0000awpflq74mghu","content":"<h1 id=\"前端参数传递方案\"><a href=\"#前端参数传递方案\" class=\"headerlink\" title=\"前端参数传递方案\"></a>前端参数传递方案</h1><h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在页面之间进行传值的时候，如果遇到参数长度非常大的时候，我们直接url传值会400错误，</div><div class=\"line\">参数太长。我们当然可以把参数经过post后台传递，但是请求产生的网络开销呢？下面介绍几种方式好不好</div></pre></td></tr></table></figure>\n<h2 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">将需要传递的参数   </div><div class=\"line\"></div><div class=\"line\">参数传递起始页面：setCookie(key,value);</div><div class=\"line\">参数接受页面：getCookie（key）;</div><div class=\"line\"></div><div class=\"line\">代码如下：</div><div class=\"line\"></div><div class=\"line\">function setCookie(name,value)</div><div class=\"line\">&#123;</div><div class=\"line\">  var Days = 30; //此 cookie 将被保存 30 天</div><div class=\"line\">  var exp  = new Date();    //new Date(&quot;December 31, 9998&quot;);</div><div class=\"line\">  exp.setTime(exp.getTime() + Days*24*60*60*1000);</div><div class=\"line\">  document.cookie = name + &quot;=&quot;+ escape(value) +&quot;;expires=&quot;+ exp.toGMTString();</div><div class=\"line\">&#125;</div><div class=\"line\">function getCookie(name)</div><div class=\"line\">&#123;</div><div class=\"line\">  var arr = document.cookie.match(new RegExp(&quot;(^| )&quot;+name+&quot;=([^;]*)(;|$)&quot;));</div><div class=\"line\">  if(arr != null) return unescape(arr[2]); return null;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">但是这样做的问题就是，用户假如禁用了cookie，那么这些方法将无效</div></pre></td></tr></table></figure>\n<h2 id=\"LocalStorage\"><a href=\"#LocalStorage\" class=\"headerlink\" title=\"LocalStorage\"></a>LocalStorage</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、localStorage拓展了cookie的4K限制2、localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽，但是这个却是只有在高版本的浏览器中才支持的localStorage的局限1、浏览器的大小不统一，并且在IE8以上的IE版本才支持localStorage这个属性</div><div class=\"line\">2、目前所有的浏览器中都会把localStorage的值类型限定为string类型，这个在对我们日常比较常见的JSON对象类型需要一些转换</div><div class=\"line\">3、localStorage在浏览器的隐私模式下面是不可读取的</div><div class=\"line\">4、localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，会导致页面变卡</div><div class=\"line\">5、localStorage不能被爬虫抓取到localStorage与sessionStorage的唯一一点区别就是localStorage属于永久性存储，而sessionStorage属于当会话结束的时候，sessionStorage中的键值对会被清空</div><div class=\"line\"></div><div class=\"line\">语法：</div><div class=\"line\">获取键值：localStorage.getItem(“key”)</div><div class=\"line\">设置键值：localStorage.setItem(“key”,”value”)</div><div class=\"line\">清除键值：localStorage.removeItem(“key”)</div><div class=\"line\">清除所有键值：localStorage.clear()</div><div class=\"line\">获取键值2：localStorage.keyName</div><div class=\"line\">设置键值2：localStorage.keyName = “value”</div></pre></td></tr></table></figure>\n<h2 id=\"js生成唯一的key\"><a href=\"#js生成唯一的key\" class=\"headerlink\" title=\"js生成唯一的key\"></a>js生成唯一的key</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">function generateUUID() &#123;</div><div class=\"line\">var d = new Date().getTime();</div><div class=\"line\">var uuid = &apos;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&apos;.replace(/[xy]/g, function(c) &#123; var r = (d + Math.random()*16)%16 | 0; d = Math.floor(d/16); return (c==&apos;x&apos; ? r : (r&amp;0x3|0x8)).toString(16); &#125;);</div><div class=\"line\">return uuid;</div><div class=\"line\">&#125;; //碰撞率：1/2^^122</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function generateUUID() &#123;</div><div class=\"line\">  return &apos;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&apos;.replace(/[xy]/g, function(c) &#123;</div><div class=\"line\">    var r = Math.random()*16|0, v = c == &apos;x&apos; ? r : (r&amp;0x3|0x8);</div><div class=\"line\">    return v.toString(16);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function generateUUID() &#123;</div><div class=\"line\">  function S4() &#123;</div><div class=\"line\">    return (((1+Math.random())*0x10000)|0).toString(16).substring(1);</div><div class=\"line\">  &#125;</div><div class=\"line\">  return (S4()+S4()+&quot;-&quot;+S4()+&quot;-&quot;+S4()+&quot;-&quot;+S4()+&quot;-&quot;+S4()+S4()+S4());</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function generateUUID(len, radix) &#123;</div><div class=\"line\">  var chars = &apos;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&apos;.split(&apos;&apos;);</div><div class=\"line\">  var uuid = [], i;</div><div class=\"line\">  radix = radix || chars.length;</div><div class=\"line\"> </div><div class=\"line\">  if (len) &#123;</div><div class=\"line\">   // Compact form</div><div class=\"line\">   for (i = 0; i &lt; len; i++) uuid[i] = chars[0 | Math.random()*radix];</div><div class=\"line\">  &#125; else &#123;</div><div class=\"line\">   // rfc4122, version 4 form</div><div class=\"line\">   var r;</div><div class=\"line\"> </div><div class=\"line\">   // rfc4122 requires these characters</div><div class=\"line\">   uuid[8] = uuid[13] = uuid[18] = uuid[23] = &apos;-&apos;;</div><div class=\"line\">   uuid[14] = &apos;4&apos;;</div><div class=\"line\"> </div><div class=\"line\">   // Fill in random data. At i==19 set the high bits of clock sequence as</div><div class=\"line\">   // per rfc4122, sec. 4.1.5</div><div class=\"line\">   for (i = 0; i &lt; 36; i++) &#123;</div><div class=\"line\">    if (!uuid[i]) &#123;</div><div class=\"line\">     r = 0 | Math.random()*16;</div><div class=\"line\">     uuid[i] = chars[(i == 19) ? (r &amp; 0x3) | 0x8 : r];</div><div class=\"line\">    &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> </div><div class=\"line\">  return uuid.join(&apos;&apos;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function generateUUID() &#123;</div><div class=\"line\">  var s = [];</div><div class=\"line\">  var hexDigits = &quot;0123456789abcdef&quot;;</div><div class=\"line\">  for (var i = 0; i &lt; 36; i++) &#123;</div><div class=\"line\">    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);</div><div class=\"line\">  &#125;</div><div class=\"line\">  s[14] = &quot;4&quot;; // bits 12-15 of the time_hi_and_version field to 0010</div><div class=\"line\">  s[19] = hexDigits.substr((s[19] &amp; 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01</div><div class=\"line\">  s[8] = s[13] = s[18] = s[23] = &quot;-&quot;;</div><div class=\"line\"> </div><div class=\"line\">  var uuid = s.join(&quot;&quot;);</div><div class=\"line\">  return uuid;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前端参数传递方案\"><a href=\"#前端参数传递方案\" class=\"headerlink\" title=\"前端参数传递方案\"></a>前端参数传递方案</h1><h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在页面之间进行传值的时候，如果遇到参数长度非常大的时候，我们直接url传值会400错误，</div><div class=\"line\">参数太长。我们当然可以把参数经过post后台传递，但是请求产生的网络开销呢？下面介绍几种方式好不好</div></pre></td></tr></table></figure>\n<h2 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">将需要传递的参数   </div><div class=\"line\"></div><div class=\"line\">参数传递起始页面：setCookie(key,value);</div><div class=\"line\">参数接受页面：getCookie（key）;</div><div class=\"line\"></div><div class=\"line\">代码如下：</div><div class=\"line\"></div><div class=\"line\">function setCookie(name,value)</div><div class=\"line\">&#123;</div><div class=\"line\">  var Days = 30; //此 cookie 将被保存 30 天</div><div class=\"line\">  var exp  = new Date();    //new Date(&quot;December 31, 9998&quot;);</div><div class=\"line\">  exp.setTime(exp.getTime() + Days*24*60*60*1000);</div><div class=\"line\">  document.cookie = name + &quot;=&quot;+ escape(value) +&quot;;expires=&quot;+ exp.toGMTString();</div><div class=\"line\">&#125;</div><div class=\"line\">function getCookie(name)</div><div class=\"line\">&#123;</div><div class=\"line\">  var arr = document.cookie.match(new RegExp(&quot;(^| )&quot;+name+&quot;=([^;]*)(;|$)&quot;));</div><div class=\"line\">  if(arr != null) return unescape(arr[2]); return null;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">但是这样做的问题就是，用户假如禁用了cookie，那么这些方法将无效</div></pre></td></tr></table></figure>\n<h2 id=\"LocalStorage\"><a href=\"#LocalStorage\" class=\"headerlink\" title=\"LocalStorage\"></a>LocalStorage</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、localStorage拓展了cookie的4K限制2、localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽，但是这个却是只有在高版本的浏览器中才支持的localStorage的局限1、浏览器的大小不统一，并且在IE8以上的IE版本才支持localStorage这个属性</div><div class=\"line\">2、目前所有的浏览器中都会把localStorage的值类型限定为string类型，这个在对我们日常比较常见的JSON对象类型需要一些转换</div><div class=\"line\">3、localStorage在浏览器的隐私模式下面是不可读取的</div><div class=\"line\">4、localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，会导致页面变卡</div><div class=\"line\">5、localStorage不能被爬虫抓取到localStorage与sessionStorage的唯一一点区别就是localStorage属于永久性存储，而sessionStorage属于当会话结束的时候，sessionStorage中的键值对会被清空</div><div class=\"line\"></div><div class=\"line\">语法：</div><div class=\"line\">获取键值：localStorage.getItem(“key”)</div><div class=\"line\">设置键值：localStorage.setItem(“key”,”value”)</div><div class=\"line\">清除键值：localStorage.removeItem(“key”)</div><div class=\"line\">清除所有键值：localStorage.clear()</div><div class=\"line\">获取键值2：localStorage.keyName</div><div class=\"line\">设置键值2：localStorage.keyName = “value”</div></pre></td></tr></table></figure>\n<h2 id=\"js生成唯一的key\"><a href=\"#js生成唯一的key\" class=\"headerlink\" title=\"js生成唯一的key\"></a>js生成唯一的key</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">function generateUUID() &#123;</div><div class=\"line\">var d = new Date().getTime();</div><div class=\"line\">var uuid = &apos;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&apos;.replace(/[xy]/g, function(c) &#123; var r = (d + Math.random()*16)%16 | 0; d = Math.floor(d/16); return (c==&apos;x&apos; ? r : (r&amp;0x3|0x8)).toString(16); &#125;);</div><div class=\"line\">return uuid;</div><div class=\"line\">&#125;; //碰撞率：1/2^^122</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function generateUUID() &#123;</div><div class=\"line\">  return &apos;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&apos;.replace(/[xy]/g, function(c) &#123;</div><div class=\"line\">    var r = Math.random()*16|0, v = c == &apos;x&apos; ? r : (r&amp;0x3|0x8);</div><div class=\"line\">    return v.toString(16);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function generateUUID() &#123;</div><div class=\"line\">  function S4() &#123;</div><div class=\"line\">    return (((1+Math.random())*0x10000)|0).toString(16).substring(1);</div><div class=\"line\">  &#125;</div><div class=\"line\">  return (S4()+S4()+&quot;-&quot;+S4()+&quot;-&quot;+S4()+&quot;-&quot;+S4()+&quot;-&quot;+S4()+S4()+S4());</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function generateUUID(len, radix) &#123;</div><div class=\"line\">  var chars = &apos;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&apos;.split(&apos;&apos;);</div><div class=\"line\">  var uuid = [], i;</div><div class=\"line\">  radix = radix || chars.length;</div><div class=\"line\"> </div><div class=\"line\">  if (len) &#123;</div><div class=\"line\">   // Compact form</div><div class=\"line\">   for (i = 0; i &lt; len; i++) uuid[i] = chars[0 | Math.random()*radix];</div><div class=\"line\">  &#125; else &#123;</div><div class=\"line\">   // rfc4122, version 4 form</div><div class=\"line\">   var r;</div><div class=\"line\"> </div><div class=\"line\">   // rfc4122 requires these characters</div><div class=\"line\">   uuid[8] = uuid[13] = uuid[18] = uuid[23] = &apos;-&apos;;</div><div class=\"line\">   uuid[14] = &apos;4&apos;;</div><div class=\"line\"> </div><div class=\"line\">   // Fill in random data. At i==19 set the high bits of clock sequence as</div><div class=\"line\">   // per rfc4122, sec. 4.1.5</div><div class=\"line\">   for (i = 0; i &lt; 36; i++) &#123;</div><div class=\"line\">    if (!uuid[i]) &#123;</div><div class=\"line\">     r = 0 | Math.random()*16;</div><div class=\"line\">     uuid[i] = chars[(i == 19) ? (r &amp; 0x3) | 0x8 : r];</div><div class=\"line\">    &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> </div><div class=\"line\">  return uuid.join(&apos;&apos;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function generateUUID() &#123;</div><div class=\"line\">  var s = [];</div><div class=\"line\">  var hexDigits = &quot;0123456789abcdef&quot;;</div><div class=\"line\">  for (var i = 0; i &lt; 36; i++) &#123;</div><div class=\"line\">    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);</div><div class=\"line\">  &#125;</div><div class=\"line\">  s[14] = &quot;4&quot;; // bits 12-15 of the time_hi_and_version field to 0010</div><div class=\"line\">  s[19] = hexDigits.substr((s[19] &amp; 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01</div><div class=\"line\">  s[8] = s[13] = s[18] = s[23] = &quot;-&quot;;</div><div class=\"line\"> </div><div class=\"line\">  var uuid = s.join(&quot;&quot;);</div><div class=\"line\">  return uuid;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"active_mq 导致的一些阻塞问题","author":"zjy","date":"2017-09-29T06:48:02.000Z","_content":"## 情景\n\t通过 jstack pid >1.txt  发现tomcat有很多BLOCKED的线程， 具体如下截取的一部分。\n    \n      \"pool-2174-thread-1\" #2397 prio=5 os_prio=0 tid=0x00007f3ca21e9800 nid=0xa00 waiting for monitor entry [0x00007f3bcb2b7000]\n     java.lang.Thread.State: BLOCKED (on object monitor)\n      at org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:200)\n\t- waiting to lock <0x00000006c80a0e10> (a org.apache.activemq.pool.PooledConnectionFactory)\n\tat org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:195)\n\tat org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:180)\n\tat org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:484)\n\tat org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:569)\n\tat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:658)\n\tat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:649)\n\tat cc.gukeer.common.interceptor.DataPushInterceptor$1.run(DataPushInterceptor.java:115)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:748)\n\t\n    由于有太多处于阻塞状态的线程，导致tomcat线程池一直处于满载的状态，tomcat假死，服务无法正常访问。\n    \n    \n## 排查\n\t通过以上代码发现，造成阻塞的线程基本全是 jms获取链接出了问题，我们先检查一下active_mq的状态，果然，通过mq的后台虽然能看到队列信息等，但是能明显感觉到后台也是比较卡顿的，通过分析查看active_mq的日志，我们得到如下一段异常代码：\n    \tDefaultMessageListenerContainer-1\n    2017-09-29 13:45:00,859 | INFO  | Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed. | org.apache.activemq.broker.TransportConnection.Transport | DefaultMessageListenerContainer-1\n    org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed.\n        at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)\n        at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)\n        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)\n        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)\n        at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)\n        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)\n        at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)\n        at org.springframework.jms.connection.ConnectionFactoryUtils.releaseConnection(ConnectionFactoryUtils.java:80)\n        at org.springframework.jms.listener.AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:385)\n        at org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:856)\n        at org.springframework.jms.listener.DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:838)\n        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:969)\n        at java.lang.Thread.run(Thread.java:745)\n    2017-09-29 13:45:01,437 | WARN  | Failed to add Connection | org.apache.activemq.broker.TransportConnection | VMTransport: vm://localhost#611261\n    java.lang.SecurityException: User name or password is invalid.\n        at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:80)\n        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)\n        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:694)\n        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:137)\n        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)\n        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)\n        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)\n        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)\n        \n        \n        \n        其中： Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed.","source":"_posts/active-mq-导致的一些阻塞问题.md","raw":"title: active_mq 导致的一些阻塞问题\nauthor: zjy\ndate: 2017-09-29 14:48:02\ntags:\n---\n## 情景\n\t通过 jstack pid >1.txt  发现tomcat有很多BLOCKED的线程， 具体如下截取的一部分。\n    \n      \"pool-2174-thread-1\" #2397 prio=5 os_prio=0 tid=0x00007f3ca21e9800 nid=0xa00 waiting for monitor entry [0x00007f3bcb2b7000]\n     java.lang.Thread.State: BLOCKED (on object monitor)\n      at org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:200)\n\t- waiting to lock <0x00000006c80a0e10> (a org.apache.activemq.pool.PooledConnectionFactory)\n\tat org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:195)\n\tat org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:180)\n\tat org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:484)\n\tat org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:569)\n\tat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:658)\n\tat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:649)\n\tat cc.gukeer.common.interceptor.DataPushInterceptor$1.run(DataPushInterceptor.java:115)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:748)\n\t\n    由于有太多处于阻塞状态的线程，导致tomcat线程池一直处于满载的状态，tomcat假死，服务无法正常访问。\n    \n    \n## 排查\n\t通过以上代码发现，造成阻塞的线程基本全是 jms获取链接出了问题，我们先检查一下active_mq的状态，果然，通过mq的后台虽然能看到队列信息等，但是能明显感觉到后台也是比较卡顿的，通过分析查看active_mq的日志，我们得到如下一段异常代码：\n    \tDefaultMessageListenerContainer-1\n    2017-09-29 13:45:00,859 | INFO  | Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed. | org.apache.activemq.broker.TransportConnection.Transport | DefaultMessageListenerContainer-1\n    org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed.\n        at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)\n        at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)\n        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)\n        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)\n        at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)\n        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)\n        at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)\n        at org.springframework.jms.connection.ConnectionFactoryUtils.releaseConnection(ConnectionFactoryUtils.java:80)\n        at org.springframework.jms.listener.AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:385)\n        at org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:856)\n        at org.springframework.jms.listener.DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:838)\n        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:969)\n        at java.lang.Thread.run(Thread.java:745)\n    2017-09-29 13:45:01,437 | WARN  | Failed to add Connection | org.apache.activemq.broker.TransportConnection | VMTransport: vm://localhost#611261\n    java.lang.SecurityException: User name or password is invalid.\n        at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:80)\n        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)\n        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:694)\n        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:137)\n        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)\n        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)\n        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)\n        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)\n        \n        \n        \n        其中： Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed.","slug":"active-mq-导致的一些阻塞问题","published":1,"updated":"2018-04-18T04:52:12.277Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58ep50002awpflxwmjsbi","content":"<h2 id=\"情景\"><a href=\"#情景\" class=\"headerlink\" title=\"情景\"></a>情景</h2><pre><code>通过 jstack pid &gt;1.txt  发现tomcat有很多BLOCKED的线程， 具体如下截取的一部分。\n\n  &quot;pool-2174-thread-1&quot; #2397 prio=5 os_prio=0 tid=0x00007f3ca21e9800 nid=0xa00 waiting for monitor entry [0x00007f3bcb2b7000]\n java.lang.Thread.State: BLOCKED (on object monitor)\n  at org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:200)\n- waiting to lock &lt;0x00000006c80a0e10&gt; (a org.apache.activemq.pool.PooledConnectionFactory)\nat org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:195)\nat org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:180)\nat org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:484)\nat org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:569)\nat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:658)\nat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:649)\nat cc.gukeer.common.interceptor.DataPushInterceptor$1.run(DataPushInterceptor.java:115)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\nat java.lang.Thread.run(Thread.java:748)\n\n由于有太多处于阻塞状态的线程，导致tomcat线程池一直处于满载的状态，tomcat假死，服务无法正常访问。\n</code></pre><h2 id=\"排查\"><a href=\"#排查\" class=\"headerlink\" title=\"排查\"></a>排查</h2><pre><code>通过以上代码发现，造成阻塞的线程基本全是 jms获取链接出了问题，我们先检查一下active_mq的状态，果然，通过mq的后台虽然能看到队列信息等，但是能明显感觉到后台也是比较卡顿的，通过分析查看active_mq的日志，我们得到如下一段异常代码：\n    DefaultMessageListenerContainer-1\n2017-09-29 13:45:00,859 | INFO  | Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed. | org.apache.activemq.broker.TransportConnection.Transport | DefaultMessageListenerContainer-1\norg.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed.\n    at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)\n    at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)\n    at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)\n    at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)\n    at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)\n    at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)\n    at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)\n    at org.springframework.jms.connection.ConnectionFactoryUtils.releaseConnection(ConnectionFactoryUtils.java:80)\n    at org.springframework.jms.listener.AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:385)\n    at org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:856)\n    at org.springframework.jms.listener.DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:838)\n    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:969)\n    at java.lang.Thread.run(Thread.java:745)\n2017-09-29 13:45:01,437 | WARN  | Failed to add Connection | org.apache.activemq.broker.TransportConnection | VMTransport: vm://localhost#611261\njava.lang.SecurityException: User name or password is invalid.\n    at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:80)\n    at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)\n    at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:694)\n    at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:137)\n    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)\n    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)\n    at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)\n    at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)\n    at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)\n    at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)\n    at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)\n\n\n\n    其中： Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed.\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"情景\"><a href=\"#情景\" class=\"headerlink\" title=\"情景\"></a>情景</h2><pre><code>通过 jstack pid &gt;1.txt  发现tomcat有很多BLOCKED的线程， 具体如下截取的一部分。\n\n  &quot;pool-2174-thread-1&quot; #2397 prio=5 os_prio=0 tid=0x00007f3ca21e9800 nid=0xa00 waiting for monitor entry [0x00007f3bcb2b7000]\n java.lang.Thread.State: BLOCKED (on object monitor)\n  at org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:200)\n- waiting to lock &lt;0x00000006c80a0e10&gt; (a org.apache.activemq.pool.PooledConnectionFactory)\nat org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:195)\nat org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:180)\nat org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:484)\nat org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:569)\nat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:658)\nat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:649)\nat cc.gukeer.common.interceptor.DataPushInterceptor$1.run(DataPushInterceptor.java:115)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\nat java.lang.Thread.run(Thread.java:748)\n\n由于有太多处于阻塞状态的线程，导致tomcat线程池一直处于满载的状态，tomcat假死，服务无法正常访问。\n</code></pre><h2 id=\"排查\"><a href=\"#排查\" class=\"headerlink\" title=\"排查\"></a>排查</h2><pre><code>通过以上代码发现，造成阻塞的线程基本全是 jms获取链接出了问题，我们先检查一下active_mq的状态，果然，通过mq的后台虽然能看到队列信息等，但是能明显感觉到后台也是比较卡顿的，通过分析查看active_mq的日志，我们得到如下一段异常代码：\n    DefaultMessageListenerContainer-1\n2017-09-29 13:45:00,859 | INFO  | Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed. | org.apache.activemq.broker.TransportConnection.Transport | DefaultMessageListenerContainer-1\norg.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed.\n    at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)\n    at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)\n    at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)\n    at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)\n    at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)\n    at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)\n    at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)\n    at org.springframework.jms.connection.ConnectionFactoryUtils.releaseConnection(ConnectionFactoryUtils.java:80)\n    at org.springframework.jms.listener.AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:385)\n    at org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:856)\n    at org.springframework.jms.listener.DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:838)\n    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:969)\n    at java.lang.Thread.run(Thread.java:745)\n2017-09-29 13:45:01,437 | WARN  | Failed to add Connection | org.apache.activemq.broker.TransportConnection | VMTransport: vm://localhost#611261\njava.lang.SecurityException: User name or password is invalid.\n    at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:80)\n    at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)\n    at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:694)\n    at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:137)\n    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)\n    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)\n    at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)\n    at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)\n    at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)\n    at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)\n    at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)\n\n\n\n    其中： Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#611259) disposed.\n</code></pre>"},{"title":"active mq安装 -ubuntu","date":"2017-05-05T05:51:49.000Z","_content":"\n## 1下载activemq \n```\nwget http://archive.apache.org/dist/activemq/apache-activemq/5.6.0/apache-activemq-5.6.0-bin.tar.gz\n```\n## 2.解压\n```\ntar zxf apache-activemq-5.6.0-bin.tar.gz\n```\n## 3.进入解压后的activemq/bin目录,启动mq\n```\nsudo ./activemq start\n```\n## 5.测试是否启动成功\n\n  现在本机telnet一下端口是否正常\n```\ntelnet 本机IP 8161\n```\n 再访问一下主页，一切正常！\n\n\n![logo](active_mq/index.png)\n \n\n更新1.0：\n\n　　ubuntu上activemq和windows上不一样，默认登陆时不需要验证的，为了安全起见，建议修改下配置。\n\n### 　　1.config文件夹下的jetty.xml，authenticate 值改成true\n \n\n       2.config文件夹下的 jetty-realm.properties ，修改下用户和密码\n![logo](active_mq/user.png)\n\n\n更新1.1：\n\t## tcp长链接需要新增用户，/activemq/conf/activemq.xml   注意这个配置位置必须如下\n\t```\n\t\t  <persistenceAdapter>\n            <kahaDB directory=\"${activemq.base}/data/kahadb\"/>\n        </persistenceAdapter>\n        \n         ==<plugins>\n             <simpleAuthenticationPlugin>\n                 <users>\n                     <authenticationUser username=\"lxsoft\" password=\"lxtest\" groups=\"users,admins\"/>\n                 </users>\n             </simpleAuthenticationPlugin>\n         </plugins>==\n        \n          <!--\n            The systemUsage controls the maximum amount of space the broker will \n            use before slowing down producers. For more information, see:\n            \n            http://activemq.apache.org/producer-flow-control.html\n             \n        <systemUsage>\n\n\t```","source":"_posts/active_mq.md","raw":"---\ntitle: active mq安装 -ubuntu\ndate: 2017-05-05 13:51:49\ntags: server,linux,ubuntu\n---\n\n## 1下载activemq \n```\nwget http://archive.apache.org/dist/activemq/apache-activemq/5.6.0/apache-activemq-5.6.0-bin.tar.gz\n```\n## 2.解压\n```\ntar zxf apache-activemq-5.6.0-bin.tar.gz\n```\n## 3.进入解压后的activemq/bin目录,启动mq\n```\nsudo ./activemq start\n```\n## 5.测试是否启动成功\n\n  现在本机telnet一下端口是否正常\n```\ntelnet 本机IP 8161\n```\n 再访问一下主页，一切正常！\n\n\n![logo](active_mq/index.png)\n \n\n更新1.0：\n\n　　ubuntu上activemq和windows上不一样，默认登陆时不需要验证的，为了安全起见，建议修改下配置。\n\n### 　　1.config文件夹下的jetty.xml，authenticate 值改成true\n \n\n       2.config文件夹下的 jetty-realm.properties ，修改下用户和密码\n![logo](active_mq/user.png)\n\n\n更新1.1：\n\t## tcp长链接需要新增用户，/activemq/conf/activemq.xml   注意这个配置位置必须如下\n\t```\n\t\t  <persistenceAdapter>\n            <kahaDB directory=\"${activemq.base}/data/kahadb\"/>\n        </persistenceAdapter>\n        \n         ==<plugins>\n             <simpleAuthenticationPlugin>\n                 <users>\n                     <authenticationUser username=\"lxsoft\" password=\"lxtest\" groups=\"users,admins\"/>\n                 </users>\n             </simpleAuthenticationPlugin>\n         </plugins>==\n        \n          <!--\n            The systemUsage controls the maximum amount of space the broker will \n            use before slowing down producers. For more information, see:\n            \n            http://activemq.apache.org/producer-flow-control.html\n             \n        <systemUsage>\n\n\t```","slug":"active_mq","published":1,"updated":"2017-07-19T10:40:28.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58ep90003awpfdq4pu3eb","content":"<h2 id=\"1下载activemq\"><a href=\"#1下载activemq\" class=\"headerlink\" title=\"1下载activemq\"></a>1下载activemq</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://archive.apache.org/dist/activemq/apache-activemq/5.6.0/apache-activemq-5.6.0-bin.tar.gz</div></pre></td></tr></table></figure>\n<h2 id=\"2-解压\"><a href=\"#2-解压\" class=\"headerlink\" title=\"2.解压\"></a>2.解压</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar zxf apache-activemq-5.6.0-bin.tar.gz</div></pre></td></tr></table></figure>\n<h2 id=\"3-进入解压后的activemq-bin目录-启动mq\"><a href=\"#3-进入解压后的activemq-bin目录-启动mq\" class=\"headerlink\" title=\"3.进入解压后的activemq/bin目录,启动mq\"></a>3.进入解压后的activemq/bin目录,启动mq</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ./activemq start</div></pre></td></tr></table></figure>\n<h2 id=\"5-测试是否启动成功\"><a href=\"#5-测试是否启动成功\" class=\"headerlink\" title=\"5.测试是否启动成功\"></a>5.测试是否启动成功</h2><p>  现在本机telnet一下端口是否正常<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">telnet 本机IP 8161</div></pre></td></tr></table></figure></p>\n<p> 再访问一下主页，一切正常！</p>\n<p><img src=\"/2017/05/05/active_mq/index.png\" alt=\"logo\"></p>\n<p>更新1.0：</p>\n<p>　　ubuntu上activemq和windows上不一样，默认登陆时不需要验证的，为了安全起见，建议修改下配置。</p>\n<h3 id=\"1-config文件夹下的jetty-xml，authenticate-值改成true\"><a href=\"#1-config文件夹下的jetty-xml，authenticate-值改成true\" class=\"headerlink\" title=\"　　1.config文件夹下的jetty.xml，authenticate 值改成true\"></a>　　1.config文件夹下的jetty.xml，authenticate 值改成true</h3><pre><code>2.config文件夹下的 jetty-realm.properties ，修改下用户和密码\n</code></pre><p><img src=\"/2017/05/05/active_mq/user.png\" alt=\"logo\"></p>\n<p>更新1.1：</p>\n<pre><code>## tcp长链接需要新增用户，/activemq/conf/activemq.xml   注意这个配置位置必须如下\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;persistenceAdapter&gt;</div><div class=\"line\">        &lt;kahaDB directory=&quot;$&#123;activemq.base&#125;/data/kahadb&quot;/&gt;</div><div class=\"line\">    &lt;/persistenceAdapter&gt;</div><div class=\"line\">    </div><div class=\"line\">     ==&lt;plugins&gt;</div><div class=\"line\">         &lt;simpleAuthenticationPlugin&gt;</div><div class=\"line\">             &lt;users&gt;</div><div class=\"line\">                 &lt;authenticationUser username=&quot;lxsoft&quot; password=&quot;lxtest&quot; groups=&quot;users,admins&quot;/&gt;</div><div class=\"line\">             &lt;/users&gt;</div><div class=\"line\">         &lt;/simpleAuthenticationPlugin&gt;</div><div class=\"line\">     &lt;/plugins&gt;==</div><div class=\"line\">    </div><div class=\"line\">      &lt;!--</div><div class=\"line\">        The systemUsage controls the maximum amount of space the broker will </div><div class=\"line\">        use before slowing down producers. For more information, see:</div><div class=\"line\">        </div><div class=\"line\">        http://activemq.apache.org/producer-flow-control.html</div><div class=\"line\">         </div><div class=\"line\">    &lt;systemUsage&gt;</div></pre></td></tr></table></figure>\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1下载activemq\"><a href=\"#1下载activemq\" class=\"headerlink\" title=\"1下载activemq\"></a>1下载activemq</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://archive.apache.org/dist/activemq/apache-activemq/5.6.0/apache-activemq-5.6.0-bin.tar.gz</div></pre></td></tr></table></figure>\n<h2 id=\"2-解压\"><a href=\"#2-解压\" class=\"headerlink\" title=\"2.解压\"></a>2.解压</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar zxf apache-activemq-5.6.0-bin.tar.gz</div></pre></td></tr></table></figure>\n<h2 id=\"3-进入解压后的activemq-bin目录-启动mq\"><a href=\"#3-进入解压后的activemq-bin目录-启动mq\" class=\"headerlink\" title=\"3.进入解压后的activemq/bin目录,启动mq\"></a>3.进入解压后的activemq/bin目录,启动mq</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ./activemq start</div></pre></td></tr></table></figure>\n<h2 id=\"5-测试是否启动成功\"><a href=\"#5-测试是否启动成功\" class=\"headerlink\" title=\"5.测试是否启动成功\"></a>5.测试是否启动成功</h2><p>  现在本机telnet一下端口是否正常<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">telnet 本机IP 8161</div></pre></td></tr></table></figure></p>\n<p> 再访问一下主页，一切正常！</p>\n<p><img src=\"/2017/05/05/active_mq/index.png\" alt=\"logo\"></p>\n<p>更新1.0：</p>\n<p>　　ubuntu上activemq和windows上不一样，默认登陆时不需要验证的，为了安全起见，建议修改下配置。</p>\n<h3 id=\"1-config文件夹下的jetty-xml，authenticate-值改成true\"><a href=\"#1-config文件夹下的jetty-xml，authenticate-值改成true\" class=\"headerlink\" title=\"　　1.config文件夹下的jetty.xml，authenticate 值改成true\"></a>　　1.config文件夹下的jetty.xml，authenticate 值改成true</h3><pre><code>2.config文件夹下的 jetty-realm.properties ，修改下用户和密码\n</code></pre><p><img src=\"/2017/05/05/active_mq/user.png\" alt=\"logo\"></p>\n<p>更新1.1：</p>\n<pre><code>## tcp长链接需要新增用户，/activemq/conf/activemq.xml   注意这个配置位置必须如下\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;persistenceAdapter&gt;</div><div class=\"line\">        &lt;kahaDB directory=&quot;$&#123;activemq.base&#125;/data/kahadb&quot;/&gt;</div><div class=\"line\">    &lt;/persistenceAdapter&gt;</div><div class=\"line\">    </div><div class=\"line\">     ==&lt;plugins&gt;</div><div class=\"line\">         &lt;simpleAuthenticationPlugin&gt;</div><div class=\"line\">             &lt;users&gt;</div><div class=\"line\">                 &lt;authenticationUser username=&quot;lxsoft&quot; password=&quot;lxtest&quot; groups=&quot;users,admins&quot;/&gt;</div><div class=\"line\">             &lt;/users&gt;</div><div class=\"line\">         &lt;/simpleAuthenticationPlugin&gt;</div><div class=\"line\">     &lt;/plugins&gt;==</div><div class=\"line\">    </div><div class=\"line\">      &lt;!--</div><div class=\"line\">        The systemUsage controls the maximum amount of space the broker will </div><div class=\"line\">        use before slowing down producers. For more information, see:</div><div class=\"line\">        </div><div class=\"line\">        http://activemq.apache.org/producer-flow-control.html</div><div class=\"line\">         </div><div class=\"line\">    &lt;systemUsage&gt;</div></pre></td></tr></table></figure>\n</code></pre>"},{"title":"data_hub 数据同步","date":"2017-04-25T05:51:49.000Z","_content":"\n# data_hub 数据同步\n\t使用技术 ：active_mq,jms等 \n\tps : 不对外开放，个人理解\n\n# 生产者发送数据：\n\n1.  获取需要推送的第三方应用，ref_platform_app    简述：给那个第三方应用发\n\n2.  获取平台推送到第三方应用的对象列表（获取平台要发送到第三方哪些表（ref_queue_obj,ref_platform_app,push_obj）） 简述：要发哪些表\n\n3.  获取每个表需要推送哪些字段的集合（集合包含：表名，以及每个表需要同步的字段。当然还有上面的队列名）  简述：要发的表的里面哪些字段\n\n4. 表名，队列名.+detail_obj.name,平台唯一标识，objinfo(表名，表哪些列)     简述：无\n\n5.  查询该表下的所有字段 list<Obj<所有列>>  --通过比对是否在需要同步的列集合里面得到---》 list<obj<所规定列>>  getDatas  简述：根据表名查询所有列数据，然后再遍历列集合，筛选字段得到需要发送的最终数据   表1（字段1，字段3.....）\n\n6. 注意在getData时侯，需要根据路由表来判断该数据是否同步过，同步过的数据不再参与同步，对查询得到的数据进行增删改查的分类封装，保存查询到的数据列表    简述：分类需要发送的数据，增删改，还有加密参数\n\n7.  开始发送数据  （app的 accessKey为app_secret,队列名agent,）   简述：设置发送数据的优先级以及一些加密参数\n\n8.  第六步得到的数据列表ids  更新路由表，将同步标识更新，避免 5，6步得到的数据是已经同步过的\n\n\n\n# 消费者接收数据：\n\n监听消息队列获取消息，对消息进行解密验证，获取同步的数据信息，进行入数据库等操作\n\n\n\n# data_hub功能解释：\n\n1. 队列名：调用active_mq接口，主要是这个推送过程中产生的一些队列信息。每个队列的生产，消费情况列表。和平台无关，来源 active——mq\n\t\t\n1. 推送对象绑定：平台发送到应用，使用的队列名，以及每个推送关系，需要推送的表数据对象\n2. 用到的表：\n    1. ：ref_platform_app  (关联表 open_platfrom,open_app)   \n\t2. ：ref_queue_obj (表功能如：云平台1到手环1作为一次推送，这次推送绑定的对象是学生表，教师表。这个绑定关系是此表)\n\t3. ：push_obj 推送对象，即 数据中心支持发送的所有表数据。\n\t4. ：detail_obj  关联 push_obj\n\t5. ：detail_obj_column  每个对象对应的属性\n\t6. : route_*  路由表，判断数据是否同步过\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n# 关于爬虫\n\t/home/data_hub/node/下文件 \n\t安装 nodejs，npm，forever\n\t\n\t修改app.js中   YWRtaW46YWRtaW4=, jmsAdress为爬取页面地址头部\n\t\n\t修改之后启动  ： node app.js\n\t\n\t后台启动：forever start app.js\n\t\n\t```\n\tvar express = require('express');\n\t\tvar app = express();\n\t\tvar request = require('request');\n\t\tvar parseString = require('xml2js').parseString;\n\t\tvar jmsAdress = 'http://119.23.62.150:8161/admin/xml/queues.jsp';\n\t\t// var initAdress = 'http://114.215.29.139:10090/gkopen/rpc/init?tocken=2012335444456871128213845&&id='\n\n\t\t// var options = {\n\t\t//     hostname:'114.215.29.139',\n\t\t//     port:'8161',\n\t\t//     path:'/admin/xml/queues.sjp',\n\t\t//     method:'GET',\n\t\t//     // headers:{\n\t\t//     //     'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n\t\t//     //     'Accept-Encoding':'gzip, deflate',\n\t\t//     //     'Accept-Language':'zh-CN,zh;q=0.8',\n\t\t//     //     'Connection':'keep-alive',\n\t\t//     //     'Authorization':'Basic YWRtaW46bHh0ZXN0',\n\t\t//     //     'Cache-Control':'max-age=0',\n\t\t//     //     'Upgrade-Insecure-Requests':'1',\n\t\t//     //     'Host':'114.215.29.139:8161',\n\t\t//     //     'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36'\n\t\t//     // }\n\t\t// };\n\t\tapp.get('/queue/json', function(req,res){\n\t\t\trequest.get(jmsAdress,{headers:{'Authorization':'Basic YWRtaW46YWRtaW4='}},function(error,response,body){\n\t\t\t  if (error) {\n\t\t\t  return console.error('upload failed:', error);\n\t\t\t}\n\t\t\tconsole.log('Upload successful!  Server responded with:', body);\n\t\t\tparseString(body,function(error,data){\n\t\t\t  if (!error){\n\t\t\t\tvar _data = JSON.stringify(data)\n\t\t\t\tvar __data = _data.replace(/\\[/g,'');\n\t\t\t\tvar ___data = __data.replace(/\\]/g,'');\n\t\t\t\tvar ____data = ___data.replace('{\"queues\":{\"queue\":','[');\n\t\t\t\tvar _____data = ____data.replace('}}}}','}}]');\n\t\t\t\tvar data = JSON.parse(_____data);\n\t\t\t   res.jsonp(data);\n\t\t\t }\n\t\t\t})\n\t\t\t})\n\t\t});\n\n\t\t// app.get('/sync/init',function(req,res){\n\t\t  // var id = req.query.id;\n\t\t  // request.get(initAdress+id,function(error,response,body){\n\t\t\t// if (error){\n\t\t\t  // return console.error('error');\n\t\t\t// }\n\t\t\t// console.log('adress:',initAdress+id);\n\t\t\t  // console.log('id:',id);\n\t\t\t\t// console.log('body:',body);\n\t\t\t// res.redirect('http://127.0.0.1:11070/datahub/admin/sync');\n\t\t  // })\n\t\t// });\n\n\t\tvar server = app.listen(11060, function () {\n\t\t console.log(\"启动成功 11060\");\n\t\t})\n\t\t\n```\n\t\n\t\n\t\n\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t","source":"_posts/data_hub.md","raw":"---\ntitle: data_hub 数据同步\ndate: 2017-04-25 13:51:49\ntags: java\n---\n\n# data_hub 数据同步\n\t使用技术 ：active_mq,jms等 \n\tps : 不对外开放，个人理解\n\n# 生产者发送数据：\n\n1.  获取需要推送的第三方应用，ref_platform_app    简述：给那个第三方应用发\n\n2.  获取平台推送到第三方应用的对象列表（获取平台要发送到第三方哪些表（ref_queue_obj,ref_platform_app,push_obj）） 简述：要发哪些表\n\n3.  获取每个表需要推送哪些字段的集合（集合包含：表名，以及每个表需要同步的字段。当然还有上面的队列名）  简述：要发的表的里面哪些字段\n\n4. 表名，队列名.+detail_obj.name,平台唯一标识，objinfo(表名，表哪些列)     简述：无\n\n5.  查询该表下的所有字段 list<Obj<所有列>>  --通过比对是否在需要同步的列集合里面得到---》 list<obj<所规定列>>  getDatas  简述：根据表名查询所有列数据，然后再遍历列集合，筛选字段得到需要发送的最终数据   表1（字段1，字段3.....）\n\n6. 注意在getData时侯，需要根据路由表来判断该数据是否同步过，同步过的数据不再参与同步，对查询得到的数据进行增删改查的分类封装，保存查询到的数据列表    简述：分类需要发送的数据，增删改，还有加密参数\n\n7.  开始发送数据  （app的 accessKey为app_secret,队列名agent,）   简述：设置发送数据的优先级以及一些加密参数\n\n8.  第六步得到的数据列表ids  更新路由表，将同步标识更新，避免 5，6步得到的数据是已经同步过的\n\n\n\n# 消费者接收数据：\n\n监听消息队列获取消息，对消息进行解密验证，获取同步的数据信息，进行入数据库等操作\n\n\n\n# data_hub功能解释：\n\n1. 队列名：调用active_mq接口，主要是这个推送过程中产生的一些队列信息。每个队列的生产，消费情况列表。和平台无关，来源 active——mq\n\t\t\n1. 推送对象绑定：平台发送到应用，使用的队列名，以及每个推送关系，需要推送的表数据对象\n2. 用到的表：\n    1. ：ref_platform_app  (关联表 open_platfrom,open_app)   \n\t2. ：ref_queue_obj (表功能如：云平台1到手环1作为一次推送，这次推送绑定的对象是学生表，教师表。这个绑定关系是此表)\n\t3. ：push_obj 推送对象，即 数据中心支持发送的所有表数据。\n\t4. ：detail_obj  关联 push_obj\n\t5. ：detail_obj_column  每个对象对应的属性\n\t6. : route_*  路由表，判断数据是否同步过\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n# 关于爬虫\n\t/home/data_hub/node/下文件 \n\t安装 nodejs，npm，forever\n\t\n\t修改app.js中   YWRtaW46YWRtaW4=, jmsAdress为爬取页面地址头部\n\t\n\t修改之后启动  ： node app.js\n\t\n\t后台启动：forever start app.js\n\t\n\t```\n\tvar express = require('express');\n\t\tvar app = express();\n\t\tvar request = require('request');\n\t\tvar parseString = require('xml2js').parseString;\n\t\tvar jmsAdress = 'http://119.23.62.150:8161/admin/xml/queues.jsp';\n\t\t// var initAdress = 'http://114.215.29.139:10090/gkopen/rpc/init?tocken=2012335444456871128213845&&id='\n\n\t\t// var options = {\n\t\t//     hostname:'114.215.29.139',\n\t\t//     port:'8161',\n\t\t//     path:'/admin/xml/queues.sjp',\n\t\t//     method:'GET',\n\t\t//     // headers:{\n\t\t//     //     'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n\t\t//     //     'Accept-Encoding':'gzip, deflate',\n\t\t//     //     'Accept-Language':'zh-CN,zh;q=0.8',\n\t\t//     //     'Connection':'keep-alive',\n\t\t//     //     'Authorization':'Basic YWRtaW46bHh0ZXN0',\n\t\t//     //     'Cache-Control':'max-age=0',\n\t\t//     //     'Upgrade-Insecure-Requests':'1',\n\t\t//     //     'Host':'114.215.29.139:8161',\n\t\t//     //     'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36'\n\t\t//     // }\n\t\t// };\n\t\tapp.get('/queue/json', function(req,res){\n\t\t\trequest.get(jmsAdress,{headers:{'Authorization':'Basic YWRtaW46YWRtaW4='}},function(error,response,body){\n\t\t\t  if (error) {\n\t\t\t  return console.error('upload failed:', error);\n\t\t\t}\n\t\t\tconsole.log('Upload successful!  Server responded with:', body);\n\t\t\tparseString(body,function(error,data){\n\t\t\t  if (!error){\n\t\t\t\tvar _data = JSON.stringify(data)\n\t\t\t\tvar __data = _data.replace(/\\[/g,'');\n\t\t\t\tvar ___data = __data.replace(/\\]/g,'');\n\t\t\t\tvar ____data = ___data.replace('{\"queues\":{\"queue\":','[');\n\t\t\t\tvar _____data = ____data.replace('}}}}','}}]');\n\t\t\t\tvar data = JSON.parse(_____data);\n\t\t\t   res.jsonp(data);\n\t\t\t }\n\t\t\t})\n\t\t\t})\n\t\t});\n\n\t\t// app.get('/sync/init',function(req,res){\n\t\t  // var id = req.query.id;\n\t\t  // request.get(initAdress+id,function(error,response,body){\n\t\t\t// if (error){\n\t\t\t  // return console.error('error');\n\t\t\t// }\n\t\t\t// console.log('adress:',initAdress+id);\n\t\t\t  // console.log('id:',id);\n\t\t\t\t// console.log('body:',body);\n\t\t\t// res.redirect('http://127.0.0.1:11070/datahub/admin/sync');\n\t\t  // })\n\t\t// });\n\n\t\tvar server = app.listen(11060, function () {\n\t\t console.log(\"启动成功 11060\");\n\t\t})\n\t\t\n```\n\t\n\t\n\t\n\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t","slug":"data_hub","published":1,"updated":"2017-07-19T10:40:28.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58epj0004awpfk0pkt9kd","content":"<h1 id=\"data-hub-数据同步\"><a href=\"#data-hub-数据同步\" class=\"headerlink\" title=\"data_hub 数据同步\"></a>data_hub 数据同步</h1><pre><code>使用技术 ：active_mq,jms等 \nps : 不对外开放，个人理解\n</code></pre><h1 id=\"生产者发送数据：\"><a href=\"#生产者发送数据：\" class=\"headerlink\" title=\"生产者发送数据：\"></a>生产者发送数据：</h1><ol>\n<li><p>获取需要推送的第三方应用，ref_platform_app    简述：给那个第三方应用发</p>\n</li>\n<li><p>获取平台推送到第三方应用的对象列表（获取平台要发送到第三方哪些表（ref_queue_obj,ref_platform_app,push_obj）） 简述：要发哪些表</p>\n</li>\n<li><p>获取每个表需要推送哪些字段的集合（集合包含：表名，以及每个表需要同步的字段。当然还有上面的队列名）  简述：要发的表的里面哪些字段</p>\n</li>\n<li><p>表名，队列名.+detail_obj.name,平台唯一标识，objinfo(表名，表哪些列)     简述：无</p>\n</li>\n<li><p>查询该表下的所有字段 list<obj<所有列>&gt;  –通过比对是否在需要同步的列集合里面得到—》 list<obj<所规定列>&gt;  getDatas  简述：根据表名查询所有列数据，然后再遍历列集合，筛选字段得到需要发送的最终数据   表1（字段1，字段3…..）</obj<所规定列></obj<所有列></p>\n</li>\n<li><p>注意在getData时侯，需要根据路由表来判断该数据是否同步过，同步过的数据不再参与同步，对查询得到的数据进行增删改查的分类封装，保存查询到的数据列表    简述：分类需要发送的数据，增删改，还有加密参数</p>\n</li>\n<li><p>开始发送数据  （app的 accessKey为app_secret,队列名agent,）   简述：设置发送数据的优先级以及一些加密参数</p>\n</li>\n<li><p>第六步得到的数据列表ids  更新路由表，将同步标识更新，避免 5，6步得到的数据是已经同步过的</p>\n</li>\n</ol>\n<h1 id=\"消费者接收数据：\"><a href=\"#消费者接收数据：\" class=\"headerlink\" title=\"消费者接收数据：\"></a>消费者接收数据：</h1><p>监听消息队列获取消息，对消息进行解密验证，获取同步的数据信息，进行入数据库等操作</p>\n<h1 id=\"data-hub功能解释：\"><a href=\"#data-hub功能解释：\" class=\"headerlink\" title=\"data_hub功能解释：\"></a>data_hub功能解释：</h1><ol>\n<li><p>队列名：调用active_mq接口，主要是这个推送过程中产生的一些队列信息。每个队列的生产，消费情况列表。和平台无关，来源 active——mq</p>\n</li>\n<li><p>推送对象绑定：平台发送到应用，使用的队列名，以及每个推送关系，需要推送的表数据对象</p>\n</li>\n<li>用到的表：<ol>\n<li>：ref_platform_app  (关联表 open_platfrom,open_app)   </li>\n<li>：ref_queue_obj (表功能如：云平台1到手环1作为一次推送，这次推送绑定的对象是学生表，教师表。这个绑定关系是此表)</li>\n<li>：push_obj 推送对象，即 数据中心支持发送的所有表数据。</li>\n<li>：detail_obj  关联 push_obj</li>\n<li>：detail_obj_column  每个对象对应的属性</li>\n<li>: route_*  路由表，判断数据是否同步过</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"关于爬虫\"><a href=\"#关于爬虫\" class=\"headerlink\" title=\"关于爬虫\"></a>关于爬虫</h1><pre><code>/home/data_hub/node/下文件 \n安装 nodejs，npm，forever\n\n修改app.js中   YWRtaW46YWRtaW4=, jmsAdress为爬取页面地址头部\n\n修改之后启动  ： node app.js\n\n后台启动：forever start app.js\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">var express = require(&apos;express&apos;);</div><div class=\"line\">\tvar app = express();</div><div class=\"line\">\tvar request = require(&apos;request&apos;);</div><div class=\"line\">\tvar parseString = require(&apos;xml2js&apos;).parseString;</div><div class=\"line\">\tvar jmsAdress = &apos;http://119.23.62.150:8161/admin/xml/queues.jsp&apos;;</div><div class=\"line\">\t// var initAdress = &apos;http://114.215.29.139:10090/gkopen/rpc/init?tocken=2012335444456871128213845&amp;&amp;id=&apos;</div><div class=\"line\"></div><div class=\"line\">\t// var options = &#123;</div><div class=\"line\">\t//     hostname:&apos;114.215.29.139&apos;,</div><div class=\"line\">\t//     port:&apos;8161&apos;,</div><div class=\"line\">\t//     path:&apos;/admin/xml/queues.sjp&apos;,</div><div class=\"line\">\t//     method:&apos;GET&apos;,</div><div class=\"line\">\t//     // headers:&#123;</div><div class=\"line\">\t//     //     &apos;Accept&apos;:&apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&apos;,</div><div class=\"line\">\t//     //     &apos;Accept-Encoding&apos;:&apos;gzip, deflate&apos;,</div><div class=\"line\">\t//     //     &apos;Accept-Language&apos;:&apos;zh-CN,zh;q=0.8&apos;,</div><div class=\"line\">\t//     //     &apos;Connection&apos;:&apos;keep-alive&apos;,</div><div class=\"line\">\t//     //     &apos;Authorization&apos;:&apos;Basic YWRtaW46bHh0ZXN0&apos;,</div><div class=\"line\">\t//     //     &apos;Cache-Control&apos;:&apos;max-age=0&apos;,</div><div class=\"line\">\t//     //     &apos;Upgrade-Insecure-Requests&apos;:&apos;1&apos;,</div><div class=\"line\">\t//     //     &apos;Host&apos;:&apos;114.215.29.139:8161&apos;,</div><div class=\"line\">\t//     //     &apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36&apos;</div><div class=\"line\">\t//     // &#125;</div><div class=\"line\">\t// &#125;;</div><div class=\"line\">\tapp.get(&apos;/queue/json&apos;, function(req,res)&#123;</div><div class=\"line\">\t\trequest.get(jmsAdress,&#123;headers:&#123;&apos;Authorization&apos;:&apos;Basic YWRtaW46YWRtaW4=&apos;&#125;&#125;,function(error,response,body)&#123;</div><div class=\"line\">\t\t  if (error) &#123;</div><div class=\"line\">\t\t  return console.error(&apos;upload failed:&apos;, error);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tconsole.log(&apos;Upload successful!  Server responded with:&apos;, body);</div><div class=\"line\">\t\tparseString(body,function(error,data)&#123;</div><div class=\"line\">\t\t  if (!error)&#123;</div><div class=\"line\">\t\t\tvar _data = JSON.stringify(data)</div><div class=\"line\">\t\t\tvar __data = _data.replace(/\\[/g,&apos;&apos;);</div><div class=\"line\">\t\t\tvar ___data = __data.replace(/\\]/g,&apos;&apos;);</div><div class=\"line\">\t\t\tvar ____data = ___data.replace(&apos;&#123;&quot;queues&quot;:&#123;&quot;queue&quot;:&apos;,&apos;[&apos;);</div><div class=\"line\">\t\t\tvar _____data = ____data.replace(&apos;&#125;&#125;&#125;&#125;&apos;,&apos;&#125;&#125;]&apos;);</div><div class=\"line\">\t\t\tvar data = JSON.parse(_____data);</div><div class=\"line\">\t\t   res.jsonp(data);</div><div class=\"line\">\t\t &#125;</div><div class=\"line\">\t\t&#125;)</div><div class=\"line\">\t\t&#125;)</div><div class=\"line\">\t&#125;);</div><div class=\"line\"></div><div class=\"line\">\t// app.get(&apos;/sync/init&apos;,function(req,res)&#123;</div><div class=\"line\">\t  // var id = req.query.id;</div><div class=\"line\">\t  // request.get(initAdress+id,function(error,response,body)&#123;</div><div class=\"line\">\t\t// if (error)&#123;</div><div class=\"line\">\t\t  // return console.error(&apos;error&apos;);</div><div class=\"line\">\t\t// &#125;</div><div class=\"line\">\t\t// console.log(&apos;adress:&apos;,initAdress+id);</div><div class=\"line\">\t\t  // console.log(&apos;id:&apos;,id);</div><div class=\"line\">\t\t\t// console.log(&apos;body:&apos;,body);</div><div class=\"line\">\t\t// res.redirect(&apos;http://127.0.0.1:11070/datahub/admin/sync&apos;);</div><div class=\"line\">\t  // &#125;)</div><div class=\"line\">\t// &#125;);</div><div class=\"line\"></div><div class=\"line\">\tvar server = app.listen(11060, function () &#123;</div><div class=\"line\">\t console.log(&quot;启动成功 11060&quot;);</div><div class=\"line\">\t&#125;)</div></pre></td></tr></table></figure>\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"data-hub-数据同步\"><a href=\"#data-hub-数据同步\" class=\"headerlink\" title=\"data_hub 数据同步\"></a>data_hub 数据同步</h1><pre><code>使用技术 ：active_mq,jms等 \nps : 不对外开放，个人理解\n</code></pre><h1 id=\"生产者发送数据：\"><a href=\"#生产者发送数据：\" class=\"headerlink\" title=\"生产者发送数据：\"></a>生产者发送数据：</h1><ol>\n<li><p>获取需要推送的第三方应用，ref_platform_app    简述：给那个第三方应用发</p>\n</li>\n<li><p>获取平台推送到第三方应用的对象列表（获取平台要发送到第三方哪些表（ref_queue_obj,ref_platform_app,push_obj）） 简述：要发哪些表</p>\n</li>\n<li><p>获取每个表需要推送哪些字段的集合（集合包含：表名，以及每个表需要同步的字段。当然还有上面的队列名）  简述：要发的表的里面哪些字段</p>\n</li>\n<li><p>表名，队列名.+detail_obj.name,平台唯一标识，objinfo(表名，表哪些列)     简述：无</p>\n</li>\n<li><p>查询该表下的所有字段 list<Obj<所有列>&gt;  –通过比对是否在需要同步的列集合里面得到—》 list<obj<所规定列>&gt;  getDatas  简述：根据表名查询所有列数据，然后再遍历列集合，筛选字段得到需要发送的最终数据   表1（字段1，字段3…..）</obj<所规定列></Obj<所有列></p>\n</li>\n<li><p>注意在getData时侯，需要根据路由表来判断该数据是否同步过，同步过的数据不再参与同步，对查询得到的数据进行增删改查的分类封装，保存查询到的数据列表    简述：分类需要发送的数据，增删改，还有加密参数</p>\n</li>\n<li><p>开始发送数据  （app的 accessKey为app_secret,队列名agent,）   简述：设置发送数据的优先级以及一些加密参数</p>\n</li>\n<li><p>第六步得到的数据列表ids  更新路由表，将同步标识更新，避免 5，6步得到的数据是已经同步过的</p>\n</li>\n</ol>\n<h1 id=\"消费者接收数据：\"><a href=\"#消费者接收数据：\" class=\"headerlink\" title=\"消费者接收数据：\"></a>消费者接收数据：</h1><p>监听消息队列获取消息，对消息进行解密验证，获取同步的数据信息，进行入数据库等操作</p>\n<h1 id=\"data-hub功能解释：\"><a href=\"#data-hub功能解释：\" class=\"headerlink\" title=\"data_hub功能解释：\"></a>data_hub功能解释：</h1><ol>\n<li><p>队列名：调用active_mq接口，主要是这个推送过程中产生的一些队列信息。每个队列的生产，消费情况列表。和平台无关，来源 active——mq</p>\n</li>\n<li><p>推送对象绑定：平台发送到应用，使用的队列名，以及每个推送关系，需要推送的表数据对象</p>\n</li>\n<li>用到的表：<ol>\n<li>：ref_platform_app  (关联表 open_platfrom,open_app)   </li>\n<li>：ref_queue_obj (表功能如：云平台1到手环1作为一次推送，这次推送绑定的对象是学生表，教师表。这个绑定关系是此表)</li>\n<li>：push_obj 推送对象，即 数据中心支持发送的所有表数据。</li>\n<li>：detail_obj  关联 push_obj</li>\n<li>：detail_obj_column  每个对象对应的属性</li>\n<li>: route_*  路由表，判断数据是否同步过</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"关于爬虫\"><a href=\"#关于爬虫\" class=\"headerlink\" title=\"关于爬虫\"></a>关于爬虫</h1><pre><code>/home/data_hub/node/下文件 \n安装 nodejs，npm，forever\n\n修改app.js中   YWRtaW46YWRtaW4=, jmsAdress为爬取页面地址头部\n\n修改之后启动  ： node app.js\n\n后台启动：forever start app.js\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">var express = require(&apos;express&apos;);</div><div class=\"line\">\tvar app = express();</div><div class=\"line\">\tvar request = require(&apos;request&apos;);</div><div class=\"line\">\tvar parseString = require(&apos;xml2js&apos;).parseString;</div><div class=\"line\">\tvar jmsAdress = &apos;http://119.23.62.150:8161/admin/xml/queues.jsp&apos;;</div><div class=\"line\">\t// var initAdress = &apos;http://114.215.29.139:10090/gkopen/rpc/init?tocken=2012335444456871128213845&amp;&amp;id=&apos;</div><div class=\"line\"></div><div class=\"line\">\t// var options = &#123;</div><div class=\"line\">\t//     hostname:&apos;114.215.29.139&apos;,</div><div class=\"line\">\t//     port:&apos;8161&apos;,</div><div class=\"line\">\t//     path:&apos;/admin/xml/queues.sjp&apos;,</div><div class=\"line\">\t//     method:&apos;GET&apos;,</div><div class=\"line\">\t//     // headers:&#123;</div><div class=\"line\">\t//     //     &apos;Accept&apos;:&apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&apos;,</div><div class=\"line\">\t//     //     &apos;Accept-Encoding&apos;:&apos;gzip, deflate&apos;,</div><div class=\"line\">\t//     //     &apos;Accept-Language&apos;:&apos;zh-CN,zh;q=0.8&apos;,</div><div class=\"line\">\t//     //     &apos;Connection&apos;:&apos;keep-alive&apos;,</div><div class=\"line\">\t//     //     &apos;Authorization&apos;:&apos;Basic YWRtaW46bHh0ZXN0&apos;,</div><div class=\"line\">\t//     //     &apos;Cache-Control&apos;:&apos;max-age=0&apos;,</div><div class=\"line\">\t//     //     &apos;Upgrade-Insecure-Requests&apos;:&apos;1&apos;,</div><div class=\"line\">\t//     //     &apos;Host&apos;:&apos;114.215.29.139:8161&apos;,</div><div class=\"line\">\t//     //     &apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36&apos;</div><div class=\"line\">\t//     // &#125;</div><div class=\"line\">\t// &#125;;</div><div class=\"line\">\tapp.get(&apos;/queue/json&apos;, function(req,res)&#123;</div><div class=\"line\">\t\trequest.get(jmsAdress,&#123;headers:&#123;&apos;Authorization&apos;:&apos;Basic YWRtaW46YWRtaW4=&apos;&#125;&#125;,function(error,response,body)&#123;</div><div class=\"line\">\t\t  if (error) &#123;</div><div class=\"line\">\t\t  return console.error(&apos;upload failed:&apos;, error);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tconsole.log(&apos;Upload successful!  Server responded with:&apos;, body);</div><div class=\"line\">\t\tparseString(body,function(error,data)&#123;</div><div class=\"line\">\t\t  if (!error)&#123;</div><div class=\"line\">\t\t\tvar _data = JSON.stringify(data)</div><div class=\"line\">\t\t\tvar __data = _data.replace(/\\[/g,&apos;&apos;);</div><div class=\"line\">\t\t\tvar ___data = __data.replace(/\\]/g,&apos;&apos;);</div><div class=\"line\">\t\t\tvar ____data = ___data.replace(&apos;&#123;&quot;queues&quot;:&#123;&quot;queue&quot;:&apos;,&apos;[&apos;);</div><div class=\"line\">\t\t\tvar _____data = ____data.replace(&apos;&#125;&#125;&#125;&#125;&apos;,&apos;&#125;&#125;]&apos;);</div><div class=\"line\">\t\t\tvar data = JSON.parse(_____data);</div><div class=\"line\">\t\t   res.jsonp(data);</div><div class=\"line\">\t\t &#125;</div><div class=\"line\">\t\t&#125;)</div><div class=\"line\">\t\t&#125;)</div><div class=\"line\">\t&#125;);</div><div class=\"line\"></div><div class=\"line\">\t// app.get(&apos;/sync/init&apos;,function(req,res)&#123;</div><div class=\"line\">\t  // var id = req.query.id;</div><div class=\"line\">\t  // request.get(initAdress+id,function(error,response,body)&#123;</div><div class=\"line\">\t\t// if (error)&#123;</div><div class=\"line\">\t\t  // return console.error(&apos;error&apos;);</div><div class=\"line\">\t\t// &#125;</div><div class=\"line\">\t\t// console.log(&apos;adress:&apos;,initAdress+id);</div><div class=\"line\">\t\t  // console.log(&apos;id:&apos;,id);</div><div class=\"line\">\t\t\t// console.log(&apos;body:&apos;,body);</div><div class=\"line\">\t\t// res.redirect(&apos;http://127.0.0.1:11070/datahub/admin/sync&apos;);</div><div class=\"line\">\t  // &#125;)</div><div class=\"line\">\t// &#125;);</div><div class=\"line\"></div><div class=\"line\">\tvar server = app.listen(11060, function () &#123;</div><div class=\"line\">\t console.log(&quot;启动成功 11060&quot;);</div><div class=\"line\">\t&#125;)</div></pre></td></tr></table></figure>\n</code></pre>"},{"title":"docker内存满了","author":"zjy","date":"2017-08-18T13:00:26.000Z","_content":"# 启动docker容器不带日志\n\n## docker run 的时候加上参数 --log-driver=\"none\"。\n\n\n# 查看磁盘使用情况\n##\t\tdf -lh （查看磁盘使用情况）\n\n\n# 查看各个目录使用情况\n## du -h --max-depth=2  （目录检索深度）\n\n\n# 批量删除\n\n## find / -name *-json.log |xargs rm -rf\n\n\n# 查找大于某个大小\n## find / -type f -size +1G\n\n\n# 清理docker-log命令\n\necho \"==================== start clean docker containers logs ==========================\"  \n  \nlogs=$(find /var/lib/docker/containers/ -name *-json.log)  \n  \nfor log in $logs  \n        do  \n                echo \"clean logs : $log\"  \n                cat /dev/null > $log  \n        done  \n  \n  \necho \"==================== end clean docker containers logs   ==========================\"\n\n\n\n# remove exited containers:\ndocker ps --filter status=dead --filter status=exited -aq | xargs -r docker rm -v\n\n# remove unused images:\nlocal images=`docker images --no-trunc`;\nlocal lines=$(echo \"$images\" | awk '{print $2}' | grep -n \"<none>\" | cut -d: -f1 | sed 's/$/p/g');\nlines=`echo $lines`;\nlines=${lines// /;};\nlocal image_ids=$(echo \"$images\" | awk '{print $3}' | sed -n \"$lines\");\n[[ -n \"${image_ids[@]}\" ]] && docker rmi ${image_ids[@]}\n\n# remove unused volumes:\nfind '/var/lib/docker/volumes/' -mindepth 1 -maxdepth 1 -type d | grep -vFf <(\n  docker ps -aq | xargs docker inspect | jq -r '.[] | .Mounts | .[] | .Name | select(.)'\n) | xargs -r rm -fr\n\n。。。。","source":"_posts/docker内存满了.md","raw":"title: docker内存满了\nauthor: zjy\ndate: 2017-08-18 21:00:26\ntags:\n---\n# 启动docker容器不带日志\n\n## docker run 的时候加上参数 --log-driver=\"none\"。\n\n\n# 查看磁盘使用情况\n##\t\tdf -lh （查看磁盘使用情况）\n\n\n# 查看各个目录使用情况\n## du -h --max-depth=2  （目录检索深度）\n\n\n# 批量删除\n\n## find / -name *-json.log |xargs rm -rf\n\n\n# 查找大于某个大小\n## find / -type f -size +1G\n\n\n# 清理docker-log命令\n\necho \"==================== start clean docker containers logs ==========================\"  \n  \nlogs=$(find /var/lib/docker/containers/ -name *-json.log)  \n  \nfor log in $logs  \n        do  \n                echo \"clean logs : $log\"  \n                cat /dev/null > $log  \n        done  \n  \n  \necho \"==================== end clean docker containers logs   ==========================\"\n\n\n\n# remove exited containers:\ndocker ps --filter status=dead --filter status=exited -aq | xargs -r docker rm -v\n\n# remove unused images:\nlocal images=`docker images --no-trunc`;\nlocal lines=$(echo \"$images\" | awk '{print $2}' | grep -n \"<none>\" | cut -d: -f1 | sed 's/$/p/g');\nlines=`echo $lines`;\nlines=${lines// /;};\nlocal image_ids=$(echo \"$images\" | awk '{print $3}' | sed -n \"$lines\");\n[[ -n \"${image_ids[@]}\" ]] && docker rmi ${image_ids[@]}\n\n# remove unused volumes:\nfind '/var/lib/docker/volumes/' -mindepth 1 -maxdepth 1 -type d | grep -vFf <(\n  docker ps -aq | xargs docker inspect | jq -r '.[] | .Mounts | .[] | .Name | select(.)'\n) | xargs -r rm -fr\n\n。。。。","slug":"docker内存满了","published":1,"updated":"2017-08-29T13:17:59.907Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eps0006awpf6hqoq5yv","content":"<h1 id=\"启动docker容器不带日志\"><a href=\"#启动docker容器不带日志\" class=\"headerlink\" title=\"启动docker容器不带日志\"></a>启动docker容器不带日志</h1><h2 id=\"docker-run-的时候加上参数-–log-driver-”none”。\"><a href=\"#docker-run-的时候加上参数-–log-driver-”none”。\" class=\"headerlink\" title=\"docker run 的时候加上参数 –log-driver=”none”。\"></a>docker run 的时候加上参数 –log-driver=”none”。</h2><h1 id=\"查看磁盘使用情况\"><a href=\"#查看磁盘使用情况\" class=\"headerlink\" title=\"查看磁盘使用情况\"></a>查看磁盘使用情况</h1><h2 id=\"df-lh-（查看磁盘使用情况）\"><a href=\"#df-lh-（查看磁盘使用情况）\" class=\"headerlink\" title=\"df -lh （查看磁盘使用情况）\"></a>df -lh （查看磁盘使用情况）</h2><h1 id=\"查看各个目录使用情况\"><a href=\"#查看各个目录使用情况\" class=\"headerlink\" title=\"查看各个目录使用情况\"></a>查看各个目录使用情况</h1><h2 id=\"du-h-–max-depth-2-（目录检索深度）\"><a href=\"#du-h-–max-depth-2-（目录检索深度）\" class=\"headerlink\" title=\"du -h –max-depth=2  （目录检索深度）\"></a>du -h –max-depth=2  （目录检索深度）</h2><h1 id=\"批量删除\"><a href=\"#批量删除\" class=\"headerlink\" title=\"批量删除\"></a>批量删除</h1><h2 id=\"find-name-json-log-xargs-rm-rf\"><a href=\"#find-name-json-log-xargs-rm-rf\" class=\"headerlink\" title=\"find / -name *-json.log |xargs rm -rf\"></a>find / -name *-json.log |xargs rm -rf</h2><h1 id=\"查找大于某个大小\"><a href=\"#查找大于某个大小\" class=\"headerlink\" title=\"查找大于某个大小\"></a>查找大于某个大小</h1><h2 id=\"find-type-f-size-1G\"><a href=\"#find-type-f-size-1G\" class=\"headerlink\" title=\"find / -type f -size +1G\"></a>find / -type f -size +1G</h2><h1 id=\"清理docker-log命令\"><a href=\"#清理docker-log命令\" class=\"headerlink\" title=\"清理docker-log命令\"></a>清理docker-log命令</h1><p>echo “==================== start clean docker containers logs ==========================”  </p>\n<p>logs=$(find /var/lib/docker/containers/ -name *-json.log)  </p>\n<p>for log in $logs<br>        do<br>                echo “clean logs : $log”<br>                cat /dev/null &gt; $log<br>        done  </p>\n<p>echo “==================== end clean docker containers logs   ==========================”</p>\n<h1 id=\"remove-exited-containers\"><a href=\"#remove-exited-containers\" class=\"headerlink\" title=\"remove exited containers:\"></a>remove exited containers:</h1><p>docker ps –filter status=dead –filter status=exited -aq | xargs -r docker rm -v</p>\n<h1 id=\"remove-unused-images\"><a href=\"#remove-unused-images\" class=\"headerlink\" title=\"remove unused images:\"></a>remove unused images:</h1><p>local images=<code>docker images --no-trunc</code>;<br>local lines=$(echo “$images” | awk ‘{print $2}’ | grep -n “<none>“ | cut -d: -f1 | sed ‘s/$/p/g’);<br>lines=<code>echo $lines</code>;<br>lines=${lines// /;};<br>local image_ids=$(echo “$images” | awk ‘{print $3}’ | sed -n “$lines”);<br>[[ -n “${image_ids[@]}” ]] &amp;&amp; docker rmi ${image_ids[@]}</none></p>\n<h1 id=\"remove-unused-volumes\"><a href=\"#remove-unused-volumes\" class=\"headerlink\" title=\"remove unused volumes:\"></a>remove unused volumes:</h1><p>find ‘/var/lib/docker/volumes/‘ -mindepth 1 -maxdepth 1 -type d | grep -vFf &lt;(<br>  docker ps -aq | xargs docker inspect | jq -r ‘.[] | .Mounts | .[] | .Name | select(.)’<br>) | xargs -r rm -fr</p>\n<p>。。。。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"启动docker容器不带日志\"><a href=\"#启动docker容器不带日志\" class=\"headerlink\" title=\"启动docker容器不带日志\"></a>启动docker容器不带日志</h1><h2 id=\"docker-run-的时候加上参数-–log-driver-”none”。\"><a href=\"#docker-run-的时候加上参数-–log-driver-”none”。\" class=\"headerlink\" title=\"docker run 的时候加上参数 –log-driver=”none”。\"></a>docker run 的时候加上参数 –log-driver=”none”。</h2><h1 id=\"查看磁盘使用情况\"><a href=\"#查看磁盘使用情况\" class=\"headerlink\" title=\"查看磁盘使用情况\"></a>查看磁盘使用情况</h1><h2 id=\"df-lh-（查看磁盘使用情况）\"><a href=\"#df-lh-（查看磁盘使用情况）\" class=\"headerlink\" title=\"df -lh （查看磁盘使用情况）\"></a>df -lh （查看磁盘使用情况）</h2><h1 id=\"查看各个目录使用情况\"><a href=\"#查看各个目录使用情况\" class=\"headerlink\" title=\"查看各个目录使用情况\"></a>查看各个目录使用情况</h1><h2 id=\"du-h-–max-depth-2-（目录检索深度）\"><a href=\"#du-h-–max-depth-2-（目录检索深度）\" class=\"headerlink\" title=\"du -h –max-depth=2  （目录检索深度）\"></a>du -h –max-depth=2  （目录检索深度）</h2><h1 id=\"批量删除\"><a href=\"#批量删除\" class=\"headerlink\" title=\"批量删除\"></a>批量删除</h1><h2 id=\"find-name-json-log-xargs-rm-rf\"><a href=\"#find-name-json-log-xargs-rm-rf\" class=\"headerlink\" title=\"find / -name *-json.log |xargs rm -rf\"></a>find / -name *-json.log |xargs rm -rf</h2><h1 id=\"查找大于某个大小\"><a href=\"#查找大于某个大小\" class=\"headerlink\" title=\"查找大于某个大小\"></a>查找大于某个大小</h1><h2 id=\"find-type-f-size-1G\"><a href=\"#find-type-f-size-1G\" class=\"headerlink\" title=\"find / -type f -size +1G\"></a>find / -type f -size +1G</h2><h1 id=\"清理docker-log命令\"><a href=\"#清理docker-log命令\" class=\"headerlink\" title=\"清理docker-log命令\"></a>清理docker-log命令</h1><p>echo “==================== start clean docker containers logs ==========================”  </p>\n<p>logs=$(find /var/lib/docker/containers/ -name *-json.log)  </p>\n<p>for log in $logs<br>        do<br>                echo “clean logs : $log”<br>                cat /dev/null &gt; $log<br>        done  </p>\n<p>echo “==================== end clean docker containers logs   ==========================”</p>\n<h1 id=\"remove-exited-containers\"><a href=\"#remove-exited-containers\" class=\"headerlink\" title=\"remove exited containers:\"></a>remove exited containers:</h1><p>docker ps –filter status=dead –filter status=exited -aq | xargs -r docker rm -v</p>\n<h1 id=\"remove-unused-images\"><a href=\"#remove-unused-images\" class=\"headerlink\" title=\"remove unused images:\"></a>remove unused images:</h1><p>local images=<code>docker images --no-trunc</code>;<br>local lines=$(echo “$images” | awk ‘{print $2}’ | grep -n “<none>“ | cut -d: -f1 | sed ‘s/$/p/g’);<br>lines=<code>echo $lines</code>;<br>lines=${lines// /;};<br>local image_ids=$(echo “$images” | awk ‘{print $3}’ | sed -n “$lines”);<br>[[ -n “${image_ids[@]}” ]] &amp;&amp; docker rmi ${image_ids[@]}</none></p>\n<h1 id=\"remove-unused-volumes\"><a href=\"#remove-unused-volumes\" class=\"headerlink\" title=\"remove unused volumes:\"></a>remove unused volumes:</h1><p>find ‘/var/lib/docker/volumes/‘ -mindepth 1 -maxdepth 1 -type d | grep -vFf &lt;(<br>  docker ps -aq | xargs docker inspect | jq -r ‘.[] | .Mounts | .[] | .Name | select(.)’<br>) | xargs -r rm -fr</p>\n<p>。。。。</p>\n"},{"title":"docker私有库的搭建","date":"2017-05-05T05:51:49.000Z","_content":"\n# 准备\n\n server1，server2  （其中server1作为私有库服务器，server2作为普通客户端）\n \n## 在server1上\n\n1 下载 registry\n\t\n```\ndocker pull registry:latest\n```\n\n2 配置 /etc/default/docker  因为https需要证书密码等比较复杂，直接加 insecure-registry即可\n\n```\n# Docker Upstart and SysVinit configuration file\n\n# Customize location of Docker binary (especially for development testing).\n#DOCKER=\"/usr/local/bin/docker\"\n\n# Use DOCKER_OPTS to modify the daemon startup options.\n#DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"\nDOCKER_OPTS=\"--insecure-registry 127.0.0.1:5000\"\n# If you need Docker to use an HTTP proxy, it can also be specified here.\n#export http_proxy=\"http://127.0.0.1:3128/\"\n\n# This is also a handy place to tweak where Docker's temporary files go.\n#export TMPDIR=\"/mnt/bigdrive/docker-tmp\"\n\n```\n3 启动registry\n\n```\nsudo docker run --name registry -d -p 5000:5000 -v /home/docker_registry:/var/lib/registry --restart=always registry:latest\n```\n\n4 tag镜像\n\n```\ndocker tag redis server1:5000/redis\n\n```\n5 推送保存私有镜像\n```\ndocker push server1:5000/redis\n```\n\n5.1 查看推送到私有仓库的镜像\n```\n$ docker search 10.10.105.71:5000/tonybai/busybox/\nError response from daemon: Unexpected status code 404\n但通过v2版本的API，我们可以实现相同目的：\n\n$curl  http://10.10.105.71:5000/v2/_catalog\n{\"repositories\":[\"tonybai/busybox\"]}\n```\n\n## 在server2（client）上\n\n因为docker Registry中讲到， 如果采用insecure registry的模式，那么所有与Registry交互的主机上的Docker Daemon都要配置：–insecure-registry选项。除了这个模式还可以配置证书，在此不作说明\n\n1 配置 -insecure-registry(centos:/etc/sysconfig/docker   ubuntu:/etc/default/docker)\n```\n# Docker Upstart and SysVinit configuration file\n\n# Customize location of Docker binary (especially for development testing).\n#DOCKER=\"/usr/local/bin/docker\"\n\n# Use DOCKER_OPTS to modify the daemon startup options.\n#DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"\nDOCKER_OPTS=\"--insecure-registry server1:5000\"\n# If you need Docker to use an HTTP proxy, it can also be specified here.\n#export http_proxy=\"http://127.0.0.1:3128/\"\n\n# This is also a handy place to tweak where Docker's temporary files go.\n#export TMPDIR=\"/mnt/bigdrive/docker-tmp\"\n\n```\n2 下载\n\n```\ndocker pull server1:5000/redis\n```\n3 提交推送\n\n```\ndocker tag redis server1:5000/redis\n\ndocker push server1:5000/redis\n```\n\n\n\n\n\n\n\n 参考：\n http://www.cnblogs.com/xcloudbiz/articles/5526262.html","source":"_posts/docker私有仓库搭建.md","raw":"###### ---\ntitle: docker私有库的搭建\ndate: 2017-05-05 13:51:49\ntags: docker  ubuntu\n---\n\n# 准备\n\n server1，server2  （其中server1作为私有库服务器，server2作为普通客户端）\n \n## 在server1上\n\n1 下载 registry\n\t\n```\ndocker pull registry:latest\n```\n\n2 配置 /etc/default/docker  因为https需要证书密码等比较复杂，直接加 insecure-registry即可\n\n```\n# Docker Upstart and SysVinit configuration file\n\n# Customize location of Docker binary (especially for development testing).\n#DOCKER=\"/usr/local/bin/docker\"\n\n# Use DOCKER_OPTS to modify the daemon startup options.\n#DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"\nDOCKER_OPTS=\"--insecure-registry 127.0.0.1:5000\"\n# If you need Docker to use an HTTP proxy, it can also be specified here.\n#export http_proxy=\"http://127.0.0.1:3128/\"\n\n# This is also a handy place to tweak where Docker's temporary files go.\n#export TMPDIR=\"/mnt/bigdrive/docker-tmp\"\n\n```\n3 启动registry\n\n```\nsudo docker run --name registry -d -p 5000:5000 -v /home/docker_registry:/var/lib/registry --restart=always registry:latest\n```\n\n4 tag镜像\n\n```\ndocker tag redis server1:5000/redis\n\n```\n5 推送保存私有镜像\n```\ndocker push server1:5000/redis\n```\n\n5.1 查看推送到私有仓库的镜像\n```\n$ docker search 10.10.105.71:5000/tonybai/busybox/\nError response from daemon: Unexpected status code 404\n但通过v2版本的API，我们可以实现相同目的：\n\n$curl  http://10.10.105.71:5000/v2/_catalog\n{\"repositories\":[\"tonybai/busybox\"]}\n```\n\n## 在server2（client）上\n\n因为docker Registry中讲到， 如果采用insecure registry的模式，那么所有与Registry交互的主机上的Docker Daemon都要配置：–insecure-registry选项。除了这个模式还可以配置证书，在此不作说明\n\n1 配置 -insecure-registry(centos:/etc/sysconfig/docker   ubuntu:/etc/default/docker)\n```\n# Docker Upstart and SysVinit configuration file\n\n# Customize location of Docker binary (especially for development testing).\n#DOCKER=\"/usr/local/bin/docker\"\n\n# Use DOCKER_OPTS to modify the daemon startup options.\n#DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"\nDOCKER_OPTS=\"--insecure-registry server1:5000\"\n# If you need Docker to use an HTTP proxy, it can also be specified here.\n#export http_proxy=\"http://127.0.0.1:3128/\"\n\n# This is also a handy place to tweak where Docker's temporary files go.\n#export TMPDIR=\"/mnt/bigdrive/docker-tmp\"\n\n```\n2 下载\n\n```\ndocker pull server1:5000/redis\n```\n3 提交推送\n\n```\ndocker tag redis server1:5000/redis\n\ndocker push server1:5000/redis\n```\n\n\n\n\n\n\n\n 参考：\n http://www.cnblogs.com/xcloudbiz/articles/5526262.html","slug":"docker私有仓库搭建","published":1,"updated":"2017-07-19T10:40:28.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58epw0007awpf6j1vuo82","content":"<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p> server1，server2  （其中server1作为私有库服务器，server2作为普通客户端）</p>\n<h2 id=\"在server1上\"><a href=\"#在server1上\" class=\"headerlink\" title=\"在server1上\"></a>在server1上</h2><p>1 下载 registry</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker pull registry:latest</div></pre></td></tr></table></figure>\n<p>2 配置 /etc/default/docker  因为https需要证书密码等比较复杂，直接加 insecure-registry即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Docker Upstart and SysVinit configuration file</div><div class=\"line\"></div><div class=\"line\"># Customize location of Docker binary (especially for development testing).</div><div class=\"line\">#DOCKER=&quot;/usr/local/bin/docker&quot;</div><div class=\"line\"></div><div class=\"line\"># Use DOCKER_OPTS to modify the daemon startup options.</div><div class=\"line\">#DOCKER_OPTS=&quot;--dns 8.8.8.8 --dns 8.8.4.4&quot;</div><div class=\"line\">DOCKER_OPTS=&quot;--insecure-registry 127.0.0.1:5000&quot;</div><div class=\"line\"># If you need Docker to use an HTTP proxy, it can also be specified here.</div><div class=\"line\">#export http_proxy=&quot;http://127.0.0.1:3128/&quot;</div><div class=\"line\"></div><div class=\"line\"># This is also a handy place to tweak where Docker&apos;s temporary files go.</div><div class=\"line\">#export TMPDIR=&quot;/mnt/bigdrive/docker-tmp&quot;</div></pre></td></tr></table></figure>\n<p>3 启动registry</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run --name registry -d -p 5000:5000 -v /home/docker_registry:/var/lib/registry --restart=always registry:latest</div></pre></td></tr></table></figure>\n<p>4 tag镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker tag redis server1:5000/redis</div></pre></td></tr></table></figure>\n<p>5 推送保存私有镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker push server1:5000/redis</div></pre></td></tr></table></figure></p>\n<p>5.1 查看推送到私有仓库的镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker search 10.10.105.71:5000/tonybai/busybox/</div><div class=\"line\">Error response from daemon: Unexpected status code 404</div><div class=\"line\">但通过v2版本的API，我们可以实现相同目的：</div><div class=\"line\"></div><div class=\"line\">$curl  http://10.10.105.71:5000/v2/_catalog</div><div class=\"line\">&#123;&quot;repositories&quot;:[&quot;tonybai/busybox&quot;]&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"在server2（client）上\"><a href=\"#在server2（client）上\" class=\"headerlink\" title=\"在server2（client）上\"></a>在server2（client）上</h2><p>因为docker Registry中讲到， 如果采用insecure registry的模式，那么所有与Registry交互的主机上的Docker Daemon都要配置：–insecure-registry选项。除了这个模式还可以配置证书，在此不作说明</p>\n<p>1 配置 -insecure-registry(centos:/etc/sysconfig/docker   ubuntu:/etc/default/docker)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Docker Upstart and SysVinit configuration file</div><div class=\"line\"></div><div class=\"line\"># Customize location of Docker binary (especially for development testing).</div><div class=\"line\">#DOCKER=&quot;/usr/local/bin/docker&quot;</div><div class=\"line\"></div><div class=\"line\"># Use DOCKER_OPTS to modify the daemon startup options.</div><div class=\"line\">#DOCKER_OPTS=&quot;--dns 8.8.8.8 --dns 8.8.4.4&quot;</div><div class=\"line\">DOCKER_OPTS=&quot;--insecure-registry server1:5000&quot;</div><div class=\"line\"># If you need Docker to use an HTTP proxy, it can also be specified here.</div><div class=\"line\">#export http_proxy=&quot;http://127.0.0.1:3128/&quot;</div><div class=\"line\"></div><div class=\"line\"># This is also a handy place to tweak where Docker&apos;s temporary files go.</div><div class=\"line\">#export TMPDIR=&quot;/mnt/bigdrive/docker-tmp&quot;</div></pre></td></tr></table></figure></p>\n<p>2 下载</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker pull server1:5000/redis</div></pre></td></tr></table></figure>\n<p>3 提交推送</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker tag redis server1:5000/redis</div><div class=\"line\"></div><div class=\"line\">docker push server1:5000/redis</div></pre></td></tr></table></figure>\n<p> 参考：<br> <a href=\"http://www.cnblogs.com/xcloudbiz/articles/5526262.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/xcloudbiz/articles/5526262.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p> server1，server2  （其中server1作为私有库服务器，server2作为普通客户端）</p>\n<h2 id=\"在server1上\"><a href=\"#在server1上\" class=\"headerlink\" title=\"在server1上\"></a>在server1上</h2><p>1 下载 registry</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker pull registry:latest</div></pre></td></tr></table></figure>\n<p>2 配置 /etc/default/docker  因为https需要证书密码等比较复杂，直接加 insecure-registry即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Docker Upstart and SysVinit configuration file</div><div class=\"line\"></div><div class=\"line\"># Customize location of Docker binary (especially for development testing).</div><div class=\"line\">#DOCKER=&quot;/usr/local/bin/docker&quot;</div><div class=\"line\"></div><div class=\"line\"># Use DOCKER_OPTS to modify the daemon startup options.</div><div class=\"line\">#DOCKER_OPTS=&quot;--dns 8.8.8.8 --dns 8.8.4.4&quot;</div><div class=\"line\">DOCKER_OPTS=&quot;--insecure-registry 127.0.0.1:5000&quot;</div><div class=\"line\"># If you need Docker to use an HTTP proxy, it can also be specified here.</div><div class=\"line\">#export http_proxy=&quot;http://127.0.0.1:3128/&quot;</div><div class=\"line\"></div><div class=\"line\"># This is also a handy place to tweak where Docker&apos;s temporary files go.</div><div class=\"line\">#export TMPDIR=&quot;/mnt/bigdrive/docker-tmp&quot;</div></pre></td></tr></table></figure>\n<p>3 启动registry</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run --name registry -d -p 5000:5000 -v /home/docker_registry:/var/lib/registry --restart=always registry:latest</div></pre></td></tr></table></figure>\n<p>4 tag镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker tag redis server1:5000/redis</div></pre></td></tr></table></figure>\n<p>5 推送保存私有镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker push server1:5000/redis</div></pre></td></tr></table></figure></p>\n<p>5.1 查看推送到私有仓库的镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker search 10.10.105.71:5000/tonybai/busybox/</div><div class=\"line\">Error response from daemon: Unexpected status code 404</div><div class=\"line\">但通过v2版本的API，我们可以实现相同目的：</div><div class=\"line\"></div><div class=\"line\">$curl  http://10.10.105.71:5000/v2/_catalog</div><div class=\"line\">&#123;&quot;repositories&quot;:[&quot;tonybai/busybox&quot;]&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"在server2（client）上\"><a href=\"#在server2（client）上\" class=\"headerlink\" title=\"在server2（client）上\"></a>在server2（client）上</h2><p>因为docker Registry中讲到， 如果采用insecure registry的模式，那么所有与Registry交互的主机上的Docker Daemon都要配置：–insecure-registry选项。除了这个模式还可以配置证书，在此不作说明</p>\n<p>1 配置 -insecure-registry(centos:/etc/sysconfig/docker   ubuntu:/etc/default/docker)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Docker Upstart and SysVinit configuration file</div><div class=\"line\"></div><div class=\"line\"># Customize location of Docker binary (especially for development testing).</div><div class=\"line\">#DOCKER=&quot;/usr/local/bin/docker&quot;</div><div class=\"line\"></div><div class=\"line\"># Use DOCKER_OPTS to modify the daemon startup options.</div><div class=\"line\">#DOCKER_OPTS=&quot;--dns 8.8.8.8 --dns 8.8.4.4&quot;</div><div class=\"line\">DOCKER_OPTS=&quot;--insecure-registry server1:5000&quot;</div><div class=\"line\"># If you need Docker to use an HTTP proxy, it can also be specified here.</div><div class=\"line\">#export http_proxy=&quot;http://127.0.0.1:3128/&quot;</div><div class=\"line\"></div><div class=\"line\"># This is also a handy place to tweak where Docker&apos;s temporary files go.</div><div class=\"line\">#export TMPDIR=&quot;/mnt/bigdrive/docker-tmp&quot;</div></pre></td></tr></table></figure></p>\n<p>2 下载</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker pull server1:5000/redis</div></pre></td></tr></table></figure>\n<p>3 提交推送</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker tag redis server1:5000/redis</div><div class=\"line\"></div><div class=\"line\">docker push server1:5000/redis</div></pre></td></tr></table></figure>\n<p> 参考：<br> <a href=\"http://www.cnblogs.com/xcloudbiz/articles/5526262.html\">http://www.cnblogs.com/xcloudbiz/articles/5526262.html</a></p>\n"},{"title":"基于dwr的消息推送java web","date":"2016-09-03T05:51:49.000Z","_content":"\n1. pom.xml  加依赖\n    ```\n     <!-- https://mvnrepository.com/artifact/org.directwebremoting/dwr -->\n        <dependency>\n            <groupId>org.directwebremoting</groupId>\n            <artifactId>dwr</artifactId>\n            <version>3.0.0-RELEASE</version>\n        </dependency>\n    ```\n2. web.xml\n\n    ```\n     <!--dwr begin config!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-->\n    <servlet>\n        <display-name>DWR Servlet</display-name>\n        <servlet-name>dwr-invoker</servlet-name>\n        <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>\n        <init-param>\n            <param-name>debug</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <init-param>\n            <param-name>pollAndCometEnabled</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n\n    <servlet-mapping>\n        <servlet-name>dwr-invoker</servlet-name>\n        <url-pattern>/dwr/*</url-pattern>\n    </servlet-mapping>\n    <!--dwr end config!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-->\n    ```\n    \n3. dwr.xml（和web.xml同目录） 注意这里的javascript命名必须和前端导入的js名字一致    \n    ```\n    <!DOCTYPE dwr PUBLIC\n        \"-//GetAhead Limited//DTD Direct Web Remoting 3.0//EN\"\n        \"http://getahead.org/dwr/dwr30.dtd\">\n\n    <dwr>\n    <allow>\n        <!-- 这里的javascript 值就是页面引用的第三个js文件的名称-->\n        <create creator=\"new\" javascript=\"SendMsg\">\n            <param name=\"class\">cc.gukeer.common.dwr.SendMsg</param>\n        </create>\n    </allow>\n    </dwr>\n    ```\n    \n4.  cc.gukeer.common.dwr.SendMsg\n    ```\n        package cc.gukeer.common.dwr;\n\n    import org.directwebremoting.Browser;\n    import org.directwebremoting.ScriptBuffer;\n    import org.directwebremoting.ScriptSession;\n    import org.directwebremoting.ScriptSessionFilter;\n    \n    import javax.servlet.ServletException;\n    import java.util.Collection;\n    import java.util.List;\n    \n    /**\n     * Created by Administrator on 2017/5/22.\n     */\n    public class SendMsg {\n        public void send(final String msg,final List<String> uid) {\n    \n            //过滤器\n            ScriptSessionFilter filter = new ScriptSessionFilter() {\n                public boolean match(ScriptSession scriptSession) {\n                    Object userid= scriptSession.getAttribute(\"uid\");\n                    if (userid == null)\n                        return false;\n                    return uid.contains(userid.toString());\n                }\n            };\n    \n    \n            Runnable run = new Runnable() {\n                private ScriptBuffer script = new ScriptBuffer();\n    \n                @Override\n                public void run() {\n                    script.appendCall(\"show\", msg);\n    \n                    Collection<ScriptSession> sessions = Browser.getTargetSessions();\n    \n                    for (ScriptSession scriptSession : sessions) {\n                        scriptSession.addScript(script);\n                    }\n    \n                }\n            };\n            Browser. withAllSessionsFiltered(filter, run);    //注意这里调用了有filter功能的方法\n    \n        }\n    \n        public void init() throws ServletException {\n            InitUtil initUtil = new InitUtil();\n            initUtil.init();\n        }\n\n    }\n\n    ```\n    \n5.  InitUtil.java\n    ```\n    package cc.gukeer.common.dwr;\n\n    import cc.gukeer.smartBoard.persistence.entity.User;\n    import org.directwebremoting.Container;\n    import org.directwebremoting.ServerContextFactory;\n    import org.directwebremoting.WebContextFactory;\n    import org.directwebremoting.event.ScriptSessionEvent;\n    import org.directwebremoting.event.ScriptSessionListener;\n    import org.directwebremoting.extend.ScriptSessionManager;\n    import org.directwebremoting.servlet.DwrServlet;\n    \n    import javax.servlet.ServletException;\n    import javax.servlet.http.HttpSession;\n    \n    /**\n     * Created by lx on 2017/3/3.\n     */\n    public class InitUtil extends DwrServlet {\n        @Override\n        public void init() throws ServletException {\n            Container container = ServerContextFactory.get().getContainer();\n            // 工厂方法get()返回ServerContext实例\n            ScriptSessionManager manager = container.getBean(ScriptSessionManager.class);\n            ScriptSessionListener listener = new ScriptSessionListener() {\n                public void sessionCreated(ScriptSessionEvent ev) {\n                    HttpSession session = WebContextFactory.get().getSession();\n                    User user = (User) session.getAttribute(\"loginUser\");\n                    ev.getSession().setAttribute(\"uid\",  user.getId());\n                }\n                public void sessionDestroyed(ScriptSessionEvent ev) {\n                    ev.getSession().removeAttribute(\"uid\");\n                }\n            };\n            manager.addScriptSessionListener(listener);\n        }\n        }\n\n\n    ```\n\n6. 后端调用 \n    ```\n        List<String> users = new ArrayList<String>();\n        users.add(\"6\");\n        users.add(\"7\");\n\n        new SendMsg().send(\"测试成功\",users);\n    ```\n\n7. 页面  注意这三个文件，第三个文件本地不存在，但是它的名字必须和 dwr里定义的那个名字一样，参考第二步骤\n    ```\n\t<script type=\"text/javascript\" src=\"${ctx}/dwr/engine.js\"></script>\n    <script type=\"text/javascript\" src=\"${ctx}/dwr/util.js\"></script>\n    <script type=\"text/javascript\" src=\"${ctx}/dwr/interface/SendMsg.js\"></script>\n\t\n\t<script>\n\tdwr.engine.setActiveReverseAjax(true);\n\n    dwr.engine.setNotifyServerOnPageUnload(true);\n\n    function show(msg) {\n        alert(msg);\n    }\n\t\n\t $(function() {\n\n        SendMsg.init();//将当前的uid存到scriptSession中\n\t  });\n\t\n\t</script>\n\t\n    ```\n    ","source":"_posts/dwr.md","raw":"---\ntitle: 基于dwr的消息推送java web\ndate: 2016-09-03 13:51:49\ntags: java\n---\n\n1. pom.xml  加依赖\n    ```\n     <!-- https://mvnrepository.com/artifact/org.directwebremoting/dwr -->\n        <dependency>\n            <groupId>org.directwebremoting</groupId>\n            <artifactId>dwr</artifactId>\n            <version>3.0.0-RELEASE</version>\n        </dependency>\n    ```\n2. web.xml\n\n    ```\n     <!--dwr begin config!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-->\n    <servlet>\n        <display-name>DWR Servlet</display-name>\n        <servlet-name>dwr-invoker</servlet-name>\n        <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>\n        <init-param>\n            <param-name>debug</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <init-param>\n            <param-name>pollAndCometEnabled</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n\n    <servlet-mapping>\n        <servlet-name>dwr-invoker</servlet-name>\n        <url-pattern>/dwr/*</url-pattern>\n    </servlet-mapping>\n    <!--dwr end config!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-->\n    ```\n    \n3. dwr.xml（和web.xml同目录） 注意这里的javascript命名必须和前端导入的js名字一致    \n    ```\n    <!DOCTYPE dwr PUBLIC\n        \"-//GetAhead Limited//DTD Direct Web Remoting 3.0//EN\"\n        \"http://getahead.org/dwr/dwr30.dtd\">\n\n    <dwr>\n    <allow>\n        <!-- 这里的javascript 值就是页面引用的第三个js文件的名称-->\n        <create creator=\"new\" javascript=\"SendMsg\">\n            <param name=\"class\">cc.gukeer.common.dwr.SendMsg</param>\n        </create>\n    </allow>\n    </dwr>\n    ```\n    \n4.  cc.gukeer.common.dwr.SendMsg\n    ```\n        package cc.gukeer.common.dwr;\n\n    import org.directwebremoting.Browser;\n    import org.directwebremoting.ScriptBuffer;\n    import org.directwebremoting.ScriptSession;\n    import org.directwebremoting.ScriptSessionFilter;\n    \n    import javax.servlet.ServletException;\n    import java.util.Collection;\n    import java.util.List;\n    \n    /**\n     * Created by Administrator on 2017/5/22.\n     */\n    public class SendMsg {\n        public void send(final String msg,final List<String> uid) {\n    \n            //过滤器\n            ScriptSessionFilter filter = new ScriptSessionFilter() {\n                public boolean match(ScriptSession scriptSession) {\n                    Object userid= scriptSession.getAttribute(\"uid\");\n                    if (userid == null)\n                        return false;\n                    return uid.contains(userid.toString());\n                }\n            };\n    \n    \n            Runnable run = new Runnable() {\n                private ScriptBuffer script = new ScriptBuffer();\n    \n                @Override\n                public void run() {\n                    script.appendCall(\"show\", msg);\n    \n                    Collection<ScriptSession> sessions = Browser.getTargetSessions();\n    \n                    for (ScriptSession scriptSession : sessions) {\n                        scriptSession.addScript(script);\n                    }\n    \n                }\n            };\n            Browser. withAllSessionsFiltered(filter, run);    //注意这里调用了有filter功能的方法\n    \n        }\n    \n        public void init() throws ServletException {\n            InitUtil initUtil = new InitUtil();\n            initUtil.init();\n        }\n\n    }\n\n    ```\n    \n5.  InitUtil.java\n    ```\n    package cc.gukeer.common.dwr;\n\n    import cc.gukeer.smartBoard.persistence.entity.User;\n    import org.directwebremoting.Container;\n    import org.directwebremoting.ServerContextFactory;\n    import org.directwebremoting.WebContextFactory;\n    import org.directwebremoting.event.ScriptSessionEvent;\n    import org.directwebremoting.event.ScriptSessionListener;\n    import org.directwebremoting.extend.ScriptSessionManager;\n    import org.directwebremoting.servlet.DwrServlet;\n    \n    import javax.servlet.ServletException;\n    import javax.servlet.http.HttpSession;\n    \n    /**\n     * Created by lx on 2017/3/3.\n     */\n    public class InitUtil extends DwrServlet {\n        @Override\n        public void init() throws ServletException {\n            Container container = ServerContextFactory.get().getContainer();\n            // 工厂方法get()返回ServerContext实例\n            ScriptSessionManager manager = container.getBean(ScriptSessionManager.class);\n            ScriptSessionListener listener = new ScriptSessionListener() {\n                public void sessionCreated(ScriptSessionEvent ev) {\n                    HttpSession session = WebContextFactory.get().getSession();\n                    User user = (User) session.getAttribute(\"loginUser\");\n                    ev.getSession().setAttribute(\"uid\",  user.getId());\n                }\n                public void sessionDestroyed(ScriptSessionEvent ev) {\n                    ev.getSession().removeAttribute(\"uid\");\n                }\n            };\n            manager.addScriptSessionListener(listener);\n        }\n        }\n\n\n    ```\n\n6. 后端调用 \n    ```\n        List<String> users = new ArrayList<String>();\n        users.add(\"6\");\n        users.add(\"7\");\n\n        new SendMsg().send(\"测试成功\",users);\n    ```\n\n7. 页面  注意这三个文件，第三个文件本地不存在，但是它的名字必须和 dwr里定义的那个名字一样，参考第二步骤\n    ```\n\t<script type=\"text/javascript\" src=\"${ctx}/dwr/engine.js\"></script>\n    <script type=\"text/javascript\" src=\"${ctx}/dwr/util.js\"></script>\n    <script type=\"text/javascript\" src=\"${ctx}/dwr/interface/SendMsg.js\"></script>\n\t\n\t<script>\n\tdwr.engine.setActiveReverseAjax(true);\n\n    dwr.engine.setNotifyServerOnPageUnload(true);\n\n    function show(msg) {\n        alert(msg);\n    }\n\t\n\t $(function() {\n\n        SendMsg.init();//将当前的uid存到scriptSession中\n\t  });\n\t\n\t</script>\n\t\n    ```\n    ","slug":"dwr","published":1,"updated":"2017-07-19T10:40:28.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58epx0008awpfbtluun1s","content":"<ol>\n<li><p>pom.xml  加依赖</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- https://mvnrepository.com/artifact/org.directwebremoting/dwr --&gt;</div><div class=\"line\">   &lt;dependency&gt;</div><div class=\"line\">       &lt;groupId&gt;org.directwebremoting&lt;/groupId&gt;</div><div class=\"line\">       &lt;artifactId&gt;dwr&lt;/artifactId&gt;</div><div class=\"line\">       &lt;version&gt;3.0.0-RELEASE&lt;/version&gt;</div><div class=\"line\">   &lt;/dependency&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>web.xml</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;!--dwr begin config!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!--&gt;</div><div class=\"line\">&lt;servlet&gt;</div><div class=\"line\">    &lt;display-name&gt;DWR Servlet&lt;/display-name&gt;</div><div class=\"line\">    &lt;servlet-name&gt;dwr-invoker&lt;/servlet-name&gt;</div><div class=\"line\">    &lt;servlet-class&gt;org.directwebremoting.servlet.DwrServlet&lt;/servlet-class&gt;</div><div class=\"line\">    &lt;init-param&gt;</div><div class=\"line\">        &lt;param-name&gt;debug&lt;/param-name&gt;</div><div class=\"line\">        &lt;param-value&gt;true&lt;/param-value&gt;</div><div class=\"line\">    &lt;/init-param&gt;</div><div class=\"line\">    &lt;init-param&gt;</div><div class=\"line\">        &lt;param-name&gt;pollAndCometEnabled&lt;/param-name&gt;</div><div class=\"line\">        &lt;param-value&gt;true&lt;/param-value&gt;</div><div class=\"line\">    &lt;/init-param&gt;</div><div class=\"line\">    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</div><div class=\"line\">&lt;/servlet&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;servlet-mapping&gt;</div><div class=\"line\">    &lt;servlet-name&gt;dwr-invoker&lt;/servlet-name&gt;</div><div class=\"line\">    &lt;url-pattern&gt;/dwr/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/servlet-mapping&gt;</div><div class=\"line\">&lt;!--dwr end config!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!--&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li>dwr.xml（和web.xml同目录） 注意这里的javascript命名必须和前端导入的js名字一致     <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE dwr PUBLIC</div><div class=\"line\">    &quot;-//GetAhead Limited//DTD Direct Web Remoting 3.0//EN&quot;</div><div class=\"line\">    &quot;http://getahead.org/dwr/dwr30.dtd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;dwr&gt;</div><div class=\"line\">&lt;allow&gt;</div><div class=\"line\">    &lt;!-- 这里的javascript 值就是页面引用的第三个js文件的名称--&gt;</div><div class=\"line\">    &lt;create creator=&quot;new&quot; javascript=&quot;SendMsg&quot;&gt;</div><div class=\"line\">        &lt;param name=&quot;class&quot;&gt;cc.gukeer.common.dwr.SendMsg&lt;/param&gt;</div><div class=\"line\">    &lt;/create&gt;</div><div class=\"line\">&lt;/allow&gt;</div><div class=\"line\">&lt;/dwr&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li>cc.gukeer.common.dwr.SendMsg<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">    package cc.gukeer.common.dwr;</div><div class=\"line\"></div><div class=\"line\">import org.directwebremoting.Browser;</div><div class=\"line\">import org.directwebremoting.ScriptBuffer;</div><div class=\"line\">import org.directwebremoting.ScriptSession;</div><div class=\"line\">import org.directwebremoting.ScriptSessionFilter;</div><div class=\"line\"></div><div class=\"line\">import javax.servlet.ServletException;</div><div class=\"line\">import java.util.Collection;</div><div class=\"line\">import java.util.List;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * Created by Administrator on 2017/5/22.</div><div class=\"line\"> */</div><div class=\"line\">public class SendMsg &#123;</div><div class=\"line\">    public void send(final String msg,final List&lt;String&gt; uid) &#123;</div><div class=\"line\"></div><div class=\"line\">        //过滤器</div><div class=\"line\">        ScriptSessionFilter filter = new ScriptSessionFilter() &#123;</div><div class=\"line\">            public boolean match(ScriptSession scriptSession) &#123;</div><div class=\"line\">                Object userid= scriptSession.getAttribute(&quot;uid&quot;);</div><div class=\"line\">                if (userid == null)</div><div class=\"line\">                    return false;</div><div class=\"line\">                return uid.contains(userid.toString());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        Runnable run = new Runnable() &#123;</div><div class=\"line\">            private ScriptBuffer script = new ScriptBuffer();</div><div class=\"line\"></div><div class=\"line\">            @Override</div><div class=\"line\">            public void run() &#123;</div><div class=\"line\">                script.appendCall(&quot;show&quot;, msg);</div><div class=\"line\"></div><div class=\"line\">                Collection&lt;ScriptSession&gt; sessions = Browser.getTargetSessions();</div><div class=\"line\"></div><div class=\"line\">                for (ScriptSession scriptSession : sessions) &#123;</div><div class=\"line\">                    scriptSession.addScript(script);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        Browser. withAllSessionsFiltered(filter, run);    //注意这里调用了有filter功能的方法</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void init() throws ServletException &#123;</div><div class=\"line\">        InitUtil initUtil = new InitUtil();</div><div class=\"line\">        initUtil.init();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>InitUtil.java</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">package cc.gukeer.common.dwr;</div><div class=\"line\"></div><div class=\"line\">import cc.gukeer.smartBoard.persistence.entity.User;</div><div class=\"line\">import org.directwebremoting.Container;</div><div class=\"line\">import org.directwebremoting.ServerContextFactory;</div><div class=\"line\">import org.directwebremoting.WebContextFactory;</div><div class=\"line\">import org.directwebremoting.event.ScriptSessionEvent;</div><div class=\"line\">import org.directwebremoting.event.ScriptSessionListener;</div><div class=\"line\">import org.directwebremoting.extend.ScriptSessionManager;</div><div class=\"line\">import org.directwebremoting.servlet.DwrServlet;</div><div class=\"line\"></div><div class=\"line\">import javax.servlet.ServletException;</div><div class=\"line\">import javax.servlet.http.HttpSession;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * Created by lx on 2017/3/3.</div><div class=\"line\"> */</div><div class=\"line\">public class InitUtil extends DwrServlet &#123;</div><div class=\"line\">    @Override</div><div class=\"line\">    public void init() throws ServletException &#123;</div><div class=\"line\">        Container container = ServerContextFactory.get().getContainer();</div><div class=\"line\">        // 工厂方法get()返回ServerContext实例</div><div class=\"line\">        ScriptSessionManager manager = container.getBean(ScriptSessionManager.class);</div><div class=\"line\">        ScriptSessionListener listener = new ScriptSessionListener() &#123;</div><div class=\"line\">            public void sessionCreated(ScriptSessionEvent ev) &#123;</div><div class=\"line\">                HttpSession session = WebContextFactory.get().getSession();</div><div class=\"line\">                User user = (User) session.getAttribute(&quot;loginUser&quot;);</div><div class=\"line\">                ev.getSession().setAttribute(&quot;uid&quot;,  user.getId());</div><div class=\"line\">            &#125;</div><div class=\"line\">            public void sessionDestroyed(ScriptSessionEvent ev) &#123;</div><div class=\"line\">                ev.getSession().removeAttribute(&quot;uid&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        manager.addScriptSessionListener(listener);</div><div class=\"line\">    &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>后端调用 </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;String&gt; users = new ArrayList&lt;String&gt;();</div><div class=\"line\">users.add(&quot;6&quot;);</div><div class=\"line\">users.add(&quot;7&quot;);</div><div class=\"line\"></div><div class=\"line\">new SendMsg().send(&quot;测试成功&quot;,users);</div></pre></td></tr></table></figure>\n</li>\n<li><p>页面  注意这三个文件，第三个文件本地不存在，但是它的名字必须和 dwr里定义的那个名字一样，参考第二步骤</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;ctx&#125;/dwr/engine.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">   &lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;ctx&#125;/dwr/util.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">   &lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;ctx&#125;/dwr/interface/SendMsg.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">dwr.engine.setActiveReverseAjax(true);</div><div class=\"line\"></div><div class=\"line\">   dwr.engine.setNotifyServerOnPageUnload(true);</div><div class=\"line\"></div><div class=\"line\">   function show(msg) &#123;</div><div class=\"line\">       alert(msg);</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\"> $(function() &#123;</div><div class=\"line\"></div><div class=\"line\">       SendMsg.init();//将当前的uid存到scriptSession中</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>pom.xml  加依赖</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- https://mvnrepository.com/artifact/org.directwebremoting/dwr --&gt;</div><div class=\"line\">   &lt;dependency&gt;</div><div class=\"line\">       &lt;groupId&gt;org.directwebremoting&lt;/groupId&gt;</div><div class=\"line\">       &lt;artifactId&gt;dwr&lt;/artifactId&gt;</div><div class=\"line\">       &lt;version&gt;3.0.0-RELEASE&lt;/version&gt;</div><div class=\"line\">   &lt;/dependency&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>web.xml</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;!--dwr begin config!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!--&gt;</div><div class=\"line\">&lt;servlet&gt;</div><div class=\"line\">    &lt;display-name&gt;DWR Servlet&lt;/display-name&gt;</div><div class=\"line\">    &lt;servlet-name&gt;dwr-invoker&lt;/servlet-name&gt;</div><div class=\"line\">    &lt;servlet-class&gt;org.directwebremoting.servlet.DwrServlet&lt;/servlet-class&gt;</div><div class=\"line\">    &lt;init-param&gt;</div><div class=\"line\">        &lt;param-name&gt;debug&lt;/param-name&gt;</div><div class=\"line\">        &lt;param-value&gt;true&lt;/param-value&gt;</div><div class=\"line\">    &lt;/init-param&gt;</div><div class=\"line\">    &lt;init-param&gt;</div><div class=\"line\">        &lt;param-name&gt;pollAndCometEnabled&lt;/param-name&gt;</div><div class=\"line\">        &lt;param-value&gt;true&lt;/param-value&gt;</div><div class=\"line\">    &lt;/init-param&gt;</div><div class=\"line\">    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</div><div class=\"line\">&lt;/servlet&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;servlet-mapping&gt;</div><div class=\"line\">    &lt;servlet-name&gt;dwr-invoker&lt;/servlet-name&gt;</div><div class=\"line\">    &lt;url-pattern&gt;/dwr/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/servlet-mapping&gt;</div><div class=\"line\">&lt;!--dwr end config!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!--&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li>dwr.xml（和web.xml同目录） 注意这里的javascript命名必须和前端导入的js名字一致     <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE dwr PUBLIC</div><div class=\"line\">    &quot;-//GetAhead Limited//DTD Direct Web Remoting 3.0//EN&quot;</div><div class=\"line\">    &quot;http://getahead.org/dwr/dwr30.dtd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;dwr&gt;</div><div class=\"line\">&lt;allow&gt;</div><div class=\"line\">    &lt;!-- 这里的javascript 值就是页面引用的第三个js文件的名称--&gt;</div><div class=\"line\">    &lt;create creator=&quot;new&quot; javascript=&quot;SendMsg&quot;&gt;</div><div class=\"line\">        &lt;param name=&quot;class&quot;&gt;cc.gukeer.common.dwr.SendMsg&lt;/param&gt;</div><div class=\"line\">    &lt;/create&gt;</div><div class=\"line\">&lt;/allow&gt;</div><div class=\"line\">&lt;/dwr&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li>cc.gukeer.common.dwr.SendMsg<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">    package cc.gukeer.common.dwr;</div><div class=\"line\"></div><div class=\"line\">import org.directwebremoting.Browser;</div><div class=\"line\">import org.directwebremoting.ScriptBuffer;</div><div class=\"line\">import org.directwebremoting.ScriptSession;</div><div class=\"line\">import org.directwebremoting.ScriptSessionFilter;</div><div class=\"line\"></div><div class=\"line\">import javax.servlet.ServletException;</div><div class=\"line\">import java.util.Collection;</div><div class=\"line\">import java.util.List;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * Created by Administrator on 2017/5/22.</div><div class=\"line\"> */</div><div class=\"line\">public class SendMsg &#123;</div><div class=\"line\">    public void send(final String msg,final List&lt;String&gt; uid) &#123;</div><div class=\"line\"></div><div class=\"line\">        //过滤器</div><div class=\"line\">        ScriptSessionFilter filter = new ScriptSessionFilter() &#123;</div><div class=\"line\">            public boolean match(ScriptSession scriptSession) &#123;</div><div class=\"line\">                Object userid= scriptSession.getAttribute(&quot;uid&quot;);</div><div class=\"line\">                if (userid == null)</div><div class=\"line\">                    return false;</div><div class=\"line\">                return uid.contains(userid.toString());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        Runnable run = new Runnable() &#123;</div><div class=\"line\">            private ScriptBuffer script = new ScriptBuffer();</div><div class=\"line\"></div><div class=\"line\">            @Override</div><div class=\"line\">            public void run() &#123;</div><div class=\"line\">                script.appendCall(&quot;show&quot;, msg);</div><div class=\"line\"></div><div class=\"line\">                Collection&lt;ScriptSession&gt; sessions = Browser.getTargetSessions();</div><div class=\"line\"></div><div class=\"line\">                for (ScriptSession scriptSession : sessions) &#123;</div><div class=\"line\">                    scriptSession.addScript(script);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        Browser. withAllSessionsFiltered(filter, run);    //注意这里调用了有filter功能的方法</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void init() throws ServletException &#123;</div><div class=\"line\">        InitUtil initUtil = new InitUtil();</div><div class=\"line\">        initUtil.init();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>InitUtil.java</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">package cc.gukeer.common.dwr;</div><div class=\"line\"></div><div class=\"line\">import cc.gukeer.smartBoard.persistence.entity.User;</div><div class=\"line\">import org.directwebremoting.Container;</div><div class=\"line\">import org.directwebremoting.ServerContextFactory;</div><div class=\"line\">import org.directwebremoting.WebContextFactory;</div><div class=\"line\">import org.directwebremoting.event.ScriptSessionEvent;</div><div class=\"line\">import org.directwebremoting.event.ScriptSessionListener;</div><div class=\"line\">import org.directwebremoting.extend.ScriptSessionManager;</div><div class=\"line\">import org.directwebremoting.servlet.DwrServlet;</div><div class=\"line\"></div><div class=\"line\">import javax.servlet.ServletException;</div><div class=\"line\">import javax.servlet.http.HttpSession;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * Created by lx on 2017/3/3.</div><div class=\"line\"> */</div><div class=\"line\">public class InitUtil extends DwrServlet &#123;</div><div class=\"line\">    @Override</div><div class=\"line\">    public void init() throws ServletException &#123;</div><div class=\"line\">        Container container = ServerContextFactory.get().getContainer();</div><div class=\"line\">        // 工厂方法get()返回ServerContext实例</div><div class=\"line\">        ScriptSessionManager manager = container.getBean(ScriptSessionManager.class);</div><div class=\"line\">        ScriptSessionListener listener = new ScriptSessionListener() &#123;</div><div class=\"line\">            public void sessionCreated(ScriptSessionEvent ev) &#123;</div><div class=\"line\">                HttpSession session = WebContextFactory.get().getSession();</div><div class=\"line\">                User user = (User) session.getAttribute(&quot;loginUser&quot;);</div><div class=\"line\">                ev.getSession().setAttribute(&quot;uid&quot;,  user.getId());</div><div class=\"line\">            &#125;</div><div class=\"line\">            public void sessionDestroyed(ScriptSessionEvent ev) &#123;</div><div class=\"line\">                ev.getSession().removeAttribute(&quot;uid&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        manager.addScriptSessionListener(listener);</div><div class=\"line\">    &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>后端调用 </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;String&gt; users = new ArrayList&lt;String&gt;();</div><div class=\"line\">users.add(&quot;6&quot;);</div><div class=\"line\">users.add(&quot;7&quot;);</div><div class=\"line\"></div><div class=\"line\">new SendMsg().send(&quot;测试成功&quot;,users);</div></pre></td></tr></table></figure>\n</li>\n<li><p>页面  注意这三个文件，第三个文件本地不存在，但是它的名字必须和 dwr里定义的那个名字一样，参考第二步骤</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;ctx&#125;/dwr/engine.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">   &lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;ctx&#125;/dwr/util.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">   &lt;script type=&quot;text/javascript&quot; src=&quot;$&#123;ctx&#125;/dwr/interface/SendMsg.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">dwr.engine.setActiveReverseAjax(true);</div><div class=\"line\"></div><div class=\"line\">   dwr.engine.setNotifyServerOnPageUnload(true);</div><div class=\"line\"></div><div class=\"line\">   function show(msg) &#123;</div><div class=\"line\">       alert(msg);</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\"> $(function() &#123;</div><div class=\"line\"></div><div class=\"line\">       SendMsg.init();//将当前的uid存到scriptSession中</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"递归统计（spring bean扫描也用的这种模式）","date":"2017-05-03T05:51:49.000Z","_content":" 刚开始项目经理需要==统计项目代码行数==，所以写了这个类用来实现这个需求\n\n## 原理：\n参数  项目路径，需要统计的文件后缀名的集合\n  递归遍历项目路径下的所有文件直到找不到文件为止！\n## 核心方法：\n-   new File(path).listFiles();   获取这个路径下的文件数组  File[] \n-   遍历这个文件数组，如果是文件并且符合后缀名集合，加入到 全局变量 List<File> 里面去。如果是文件夹继续递归判断\n-   最终得到一个符合 所有后缀名，并且在指定路径下的所有文件 集合\n-   最后将这个集合通过文件流读取，来计算行数 FileReader（file）\n  \n  \n## 拓展: \n在使用fileReader的时候，因为读取文件是按行。所以可作为全文索引工具类。\n全局搜索项目里面的字符串。定位哪个文件的哪一行有指定的字符串\n\n## 类似应用：\n\nspring的包扫描原理\n扫描controller包下的所有class文件，并且判断它们是否是 isAnnoationCLass（Controller.class）注解类  递归\n\n仿照spring做的类扫描器代码如下：\n\n ```   \n package org.smart4j.framework.util;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.File;\nimport java.io.FileFilter;\nimport java.net.JarURLConnection;\nimport java.net.URL;\nimport java.util.Enumeration;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.jar.JarEntry;\nimport java.util.jar.JarFile;\n\npublic final class ClassUtil {\n\t\n\tprivate static final Logger LOGGER = LoggerFactory.getLogger(CastUtil.class);\n\t\n\t/**\n\t * 获取类加载器\n\t */\n\tpublic static ClassLoader getClassLoader(){\n\t\treturn Thread.currentThread().getContextClassLoader();\n\t}\n\t\n\t/**\n\t * 加载类\n\t */\n\tpublic static Class<?> loadClass(String className, boolean isInitialized){\n\t\tClass<?> cls;\n\t\ttry {\n\t\t\tcls = Class.forName(className, isInitialized, getClassLoader());\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.error(\"load class fail\", e);\n\t\t\te.printStackTrace();\n\t\t\tthrow new RuntimeException();\n\t\t}\n\t\treturn cls;\n\t}\n\t\n\t/**\n\t * 加载类\n\t * @param className\n\t * @return\n\t */\n\tpublic static Class<?> loadClass(String className) {\n\t\treturn loadClass(className, true);\n\t}\n\t\n\t/**\n\t * 获取指定包下的所有类\n\t */\n\tpublic static Set<Class<?>> getClassSet(String packageName){\n\t\tSet<Class<?>> classSet = new HashSet<Class<?>>();\n\t\ttry {\n\t\t\tEnumeration<URL> urls = getClassLoader().getResources(packageName.replace(\".\", \"/\"));\n\t\t\twhile(urls.hasMoreElements()){\n\t\t\t\tURL url = urls.nextElement();\n\t\t\t\tif(null != url){\n\t\t\t\t\tString protocol = url.getProtocol();\n\t\t\t\t\tif(\"file\".equals(protocol)){\n\t\t\t\t\t\tString packagePath = url.getPath().replaceAll(\"%20\", \"\");\n\t\t\t\t\t\taddClass(classSet, packagePath, packageName);\n\t\t\t\t\t}else if(\"jar\".equals(protocol)){\n\t\t\t\t\t\tJarURLConnection jarURLConnection = (JarURLConnection) url.openConnection();\n\t\t\t\t\t\tif(null!=jarURLConnection){\n\t\t\t\t\t\t\tJarFile jarFile = jarURLConnection.getJarFile();\n\t\t\t\t\t\t\tif(null!=jarFile){\n\t\t\t\t\t\t\t\tEnumeration<JarEntry> jarEntries = jarFile.entries();\n\t\t\t\t\t\t\t\twhile(jarEntries.hasMoreElements()){\n\t\t\t\t\t\t\t\t\tJarEntry jarEntry = jarEntries.nextElement();\n\t\t\t\t\t\t\t\t\tString jarEntryName = jarEntry.getName();\n\t\t\t\t\t\t\t\t\tif(\".class\".endsWith(jarEntryName)){\n\t\t\t\t\t\t\t\t\t\tString className = jarEntryName.substring(0, jarEntryName.lastIndexOf(\".\")).replaceAll(\"/\", \".\");\n\t\t\t\t\t\t\t\t\taddClass(classSet, className);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.error(\"get class set fail\", e);\n\t\t\te.printStackTrace();\n\t\t\tthrow new RuntimeException();\n\t\t}\n\t\treturn classSet;\n\t}\n\t\n\tprivate static void addClass(Set<Class<?>> classSet, String packagePath, String packageName){\n\t\tFile[] files = new File(packagePath).listFiles(new FileFilter() {\n\n\t\t\t@Override\n\t\t\tpublic boolean accept(File file) {\n\t\t\t\treturn (file.isFile() && file.getName().endsWith(\".class\")) || (\n\t\t\t\t\t\tfile.isDirectory());\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tfor(File file : files){\n\t\t\tString fileName = file.getName();\n\t\t\tif(file.isFile()){\n\t\t\t\tString className = fileName.substring(0, fileName.lastIndexOf(\".\"));\n\t\t\t\tif(StringUtil.isNotEmpty(className)){\n\t\t\t\t\tclassName = packageName + \".\" + className;\n\t\t\t\t}\n\t\t\t\taddClass(classSet, className);\n\t\t\t}else{\n\t\t\t\tString subPackagePath = fileName;\n\t\t\t\tif(StringUtil.isNotEmpty(packagePath)){\n\t\t\t\t\tsubPackagePath = packagePath + \"/\" + subPackagePath;\n\t\t\t\t}\n\t\t\t\tString subPackageName = fileName;\n\t\t\t\tif(StringUtil.isNotEmpty(packageName)){\n\t\t\t\t\tsubPackageName = packageName + \".\" + subPackageName;\n\t\t\t\t}\n\t\t\t\taddClass(classSet, subPackagePath, subPackageName);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\tprivate static void addClass(Set<Class<?>> classSet, String className){\n\t\tClass<?> cls = loadClass(className, false);\n\t\tclassSet.add(cls);\n\t}\n}\n\n ```  \n\n\n\n扫描文件统计代码行数代码如下：\n ```  \n package cn.gukeer.common.utils;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.util.*;\n\n\n/*\n*   添加所有文件方法addFiles，是否是目录判断方法 isDirectory ,读取行数方法readLinePerFile\n*\n*\n* */\npublic class HowManyLine {\n    List<File> list = new ArrayList<File>();\n    int linenumber = 0;\n\n    FileReader fr = null;\n    BufferedReader br = null;\n\n    /**\n     * @param path，fileSuffixList path:需要统计的路径\n     *                            fileSuffixList:需要统计的文件后缀List\n     */\n    public void counter(String path, List<String> fileSuffixList, String target) {\n        long begin = System.currentTimeMillis();\n        System.out.println(\"\\n开始读取\" + path + \"下的文件,若文件较多，耗时可能较长，请您耐心等待。。。。\\n\");\n        File file = new File(path);\n        File files[] = null;\n        files = file.listFiles();\n        addFile(files);//将目录下所有文件加入到list中\n        isDirectory(files);//所有文件列表进行遍历判断，若是文件夹，继续将该文件夹下的所有文件加入到list中，递归判断\n        Map map = readLinePerFile(fileSuffixList, target);\n        Set keys = map.keySet();\n        for (Object key : keys) {\n            System.out.println(key + \"共：\" + map.get(key) + \"行\");\n        }\n        long end = System.currentTimeMillis();\n        System.out.println(\"\\n读取完毕，共统计\" + list.size() + \"个文件，耗时\" + (end - begin) + \"毫秒\");\n    }\n\n    // 判断是否是目录 ，递归判断\n    public void isDirectory(File[] files) {\n        for (File s : files) {\n            if (s.isDirectory()) {\n                File file[] = s.listFiles();\n                addFile(file);\n                isDirectory(file);\n                continue;\n            }\n        }\n    }\n\n    //将文件列表添加到list中\n    public void addFile(File file[]) {\n        for (int index = 0; index < file.length; index++) {\n            list.add(file[index]);\n        }\n    }\n\n    //读取非空白行\n    public Map readLinePerFile(List<String> fileSuffixList, String target) {\n        Map map = new TreeMap();\n        try {\n            for (String suffix : fileSuffixList) {\n                int suffixNum = 0;\n                for (File s : list) {\n                    int yuan = linenumber;\n                    if (s.isDirectory()) {\n                        continue;\n                    }\n\n                    if (!suffix.equals(\".*\")){\n                        if (s.getName().lastIndexOf(suffix) <= 0) {\n                            continue;\n                        }\n                    }\n\n                    fr = new FileReader(s);\n                    br = new BufferedReader(fr);\n                    String i = \"\";\n                    int lineNum = 0;\n                    while ((i = br.readLine()) != null) {\n                        lineNum++;\n                        if (!isBlankLine(i)) {\n                            if (StringUtils.isNotEmpty(target))\n                                if (i.contains(target))\n                                    System.out.println(s.getName() + \"的第\" + lineNum + \"行有你需要搜索的字符串\");\n\n                            linenumber++;\n                            suffixNum++;\n\n                        }\n                    }\n                    /*System.out.print(s.getName());\n                    System.out.println(\"\\t\\t有\" + (linenumber - yuan) + \"行\");*/\n                }\n                map.put(suffix, suffixNum);\n            }\n            map.put(\"total\", linenumber);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (br != null) {\n                try {\n                    br.close();\n                } catch (Exception e) {\n                }\n            }\n            if (fr != null) {\n                try {\n                    fr.close();\n                } catch (Exception e) {\n                }\n            }\n        }\n        return map;\n    }\n\n    //是否是空行,是空行返回true\n    public boolean isBlankLine(String i) {\n        if (i.trim().length() == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    //全文索引\n    public static void main(String args[]) {\n        HowManyLine lineCounter = new HowManyLine();\n        List<String> fileSuffixList = new ArrayList<String>();\n        fileSuffixList.add(\".*\");\n       //fileSuffixList.add(\".jsp\");\n        //fileSuffixList.add(\".css\");\n       // fileSuffixList.add(\".js\");\n        //fileSuffixList.add(\".xml\");\n        //fileSuffixList.add(\".*\");\n       // lineCounter.counter(\"D:\\\\javaProjects\\\\git\\\\gkPlatform\", fileSuffixList, \"好不好\");\n        lineCounter.counter(\"D:\\\\blog\\\\zjy\\\\themes\\\\concise2\", fileSuffixList, \"o.com/weiboshow/ind\");\n    }\n}\n \n ```","source":"_posts/fileCount.md","raw":"title: 递归统计（spring bean扫描也用的这种模式）\ntags: java\ndate: 2017-05-03 13:51:49\n---\n 刚开始项目经理需要==统计项目代码行数==，所以写了这个类用来实现这个需求\n\n## 原理：\n参数  项目路径，需要统计的文件后缀名的集合\n  递归遍历项目路径下的所有文件直到找不到文件为止！\n## 核心方法：\n-   new File(path).listFiles();   获取这个路径下的文件数组  File[] \n-   遍历这个文件数组，如果是文件并且符合后缀名集合，加入到 全局变量 List<File> 里面去。如果是文件夹继续递归判断\n-   最终得到一个符合 所有后缀名，并且在指定路径下的所有文件 集合\n-   最后将这个集合通过文件流读取，来计算行数 FileReader（file）\n  \n  \n## 拓展: \n在使用fileReader的时候，因为读取文件是按行。所以可作为全文索引工具类。\n全局搜索项目里面的字符串。定位哪个文件的哪一行有指定的字符串\n\n## 类似应用：\n\nspring的包扫描原理\n扫描controller包下的所有class文件，并且判断它们是否是 isAnnoationCLass（Controller.class）注解类  递归\n\n仿照spring做的类扫描器代码如下：\n\n ```   \n package org.smart4j.framework.util;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.File;\nimport java.io.FileFilter;\nimport java.net.JarURLConnection;\nimport java.net.URL;\nimport java.util.Enumeration;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.jar.JarEntry;\nimport java.util.jar.JarFile;\n\npublic final class ClassUtil {\n\t\n\tprivate static final Logger LOGGER = LoggerFactory.getLogger(CastUtil.class);\n\t\n\t/**\n\t * 获取类加载器\n\t */\n\tpublic static ClassLoader getClassLoader(){\n\t\treturn Thread.currentThread().getContextClassLoader();\n\t}\n\t\n\t/**\n\t * 加载类\n\t */\n\tpublic static Class<?> loadClass(String className, boolean isInitialized){\n\t\tClass<?> cls;\n\t\ttry {\n\t\t\tcls = Class.forName(className, isInitialized, getClassLoader());\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.error(\"load class fail\", e);\n\t\t\te.printStackTrace();\n\t\t\tthrow new RuntimeException();\n\t\t}\n\t\treturn cls;\n\t}\n\t\n\t/**\n\t * 加载类\n\t * @param className\n\t * @return\n\t */\n\tpublic static Class<?> loadClass(String className) {\n\t\treturn loadClass(className, true);\n\t}\n\t\n\t/**\n\t * 获取指定包下的所有类\n\t */\n\tpublic static Set<Class<?>> getClassSet(String packageName){\n\t\tSet<Class<?>> classSet = new HashSet<Class<?>>();\n\t\ttry {\n\t\t\tEnumeration<URL> urls = getClassLoader().getResources(packageName.replace(\".\", \"/\"));\n\t\t\twhile(urls.hasMoreElements()){\n\t\t\t\tURL url = urls.nextElement();\n\t\t\t\tif(null != url){\n\t\t\t\t\tString protocol = url.getProtocol();\n\t\t\t\t\tif(\"file\".equals(protocol)){\n\t\t\t\t\t\tString packagePath = url.getPath().replaceAll(\"%20\", \"\");\n\t\t\t\t\t\taddClass(classSet, packagePath, packageName);\n\t\t\t\t\t}else if(\"jar\".equals(protocol)){\n\t\t\t\t\t\tJarURLConnection jarURLConnection = (JarURLConnection) url.openConnection();\n\t\t\t\t\t\tif(null!=jarURLConnection){\n\t\t\t\t\t\t\tJarFile jarFile = jarURLConnection.getJarFile();\n\t\t\t\t\t\t\tif(null!=jarFile){\n\t\t\t\t\t\t\t\tEnumeration<JarEntry> jarEntries = jarFile.entries();\n\t\t\t\t\t\t\t\twhile(jarEntries.hasMoreElements()){\n\t\t\t\t\t\t\t\t\tJarEntry jarEntry = jarEntries.nextElement();\n\t\t\t\t\t\t\t\t\tString jarEntryName = jarEntry.getName();\n\t\t\t\t\t\t\t\t\tif(\".class\".endsWith(jarEntryName)){\n\t\t\t\t\t\t\t\t\t\tString className = jarEntryName.substring(0, jarEntryName.lastIndexOf(\".\")).replaceAll(\"/\", \".\");\n\t\t\t\t\t\t\t\t\taddClass(classSet, className);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.error(\"get class set fail\", e);\n\t\t\te.printStackTrace();\n\t\t\tthrow new RuntimeException();\n\t\t}\n\t\treturn classSet;\n\t}\n\t\n\tprivate static void addClass(Set<Class<?>> classSet, String packagePath, String packageName){\n\t\tFile[] files = new File(packagePath).listFiles(new FileFilter() {\n\n\t\t\t@Override\n\t\t\tpublic boolean accept(File file) {\n\t\t\t\treturn (file.isFile() && file.getName().endsWith(\".class\")) || (\n\t\t\t\t\t\tfile.isDirectory());\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tfor(File file : files){\n\t\t\tString fileName = file.getName();\n\t\t\tif(file.isFile()){\n\t\t\t\tString className = fileName.substring(0, fileName.lastIndexOf(\".\"));\n\t\t\t\tif(StringUtil.isNotEmpty(className)){\n\t\t\t\t\tclassName = packageName + \".\" + className;\n\t\t\t\t}\n\t\t\t\taddClass(classSet, className);\n\t\t\t}else{\n\t\t\t\tString subPackagePath = fileName;\n\t\t\t\tif(StringUtil.isNotEmpty(packagePath)){\n\t\t\t\t\tsubPackagePath = packagePath + \"/\" + subPackagePath;\n\t\t\t\t}\n\t\t\t\tString subPackageName = fileName;\n\t\t\t\tif(StringUtil.isNotEmpty(packageName)){\n\t\t\t\t\tsubPackageName = packageName + \".\" + subPackageName;\n\t\t\t\t}\n\t\t\t\taddClass(classSet, subPackagePath, subPackageName);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\tprivate static void addClass(Set<Class<?>> classSet, String className){\n\t\tClass<?> cls = loadClass(className, false);\n\t\tclassSet.add(cls);\n\t}\n}\n\n ```  \n\n\n\n扫描文件统计代码行数代码如下：\n ```  \n package cn.gukeer.common.utils;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.util.*;\n\n\n/*\n*   添加所有文件方法addFiles，是否是目录判断方法 isDirectory ,读取行数方法readLinePerFile\n*\n*\n* */\npublic class HowManyLine {\n    List<File> list = new ArrayList<File>();\n    int linenumber = 0;\n\n    FileReader fr = null;\n    BufferedReader br = null;\n\n    /**\n     * @param path，fileSuffixList path:需要统计的路径\n     *                            fileSuffixList:需要统计的文件后缀List\n     */\n    public void counter(String path, List<String> fileSuffixList, String target) {\n        long begin = System.currentTimeMillis();\n        System.out.println(\"\\n开始读取\" + path + \"下的文件,若文件较多，耗时可能较长，请您耐心等待。。。。\\n\");\n        File file = new File(path);\n        File files[] = null;\n        files = file.listFiles();\n        addFile(files);//将目录下所有文件加入到list中\n        isDirectory(files);//所有文件列表进行遍历判断，若是文件夹，继续将该文件夹下的所有文件加入到list中，递归判断\n        Map map = readLinePerFile(fileSuffixList, target);\n        Set keys = map.keySet();\n        for (Object key : keys) {\n            System.out.println(key + \"共：\" + map.get(key) + \"行\");\n        }\n        long end = System.currentTimeMillis();\n        System.out.println(\"\\n读取完毕，共统计\" + list.size() + \"个文件，耗时\" + (end - begin) + \"毫秒\");\n    }\n\n    // 判断是否是目录 ，递归判断\n    public void isDirectory(File[] files) {\n        for (File s : files) {\n            if (s.isDirectory()) {\n                File file[] = s.listFiles();\n                addFile(file);\n                isDirectory(file);\n                continue;\n            }\n        }\n    }\n\n    //将文件列表添加到list中\n    public void addFile(File file[]) {\n        for (int index = 0; index < file.length; index++) {\n            list.add(file[index]);\n        }\n    }\n\n    //读取非空白行\n    public Map readLinePerFile(List<String> fileSuffixList, String target) {\n        Map map = new TreeMap();\n        try {\n            for (String suffix : fileSuffixList) {\n                int suffixNum = 0;\n                for (File s : list) {\n                    int yuan = linenumber;\n                    if (s.isDirectory()) {\n                        continue;\n                    }\n\n                    if (!suffix.equals(\".*\")){\n                        if (s.getName().lastIndexOf(suffix) <= 0) {\n                            continue;\n                        }\n                    }\n\n                    fr = new FileReader(s);\n                    br = new BufferedReader(fr);\n                    String i = \"\";\n                    int lineNum = 0;\n                    while ((i = br.readLine()) != null) {\n                        lineNum++;\n                        if (!isBlankLine(i)) {\n                            if (StringUtils.isNotEmpty(target))\n                                if (i.contains(target))\n                                    System.out.println(s.getName() + \"的第\" + lineNum + \"行有你需要搜索的字符串\");\n\n                            linenumber++;\n                            suffixNum++;\n\n                        }\n                    }\n                    /*System.out.print(s.getName());\n                    System.out.println(\"\\t\\t有\" + (linenumber - yuan) + \"行\");*/\n                }\n                map.put(suffix, suffixNum);\n            }\n            map.put(\"total\", linenumber);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (br != null) {\n                try {\n                    br.close();\n                } catch (Exception e) {\n                }\n            }\n            if (fr != null) {\n                try {\n                    fr.close();\n                } catch (Exception e) {\n                }\n            }\n        }\n        return map;\n    }\n\n    //是否是空行,是空行返回true\n    public boolean isBlankLine(String i) {\n        if (i.trim().length() == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    //全文索引\n    public static void main(String args[]) {\n        HowManyLine lineCounter = new HowManyLine();\n        List<String> fileSuffixList = new ArrayList<String>();\n        fileSuffixList.add(\".*\");\n       //fileSuffixList.add(\".jsp\");\n        //fileSuffixList.add(\".css\");\n       // fileSuffixList.add(\".js\");\n        //fileSuffixList.add(\".xml\");\n        //fileSuffixList.add(\".*\");\n       // lineCounter.counter(\"D:\\\\javaProjects\\\\git\\\\gkPlatform\", fileSuffixList, \"好不好\");\n        lineCounter.counter(\"D:\\\\blog\\\\zjy\\\\themes\\\\concise2\", fileSuffixList, \"o.com/weiboshow/ind\");\n    }\n}\n \n ```","slug":"fileCount","published":1,"updated":"2018-03-02T08:55:59.256Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eq0000bawpf87d7qdzi","content":"<p> 刚开始项目经理需要==统计项目代码行数==，所以写了这个类用来实现这个需求</p>\n<h2 id=\"原理：\"><a href=\"#原理：\" class=\"headerlink\" title=\"原理：\"></a>原理：</h2><p>参数  项目路径，需要统计的文件后缀名的集合<br>  递归遍历项目路径下的所有文件直到找不到文件为止！</p>\n<h2 id=\"核心方法：\"><a href=\"#核心方法：\" class=\"headerlink\" title=\"核心方法：\"></a>核心方法：</h2><ul>\n<li>new File(path).listFiles();   获取这个路径下的文件数组  File[] </li>\n<li>遍历这个文件数组，如果是文件并且符合后缀名集合，加入到 全局变量 List<file> 里面去。如果是文件夹继续递归判断</file></li>\n<li>最终得到一个符合 所有后缀名，并且在指定路径下的所有文件 集合</li>\n<li>最后将这个集合通过文件流读取，来计算行数 FileReader（file）</li>\n</ul>\n<h2 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展:\"></a>拓展:</h2><p>在使用fileReader的时候，因为读取文件是按行。所以可作为全文索引工具类。<br>全局搜索项目里面的字符串。定位哪个文件的哪一行有指定的字符串</p>\n<h2 id=\"类似应用：\"><a href=\"#类似应用：\" class=\"headerlink\" title=\"类似应用：\"></a>类似应用：</h2><p>spring的包扫描原理<br>扫描controller包下的所有class文件，并且判断它们是否是 isAnnoationCLass（Controller.class）注解类  递归</p>\n<p>仿照spring做的类扫描器代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div></pre></td><td class=\"code\"><pre><div class=\"line\"> package org.smart4j.framework.util;</div><div class=\"line\"></div><div class=\"line\">import org.slf4j.Logger;</div><div class=\"line\">import org.slf4j.LoggerFactory;</div><div class=\"line\"></div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.io.FileFilter;</div><div class=\"line\">import java.net.JarURLConnection;</div><div class=\"line\">import java.net.URL;</div><div class=\"line\">import java.util.Enumeration;</div><div class=\"line\">import java.util.HashSet;</div><div class=\"line\">import java.util.Set;</div><div class=\"line\">import java.util.jar.JarEntry;</div><div class=\"line\">import java.util.jar.JarFile;</div><div class=\"line\"></div><div class=\"line\">public final class ClassUtil &#123;</div><div class=\"line\">\t</div><div class=\"line\">\tprivate static final Logger LOGGER = LoggerFactory.getLogger(CastUtil.class);</div><div class=\"line\">\t</div><div class=\"line\">\t/**</div><div class=\"line\">\t * 获取类加载器</div><div class=\"line\">\t */</div><div class=\"line\">\tpublic static ClassLoader getClassLoader()&#123;</div><div class=\"line\">\t\treturn Thread.currentThread().getContextClassLoader();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t/**</div><div class=\"line\">\t * 加载类</div><div class=\"line\">\t */</div><div class=\"line\">\tpublic static Class&lt;?&gt; loadClass(String className, boolean isInitialized)&#123;</div><div class=\"line\">\t\tClass&lt;?&gt; cls;</div><div class=\"line\">\t\ttry &#123;</div><div class=\"line\">\t\t\tcls = Class.forName(className, isInitialized, getClassLoader());</div><div class=\"line\">\t\t&#125; catch (Exception e) &#123;</div><div class=\"line\">\t\t\tLOGGER.error(&quot;load class fail&quot;, e);</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\tthrow new RuntimeException();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\treturn cls;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t/**</div><div class=\"line\">\t * 加载类</div><div class=\"line\">\t * @param className</div><div class=\"line\">\t * @return</div><div class=\"line\">\t */</div><div class=\"line\">\tpublic static Class&lt;?&gt; loadClass(String className) &#123;</div><div class=\"line\">\t\treturn loadClass(className, true);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t/**</div><div class=\"line\">\t * 获取指定包下的所有类</div><div class=\"line\">\t */</div><div class=\"line\">\tpublic static Set&lt;Class&lt;?&gt;&gt; getClassSet(String packageName)&#123;</div><div class=\"line\">\t\tSet&lt;Class&lt;?&gt;&gt; classSet = new HashSet&lt;Class&lt;?&gt;&gt;();</div><div class=\"line\">\t\ttry &#123;</div><div class=\"line\">\t\t\tEnumeration&lt;URL&gt; urls = getClassLoader().getResources(packageName.replace(&quot;.&quot;, &quot;/&quot;));</div><div class=\"line\">\t\t\twhile(urls.hasMoreElements())&#123;</div><div class=\"line\">\t\t\t\tURL url = urls.nextElement();</div><div class=\"line\">\t\t\t\tif(null != url)&#123;</div><div class=\"line\">\t\t\t\t\tString protocol = url.getProtocol();</div><div class=\"line\">\t\t\t\t\tif(&quot;file&quot;.equals(protocol))&#123;</div><div class=\"line\">\t\t\t\t\t\tString packagePath = url.getPath().replaceAll(&quot;%20&quot;, &quot;&quot;);</div><div class=\"line\">\t\t\t\t\t\taddClass(classSet, packagePath, packageName);</div><div class=\"line\">\t\t\t\t\t&#125;else if(&quot;jar&quot;.equals(protocol))&#123;</div><div class=\"line\">\t\t\t\t\t\tJarURLConnection jarURLConnection = (JarURLConnection) url.openConnection();</div><div class=\"line\">\t\t\t\t\t\tif(null!=jarURLConnection)&#123;</div><div class=\"line\">\t\t\t\t\t\t\tJarFile jarFile = jarURLConnection.getJarFile();</div><div class=\"line\">\t\t\t\t\t\t\tif(null!=jarFile)&#123;</div><div class=\"line\">\t\t\t\t\t\t\t\tEnumeration&lt;JarEntry&gt; jarEntries = jarFile.entries();</div><div class=\"line\">\t\t\t\t\t\t\t\twhile(jarEntries.hasMoreElements())&#123;</div><div class=\"line\">\t\t\t\t\t\t\t\t\tJarEntry jarEntry = jarEntries.nextElement();</div><div class=\"line\">\t\t\t\t\t\t\t\t\tString jarEntryName = jarEntry.getName();</div><div class=\"line\">\t\t\t\t\t\t\t\t\tif(&quot;.class&quot;.endsWith(jarEntryName))&#123;</div><div class=\"line\">\t\t\t\t\t\t\t\t\t\tString className = jarEntryName.substring(0, jarEntryName.lastIndexOf(&quot;.&quot;)).replaceAll(&quot;/&quot;, &quot;.&quot;);</div><div class=\"line\">\t\t\t\t\t\t\t\t\taddClass(classSet, className);</div><div class=\"line\">\t\t\t\t\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; catch (Exception e) &#123;</div><div class=\"line\">\t\t\tLOGGER.error(&quot;get class set fail&quot;, e);</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\tthrow new RuntimeException();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\treturn classSet;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tprivate static void addClass(Set&lt;Class&lt;?&gt;&gt; classSet, String packagePath, String packageName)&#123;</div><div class=\"line\">\t\tFile[] files = new File(packagePath).listFiles(new FileFilter() &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\t@Override</div><div class=\"line\">\t\t\tpublic boolean accept(File file) &#123;</div><div class=\"line\">\t\t\t\treturn (file.isFile() &amp;&amp; file.getName().endsWith(&quot;.class&quot;)) || (</div><div class=\"line\">\t\t\t\t\t\tfile.isDirectory());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tfor(File file : files)&#123;</div><div class=\"line\">\t\t\tString fileName = file.getName();</div><div class=\"line\">\t\t\tif(file.isFile())&#123;</div><div class=\"line\">\t\t\t\tString className = fileName.substring(0, fileName.lastIndexOf(&quot;.&quot;));</div><div class=\"line\">\t\t\t\tif(StringUtil.isNotEmpty(className))&#123;</div><div class=\"line\">\t\t\t\t\tclassName = packageName + &quot;.&quot; + className;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\taddClass(classSet, className);</div><div class=\"line\">\t\t\t&#125;else&#123;</div><div class=\"line\">\t\t\t\tString subPackagePath = fileName;</div><div class=\"line\">\t\t\t\tif(StringUtil.isNotEmpty(packagePath))&#123;</div><div class=\"line\">\t\t\t\t\tsubPackagePath = packagePath + &quot;/&quot; + subPackagePath;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\tString subPackageName = fileName;</div><div class=\"line\">\t\t\t\tif(StringUtil.isNotEmpty(packageName))&#123;</div><div class=\"line\">\t\t\t\t\tsubPackageName = packageName + &quot;.&quot; + subPackageName;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\taddClass(classSet, subPackagePath, subPackageName);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tprivate static void addClass(Set&lt;Class&lt;?&gt;&gt; classSet, String className)&#123;</div><div class=\"line\">\t\tClass&lt;?&gt; cls = loadClass(className, false);</div><div class=\"line\">\t\tclassSet.add(cls);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> ```  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">扫描文件统计代码行数代码如下：</div><div class=\"line\"> ```  </div><div class=\"line\"> package cn.gukeer.common.utils;</div><div class=\"line\"></div><div class=\"line\">import java.io.BufferedReader;</div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.io.FileReader;</div><div class=\"line\">import java.util.*;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/*</div><div class=\"line\">*   添加所有文件方法addFiles，是否是目录判断方法 isDirectory ,读取行数方法readLinePerFile</div><div class=\"line\">*</div><div class=\"line\">*</div><div class=\"line\">* */</div><div class=\"line\">public class HowManyLine &#123;</div><div class=\"line\">    List&lt;File&gt; list = new ArrayList&lt;File&gt;();</div><div class=\"line\">    int linenumber = 0;</div><div class=\"line\"></div><div class=\"line\">    FileReader fr = null;</div><div class=\"line\">    BufferedReader br = null;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * @param path，fileSuffixList path:需要统计的路径</div><div class=\"line\">     *                            fileSuffixList:需要统计的文件后缀List</div><div class=\"line\">     */</div><div class=\"line\">    public void counter(String path, List&lt;String&gt; fileSuffixList, String target) &#123;</div><div class=\"line\">        long begin = System.currentTimeMillis();</div><div class=\"line\">        System.out.println(&quot;\\n开始读取&quot; + path + &quot;下的文件,若文件较多，耗时可能较长，请您耐心等待。。。。\\n&quot;);</div><div class=\"line\">        File file = new File(path);</div><div class=\"line\">        File files[] = null;</div><div class=\"line\">        files = file.listFiles();</div><div class=\"line\">        addFile(files);//将目录下所有文件加入到list中</div><div class=\"line\">        isDirectory(files);//所有文件列表进行遍历判断，若是文件夹，继续将该文件夹下的所有文件加入到list中，递归判断</div><div class=\"line\">        Map map = readLinePerFile(fileSuffixList, target);</div><div class=\"line\">        Set keys = map.keySet();</div><div class=\"line\">        for (Object key : keys) &#123;</div><div class=\"line\">            System.out.println(key + &quot;共：&quot; + map.get(key) + &quot;行&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        long end = System.currentTimeMillis();</div><div class=\"line\">        System.out.println(&quot;\\n读取完毕，共统计&quot; + list.size() + &quot;个文件，耗时&quot; + (end - begin) + &quot;毫秒&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    // 判断是否是目录 ，递归判断</div><div class=\"line\">    public void isDirectory(File[] files) &#123;</div><div class=\"line\">        for (File s : files) &#123;</div><div class=\"line\">            if (s.isDirectory()) &#123;</div><div class=\"line\">                File file[] = s.listFiles();</div><div class=\"line\">                addFile(file);</div><div class=\"line\">                isDirectory(file);</div><div class=\"line\">                continue;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //将文件列表添加到list中</div><div class=\"line\">    public void addFile(File file[]) &#123;</div><div class=\"line\">        for (int index = 0; index &lt; file.length; index++) &#123;</div><div class=\"line\">            list.add(file[index]);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //读取非空白行</div><div class=\"line\">    public Map readLinePerFile(List&lt;String&gt; fileSuffixList, String target) &#123;</div><div class=\"line\">        Map map = new TreeMap();</div><div class=\"line\">        try &#123;</div><div class=\"line\">            for (String suffix : fileSuffixList) &#123;</div><div class=\"line\">                int suffixNum = 0;</div><div class=\"line\">                for (File s : list) &#123;</div><div class=\"line\">                    int yuan = linenumber;</div><div class=\"line\">                    if (s.isDirectory()) &#123;</div><div class=\"line\">                        continue;</div><div class=\"line\">                    &#125;</div><div class=\"line\"></div><div class=\"line\">                    if (!suffix.equals(&quot;.*&quot;))&#123;</div><div class=\"line\">                        if (s.getName().lastIndexOf(suffix) &lt;= 0) &#123;</div><div class=\"line\">                            continue;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\"></div><div class=\"line\">                    fr = new FileReader(s);</div><div class=\"line\">                    br = new BufferedReader(fr);</div><div class=\"line\">                    String i = &quot;&quot;;</div><div class=\"line\">                    int lineNum = 0;</div><div class=\"line\">                    while ((i = br.readLine()) != null) &#123;</div><div class=\"line\">                        lineNum++;</div><div class=\"line\">                        if (!isBlankLine(i)) &#123;</div><div class=\"line\">                            if (StringUtils.isNotEmpty(target))</div><div class=\"line\">                                if (i.contains(target))</div><div class=\"line\">                                    System.out.println(s.getName() + &quot;的第&quot; + lineNum + &quot;行有你需要搜索的字符串&quot;);</div><div class=\"line\"></div><div class=\"line\">                            linenumber++;</div><div class=\"line\">                            suffixNum++;</div><div class=\"line\"></div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    /*System.out.print(s.getName());</div><div class=\"line\">                    System.out.println(&quot;\\t\\t有&quot; + (linenumber - yuan) + &quot;行&quot;);*/</div><div class=\"line\">                &#125;</div><div class=\"line\">                map.put(suffix, suffixNum);</div><div class=\"line\">            &#125;</div><div class=\"line\">            map.put(&quot;total&quot;, linenumber);</div><div class=\"line\"></div><div class=\"line\">        &#125; catch (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; finally &#123;</div><div class=\"line\">            if (br != null) &#123;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    br.close();</div><div class=\"line\">                &#125; catch (Exception e) &#123;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (fr != null) &#123;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    fr.close();</div><div class=\"line\">                &#125; catch (Exception e) &#123;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return map;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //是否是空行,是空行返回true</div><div class=\"line\">    public boolean isBlankLine(String i) &#123;</div><div class=\"line\">        if (i.trim().length() == 0) &#123;</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            return false;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //全文索引</div><div class=\"line\">    public static void main(String args[]) &#123;</div><div class=\"line\">        HowManyLine lineCounter = new HowManyLine();</div><div class=\"line\">        List&lt;String&gt; fileSuffixList = new ArrayList&lt;String&gt;();</div><div class=\"line\">        fileSuffixList.add(&quot;.*&quot;);</div><div class=\"line\">       //fileSuffixList.add(&quot;.jsp&quot;);</div><div class=\"line\">        //fileSuffixList.add(&quot;.css&quot;);</div><div class=\"line\">       // fileSuffixList.add(&quot;.js&quot;);</div><div class=\"line\">        //fileSuffixList.add(&quot;.xml&quot;);</div><div class=\"line\">        //fileSuffixList.add(&quot;.*&quot;);</div><div class=\"line\">       // lineCounter.counter(&quot;D:\\\\javaProjects\\\\git\\\\gkPlatform&quot;, fileSuffixList, &quot;好不好&quot;);</div><div class=\"line\">        lineCounter.counter(&quot;D:\\\\blog\\\\zjy\\\\themes\\\\concise2&quot;, fileSuffixList, &quot;o.com/weiboshow/ind&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p> 刚开始项目经理需要==统计项目代码行数==，所以写了这个类用来实现这个需求</p>\n<h2 id=\"原理：\"><a href=\"#原理：\" class=\"headerlink\" title=\"原理：\"></a>原理：</h2><p>参数  项目路径，需要统计的文件后缀名的集合<br>  递归遍历项目路径下的所有文件直到找不到文件为止！</p>\n<h2 id=\"核心方法：\"><a href=\"#核心方法：\" class=\"headerlink\" title=\"核心方法：\"></a>核心方法：</h2><ul>\n<li>new File(path).listFiles();   获取这个路径下的文件数组  File[] </li>\n<li>遍历这个文件数组，如果是文件并且符合后缀名集合，加入到 全局变量 List<File> 里面去。如果是文件夹继续递归判断</File></li>\n<li>最终得到一个符合 所有后缀名，并且在指定路径下的所有文件 集合</li>\n<li>最后将这个集合通过文件流读取，来计算行数 FileReader（file）</li>\n</ul>\n<h2 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展:\"></a>拓展:</h2><p>在使用fileReader的时候，因为读取文件是按行。所以可作为全文索引工具类。<br>全局搜索项目里面的字符串。定位哪个文件的哪一行有指定的字符串</p>\n<h2 id=\"类似应用：\"><a href=\"#类似应用：\" class=\"headerlink\" title=\"类似应用：\"></a>类似应用：</h2><p>spring的包扫描原理<br>扫描controller包下的所有class文件，并且判断它们是否是 isAnnoationCLass（Controller.class）注解类  递归</p>\n<p>仿照spring做的类扫描器代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div></pre></td><td class=\"code\"><pre><div class=\"line\"> package org.smart4j.framework.util;</div><div class=\"line\"></div><div class=\"line\">import org.slf4j.Logger;</div><div class=\"line\">import org.slf4j.LoggerFactory;</div><div class=\"line\"></div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.io.FileFilter;</div><div class=\"line\">import java.net.JarURLConnection;</div><div class=\"line\">import java.net.URL;</div><div class=\"line\">import java.util.Enumeration;</div><div class=\"line\">import java.util.HashSet;</div><div class=\"line\">import java.util.Set;</div><div class=\"line\">import java.util.jar.JarEntry;</div><div class=\"line\">import java.util.jar.JarFile;</div><div class=\"line\"></div><div class=\"line\">public final class ClassUtil &#123;</div><div class=\"line\">\t</div><div class=\"line\">\tprivate static final Logger LOGGER = LoggerFactory.getLogger(CastUtil.class);</div><div class=\"line\">\t</div><div class=\"line\">\t/**</div><div class=\"line\">\t * 获取类加载器</div><div class=\"line\">\t */</div><div class=\"line\">\tpublic static ClassLoader getClassLoader()&#123;</div><div class=\"line\">\t\treturn Thread.currentThread().getContextClassLoader();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t/**</div><div class=\"line\">\t * 加载类</div><div class=\"line\">\t */</div><div class=\"line\">\tpublic static Class&lt;?&gt; loadClass(String className, boolean isInitialized)&#123;</div><div class=\"line\">\t\tClass&lt;?&gt; cls;</div><div class=\"line\">\t\ttry &#123;</div><div class=\"line\">\t\t\tcls = Class.forName(className, isInitialized, getClassLoader());</div><div class=\"line\">\t\t&#125; catch (Exception e) &#123;</div><div class=\"line\">\t\t\tLOGGER.error(&quot;load class fail&quot;, e);</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\tthrow new RuntimeException();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\treturn cls;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t/**</div><div class=\"line\">\t * 加载类</div><div class=\"line\">\t * @param className</div><div class=\"line\">\t * @return</div><div class=\"line\">\t */</div><div class=\"line\">\tpublic static Class&lt;?&gt; loadClass(String className) &#123;</div><div class=\"line\">\t\treturn loadClass(className, true);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t/**</div><div class=\"line\">\t * 获取指定包下的所有类</div><div class=\"line\">\t */</div><div class=\"line\">\tpublic static Set&lt;Class&lt;?&gt;&gt; getClassSet(String packageName)&#123;</div><div class=\"line\">\t\tSet&lt;Class&lt;?&gt;&gt; classSet = new HashSet&lt;Class&lt;?&gt;&gt;();</div><div class=\"line\">\t\ttry &#123;</div><div class=\"line\">\t\t\tEnumeration&lt;URL&gt; urls = getClassLoader().getResources(packageName.replace(&quot;.&quot;, &quot;/&quot;));</div><div class=\"line\">\t\t\twhile(urls.hasMoreElements())&#123;</div><div class=\"line\">\t\t\t\tURL url = urls.nextElement();</div><div class=\"line\">\t\t\t\tif(null != url)&#123;</div><div class=\"line\">\t\t\t\t\tString protocol = url.getProtocol();</div><div class=\"line\">\t\t\t\t\tif(&quot;file&quot;.equals(protocol))&#123;</div><div class=\"line\">\t\t\t\t\t\tString packagePath = url.getPath().replaceAll(&quot;%20&quot;, &quot;&quot;);</div><div class=\"line\">\t\t\t\t\t\taddClass(classSet, packagePath, packageName);</div><div class=\"line\">\t\t\t\t\t&#125;else if(&quot;jar&quot;.equals(protocol))&#123;</div><div class=\"line\">\t\t\t\t\t\tJarURLConnection jarURLConnection = (JarURLConnection) url.openConnection();</div><div class=\"line\">\t\t\t\t\t\tif(null!=jarURLConnection)&#123;</div><div class=\"line\">\t\t\t\t\t\t\tJarFile jarFile = jarURLConnection.getJarFile();</div><div class=\"line\">\t\t\t\t\t\t\tif(null!=jarFile)&#123;</div><div class=\"line\">\t\t\t\t\t\t\t\tEnumeration&lt;JarEntry&gt; jarEntries = jarFile.entries();</div><div class=\"line\">\t\t\t\t\t\t\t\twhile(jarEntries.hasMoreElements())&#123;</div><div class=\"line\">\t\t\t\t\t\t\t\t\tJarEntry jarEntry = jarEntries.nextElement();</div><div class=\"line\">\t\t\t\t\t\t\t\t\tString jarEntryName = jarEntry.getName();</div><div class=\"line\">\t\t\t\t\t\t\t\t\tif(&quot;.class&quot;.endsWith(jarEntryName))&#123;</div><div class=\"line\">\t\t\t\t\t\t\t\t\t\tString className = jarEntryName.substring(0, jarEntryName.lastIndexOf(&quot;.&quot;)).replaceAll(&quot;/&quot;, &quot;.&quot;);</div><div class=\"line\">\t\t\t\t\t\t\t\t\taddClass(classSet, className);</div><div class=\"line\">\t\t\t\t\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; catch (Exception e) &#123;</div><div class=\"line\">\t\t\tLOGGER.error(&quot;get class set fail&quot;, e);</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\tthrow new RuntimeException();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\treturn classSet;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tprivate static void addClass(Set&lt;Class&lt;?&gt;&gt; classSet, String packagePath, String packageName)&#123;</div><div class=\"line\">\t\tFile[] files = new File(packagePath).listFiles(new FileFilter() &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\t@Override</div><div class=\"line\">\t\t\tpublic boolean accept(File file) &#123;</div><div class=\"line\">\t\t\t\treturn (file.isFile() &amp;&amp; file.getName().endsWith(&quot;.class&quot;)) || (</div><div class=\"line\">\t\t\t\t\t\tfile.isDirectory());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tfor(File file : files)&#123;</div><div class=\"line\">\t\t\tString fileName = file.getName();</div><div class=\"line\">\t\t\tif(file.isFile())&#123;</div><div class=\"line\">\t\t\t\tString className = fileName.substring(0, fileName.lastIndexOf(&quot;.&quot;));</div><div class=\"line\">\t\t\t\tif(StringUtil.isNotEmpty(className))&#123;</div><div class=\"line\">\t\t\t\t\tclassName = packageName + &quot;.&quot; + className;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\taddClass(classSet, className);</div><div class=\"line\">\t\t\t&#125;else&#123;</div><div class=\"line\">\t\t\t\tString subPackagePath = fileName;</div><div class=\"line\">\t\t\t\tif(StringUtil.isNotEmpty(packagePath))&#123;</div><div class=\"line\">\t\t\t\t\tsubPackagePath = packagePath + &quot;/&quot; + subPackagePath;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\tString subPackageName = fileName;</div><div class=\"line\">\t\t\t\tif(StringUtil.isNotEmpty(packageName))&#123;</div><div class=\"line\">\t\t\t\t\tsubPackageName = packageName + &quot;.&quot; + subPackageName;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\taddClass(classSet, subPackagePath, subPackageName);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tprivate static void addClass(Set&lt;Class&lt;?&gt;&gt; classSet, String className)&#123;</div><div class=\"line\">\t\tClass&lt;?&gt; cls = loadClass(className, false);</div><div class=\"line\">\t\tclassSet.add(cls);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> ```  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">扫描文件统计代码行数代码如下：</div><div class=\"line\"> ```  </div><div class=\"line\"> package cn.gukeer.common.utils;</div><div class=\"line\"></div><div class=\"line\">import java.io.BufferedReader;</div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.io.FileReader;</div><div class=\"line\">import java.util.*;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/*</div><div class=\"line\">*   添加所有文件方法addFiles，是否是目录判断方法 isDirectory ,读取行数方法readLinePerFile</div><div class=\"line\">*</div><div class=\"line\">*</div><div class=\"line\">* */</div><div class=\"line\">public class HowManyLine &#123;</div><div class=\"line\">    List&lt;File&gt; list = new ArrayList&lt;File&gt;();</div><div class=\"line\">    int linenumber = 0;</div><div class=\"line\"></div><div class=\"line\">    FileReader fr = null;</div><div class=\"line\">    BufferedReader br = null;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * @param path，fileSuffixList path:需要统计的路径</div><div class=\"line\">     *                            fileSuffixList:需要统计的文件后缀List</div><div class=\"line\">     */</div><div class=\"line\">    public void counter(String path, List&lt;String&gt; fileSuffixList, String target) &#123;</div><div class=\"line\">        long begin = System.currentTimeMillis();</div><div class=\"line\">        System.out.println(&quot;\\n开始读取&quot; + path + &quot;下的文件,若文件较多，耗时可能较长，请您耐心等待。。。。\\n&quot;);</div><div class=\"line\">        File file = new File(path);</div><div class=\"line\">        File files[] = null;</div><div class=\"line\">        files = file.listFiles();</div><div class=\"line\">        addFile(files);//将目录下所有文件加入到list中</div><div class=\"line\">        isDirectory(files);//所有文件列表进行遍历判断，若是文件夹，继续将该文件夹下的所有文件加入到list中，递归判断</div><div class=\"line\">        Map map = readLinePerFile(fileSuffixList, target);</div><div class=\"line\">        Set keys = map.keySet();</div><div class=\"line\">        for (Object key : keys) &#123;</div><div class=\"line\">            System.out.println(key + &quot;共：&quot; + map.get(key) + &quot;行&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        long end = System.currentTimeMillis();</div><div class=\"line\">        System.out.println(&quot;\\n读取完毕，共统计&quot; + list.size() + &quot;个文件，耗时&quot; + (end - begin) + &quot;毫秒&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    // 判断是否是目录 ，递归判断</div><div class=\"line\">    public void isDirectory(File[] files) &#123;</div><div class=\"line\">        for (File s : files) &#123;</div><div class=\"line\">            if (s.isDirectory()) &#123;</div><div class=\"line\">                File file[] = s.listFiles();</div><div class=\"line\">                addFile(file);</div><div class=\"line\">                isDirectory(file);</div><div class=\"line\">                continue;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //将文件列表添加到list中</div><div class=\"line\">    public void addFile(File file[]) &#123;</div><div class=\"line\">        for (int index = 0; index &lt; file.length; index++) &#123;</div><div class=\"line\">            list.add(file[index]);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //读取非空白行</div><div class=\"line\">    public Map readLinePerFile(List&lt;String&gt; fileSuffixList, String target) &#123;</div><div class=\"line\">        Map map = new TreeMap();</div><div class=\"line\">        try &#123;</div><div class=\"line\">            for (String suffix : fileSuffixList) &#123;</div><div class=\"line\">                int suffixNum = 0;</div><div class=\"line\">                for (File s : list) &#123;</div><div class=\"line\">                    int yuan = linenumber;</div><div class=\"line\">                    if (s.isDirectory()) &#123;</div><div class=\"line\">                        continue;</div><div class=\"line\">                    &#125;</div><div class=\"line\"></div><div class=\"line\">                    if (!suffix.equals(&quot;.*&quot;))&#123;</div><div class=\"line\">                        if (s.getName().lastIndexOf(suffix) &lt;= 0) &#123;</div><div class=\"line\">                            continue;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\"></div><div class=\"line\">                    fr = new FileReader(s);</div><div class=\"line\">                    br = new BufferedReader(fr);</div><div class=\"line\">                    String i = &quot;&quot;;</div><div class=\"line\">                    int lineNum = 0;</div><div class=\"line\">                    while ((i = br.readLine()) != null) &#123;</div><div class=\"line\">                        lineNum++;</div><div class=\"line\">                        if (!isBlankLine(i)) &#123;</div><div class=\"line\">                            if (StringUtils.isNotEmpty(target))</div><div class=\"line\">                                if (i.contains(target))</div><div class=\"line\">                                    System.out.println(s.getName() + &quot;的第&quot; + lineNum + &quot;行有你需要搜索的字符串&quot;);</div><div class=\"line\"></div><div class=\"line\">                            linenumber++;</div><div class=\"line\">                            suffixNum++;</div><div class=\"line\"></div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    /*System.out.print(s.getName());</div><div class=\"line\">                    System.out.println(&quot;\\t\\t有&quot; + (linenumber - yuan) + &quot;行&quot;);*/</div><div class=\"line\">                &#125;</div><div class=\"line\">                map.put(suffix, suffixNum);</div><div class=\"line\">            &#125;</div><div class=\"line\">            map.put(&quot;total&quot;, linenumber);</div><div class=\"line\"></div><div class=\"line\">        &#125; catch (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; finally &#123;</div><div class=\"line\">            if (br != null) &#123;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    br.close();</div><div class=\"line\">                &#125; catch (Exception e) &#123;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (fr != null) &#123;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    fr.close();</div><div class=\"line\">                &#125; catch (Exception e) &#123;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return map;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //是否是空行,是空行返回true</div><div class=\"line\">    public boolean isBlankLine(String i) &#123;</div><div class=\"line\">        if (i.trim().length() == 0) &#123;</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            return false;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //全文索引</div><div class=\"line\">    public static void main(String args[]) &#123;</div><div class=\"line\">        HowManyLine lineCounter = new HowManyLine();</div><div class=\"line\">        List&lt;String&gt; fileSuffixList = new ArrayList&lt;String&gt;();</div><div class=\"line\">        fileSuffixList.add(&quot;.*&quot;);</div><div class=\"line\">       //fileSuffixList.add(&quot;.jsp&quot;);</div><div class=\"line\">        //fileSuffixList.add(&quot;.css&quot;);</div><div class=\"line\">       // fileSuffixList.add(&quot;.js&quot;);</div><div class=\"line\">        //fileSuffixList.add(&quot;.xml&quot;);</div><div class=\"line\">        //fileSuffixList.add(&quot;.*&quot;);</div><div class=\"line\">       // lineCounter.counter(&quot;D:\\\\javaProjects\\\\git\\\\gkPlatform&quot;, fileSuffixList, &quot;好不好&quot;);</div><div class=\"line\">        lineCounter.counter(&quot;D:\\\\blog\\\\zjy\\\\themes\\\\concise2&quot;, fileSuffixList, &quot;o.com/weiboshow/ind&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"docker-入门","date":"2017-04-25T05:51:49.000Z","_content":"以下文章了解之后你可以在服务器上部署项目，本地不需要安装 tomcat，jdk，mysql等服务器，通过docker可以一键解决\t\n \n ## 快速入门\n \n \n### 安装docker\n\n```\n$ apt install docker.io -y\n```\n\n若找不到资源，需要更新资源库，命令为：\n``` bash\n$ sudo apt-get update && sudo apt-get upgrade\n```\n\n### 查看docker版本\n\n```\n$ docker -v\n```\n更多的docker相关知识请关注：https://www.docker.com/\n\n### docker安装mysql\n\n```\n$ docker pull mysql\n```\n\n\n### docker安装tomcat\n\n```\n$ docker pull tomcat\n```\n\n### 启动实例\ndocker 拉取了以上两个容器镜像之后，通过如下命令能获取到镜像列表\n```\n$ docker images -a\n```\n可以看到之前拉去到本地的两个镜像，接下来分别启动tomcat，mysql的实例，命令如下：\n启动一个docker实例\n```\n$ sudo docker run --name image_nick_name image_name:image_tag\n```\n\n启动mysql：\n```\n$ sudo docker run --name mysql -p 3400:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:latest\n``` \n启动tomcat：\n```\n$ sudo docker run -it -d --name tomcat tomcat:latest\n``` \n在启动之后，该服务器上即可成功访问到tomcat和mysql\n连接mysql：\n```\n$ mysql -u root -h 114.215.29.39 -P 3400  -p123456\n```\n访问ip：http://114.215.29.39:10050/ 即可出现如下页面：\n![logo](first/images/tom.png)","source":"_posts/first.md","raw":"title: docker-入门\ntags: 'server,linux,ubuntu'\ndate: 2017-04-25 13:51:49\n---\n以下文章了解之后你可以在服务器上部署项目，本地不需要安装 tomcat，jdk，mysql等服务器，通过docker可以一键解决\t\n \n ## 快速入门\n \n \n### 安装docker\n\n```\n$ apt install docker.io -y\n```\n\n若找不到资源，需要更新资源库，命令为：\n``` bash\n$ sudo apt-get update && sudo apt-get upgrade\n```\n\n### 查看docker版本\n\n```\n$ docker -v\n```\n更多的docker相关知识请关注：https://www.docker.com/\n\n### docker安装mysql\n\n```\n$ docker pull mysql\n```\n\n\n### docker安装tomcat\n\n```\n$ docker pull tomcat\n```\n\n### 启动实例\ndocker 拉取了以上两个容器镜像之后，通过如下命令能获取到镜像列表\n```\n$ docker images -a\n```\n可以看到之前拉去到本地的两个镜像，接下来分别启动tomcat，mysql的实例，命令如下：\n启动一个docker实例\n```\n$ sudo docker run --name image_nick_name image_name:image_tag\n```\n\n启动mysql：\n```\n$ sudo docker run --name mysql -p 3400:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:latest\n``` \n启动tomcat：\n```\n$ sudo docker run -it -d --name tomcat tomcat:latest\n``` \n在启动之后，该服务器上即可成功访问到tomcat和mysql\n连接mysql：\n```\n$ mysql -u root -h 114.215.29.39 -P 3400  -p123456\n```\n访问ip：http://114.215.29.39:10050/ 即可出现如下页面：\n![logo](first/images/tom.png)","slug":"first","published":1,"updated":"2017-07-19T10:40:28.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eq2000cawpf7axdtalw","content":"<p>以下文章了解之后你可以在服务器上部署项目，本地不需要安装 tomcat，jdk，mysql等服务器，通过docker可以一键解决    </p>\n<h2 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h2><h3 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ apt install docker.io -y</div></pre></td></tr></table></figure>\n<p>若找不到资源，需要更新资源库，命令为：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get update &amp;&amp; sudo apt-get upgrade</div></pre></td></tr></table></figure></p>\n<h3 id=\"查看docker版本\"><a href=\"#查看docker版本\" class=\"headerlink\" title=\"查看docker版本\"></a>查看docker版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker -v</div></pre></td></tr></table></figure>\n<p>更多的docker相关知识请关注：<a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"external\">https://www.docker.com/</a></p>\n<h3 id=\"docker安装mysql\"><a href=\"#docker安装mysql\" class=\"headerlink\" title=\"docker安装mysql\"></a>docker安装mysql</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker pull mysql</div></pre></td></tr></table></figure>\n<h3 id=\"docker安装tomcat\"><a href=\"#docker安装tomcat\" class=\"headerlink\" title=\"docker安装tomcat\"></a>docker安装tomcat</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker pull tomcat</div></pre></td></tr></table></figure>\n<h3 id=\"启动实例\"><a href=\"#启动实例\" class=\"headerlink\" title=\"启动实例\"></a>启动实例</h3><p>docker 拉取了以上两个容器镜像之后，通过如下命令能获取到镜像列表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker images -a</div></pre></td></tr></table></figure></p>\n<p>可以看到之前拉去到本地的两个镜像，接下来分别启动tomcat，mysql的实例，命令如下：<br>启动一个docker实例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo docker run --name image_nick_name image_name:image_tag</div></pre></td></tr></table></figure></p>\n<p>启动mysql：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo docker run --name mysql -p 3400:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:latest</div><div class=\"line\">``` </div><div class=\"line\">启动tomcat：</div></pre></td></tr></table></figure></p>\n<p>$ sudo docker run -it -d –name tomcat tomcat:latest<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在启动之后，该服务器上即可成功访问到tomcat和mysql</div><div class=\"line\">连接mysql：</div></pre></td></tr></table></figure></p>\n<p>$ mysql -u root -h 114.215.29.39 -P 3400  -p123456<br>```<br>访问ip：<a href=\"http://114.215.29.39:10050/\" target=\"_blank\" rel=\"external\">http://114.215.29.39:10050/</a> 即可出现如下页面：<br><img src=\"/2017/04/25/first/images/tom.png\" alt=\"logo\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>以下文章了解之后你可以在服务器上部署项目，本地不需要安装 tomcat，jdk，mysql等服务器，通过docker可以一键解决    </p>\n<h2 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h2><h3 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ apt install docker.io -y</div></pre></td></tr></table></figure>\n<p>若找不到资源，需要更新资源库，命令为：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get update &amp;&amp; sudo apt-get upgrade</div></pre></td></tr></table></figure></p>\n<h3 id=\"查看docker版本\"><a href=\"#查看docker版本\" class=\"headerlink\" title=\"查看docker版本\"></a>查看docker版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker -v</div></pre></td></tr></table></figure>\n<p>更多的docker相关知识请关注：<a href=\"https://www.docker.com/\">https://www.docker.com/</a></p>\n<h3 id=\"docker安装mysql\"><a href=\"#docker安装mysql\" class=\"headerlink\" title=\"docker安装mysql\"></a>docker安装mysql</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker pull mysql</div></pre></td></tr></table></figure>\n<h3 id=\"docker安装tomcat\"><a href=\"#docker安装tomcat\" class=\"headerlink\" title=\"docker安装tomcat\"></a>docker安装tomcat</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker pull tomcat</div></pre></td></tr></table></figure>\n<h3 id=\"启动实例\"><a href=\"#启动实例\" class=\"headerlink\" title=\"启动实例\"></a>启动实例</h3><p>docker 拉取了以上两个容器镜像之后，通过如下命令能获取到镜像列表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker images -a</div></pre></td></tr></table></figure></p>\n<p>可以看到之前拉去到本地的两个镜像，接下来分别启动tomcat，mysql的实例，命令如下：<br>启动一个docker实例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo docker run --name image_nick_name image_name:image_tag</div></pre></td></tr></table></figure></p>\n<p>启动mysql：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo docker run --name mysql -p 3400:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:latest</div><div class=\"line\">``` </div><div class=\"line\">启动tomcat：</div></pre></td></tr></table></figure></p>\n<p>$ sudo docker run -it -d –name tomcat tomcat:latest<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在启动之后，该服务器上即可成功访问到tomcat和mysql</div><div class=\"line\">连接mysql：</div></pre></td></tr></table></figure></p>\n<p>$ mysql -u root -h 114.215.29.39 -P 3400  -p123456<br>```<br>访问ip：<a href=\"http://114.215.29.39:10050/\">http://114.215.29.39:10050/</a> 即可出现如下页面：<br><img src=\"/2017/04/25/first/images/tom.png\" alt=\"logo\"></p>\n"},{"title":"iframe跨域嵌套头部","date":"2017-05-05T05:51:49.000Z","_content":"\n# 需求\n\n  ```\n 不同域名，使用iframe，想互相获取html\n \n 请查找 navigator.rar文件\n \n  ```\n  \n# 实现思路\n```\n使用js listener 消息发送html代码。\n\n\n\n\n头部公共菜单使用方法：\n\n（原理是将平台的头部菜单代码作为消息跨域发送到第三方应用）\n\n前提：\n\t平台的头部菜单，使用的css，js ，png，jpg静态资源文件支持外链访问\n\t例如：在第三方应用中 ,如下语句能访问到对应资源  \n\t\t<script src =\"www.pingtai.com/js\">\n\t\t<link src =\"www.pingtai.com/css\">\n\t\t<img src = \"www.pingtai.com/***.\">\n\t\t\n\t平台，第三方通过message.js插件来传递头部菜单代码\n\t\t\n\n安装步骤：\n\n\t切忌：平台用的logo等静态资源文件一定是外链能够访问的！否则代码同步到第三方应用，他的logo显示不出来\n\n\t上面说到是将平台头部菜单作为消息跨域发送，那么就有一个发送者（平台），一个接收者（第三方应用）\n\t\n\t\n\t1：作为平台的开发者：发送头部菜单代码：\n\n\t\t<script>\n\t\t\t window.onload = function(){\n\t\t\t\t var messenger = new Messenger('iframe1', 'header'); // header是消息的key\n\t\t\t\t \n\t\t\t\t messenger.addTarget(window.parent, 'parent'); \n\t\t\t\t\tvar msg = document.getElementById(\"header\").innerHTML;\n\t\t\t\t\tmessenger.targets[\"parent\"].send(msg);\n\t\t\t\t }\n\t\n\t\t</script>\n\t\t\n\t2：作为第三方应用对接者\n\t\n\t\t2-1： 引用平台提供的css，js外链样式以及js \n\t\t2-2:  页面引用iframe src为平台提供的头部菜单页面\t\n\t\t\t <iframe id=\"iframe\" src=\"../platform/header.html\" frameborder=\"0\" style=\"display:none\"></iframe>\n\t\t\t \n\t\t2-3 在页面添加头部菜单的div\n\t\t\t\t<div id=\"header\">\n\t\t\t\t</div> \n\t\t2-4 接受消息，将消息（此消息是平台发送的头部菜单的代码）放到2-3建的header里面\n\t\t\n\n```\n\n# 实现代码如下：\nmessage.js 代码\n```\nwindow.Messenger = (function() {\n\n    // 消息前缀, 建议使用自己的项目名, 避免多项目之间的冲突\n    // !注意 消息前缀应使用字符串类型\n    var prefix = \"koolearn\",\n        supportPostMessage = 'postMessage' in window,\n        lastHash = document.location.hash,\n        intervalId,\n        cacheId = 1,\n        extend = function() {\n            var args = arguments,\n                o = args[0],\n                len = args.length,\n                curr;\n            for (var j = 1; j < len; j++) {\n                curr = args[j];\n                for (var i in curr) {\n                    curr.hasOwnProperty(i) && (o[i] = curr[i]);\n                }\n            }\n            return o;\n        };\n\n    /**\n     * [Target description]\n     * @param {object} target Target 类, 消息对象\n     * @param {string} name   名字,iframe的id\n     * @param {string} prefix 前缀\n     */\n    function Target(target, name, prefix) {\n        var errMsg = '';\n        if (arguments.length < 2) {\n            errMsg = 'target error - target and name are both required';\n        } else if (typeof target != 'object') {\n            errMsg = 'target error - target itself must be window object';\n        } else if (typeof name != 'string') {\n            errMsg = 'target error - target name must be string type';\n        }\n        if (errMsg) {\n            throw new Error(errMsg);\n        }\n\n        this.target = target;\n        this.name = name;\n        this.prefix = prefix;\n    }\n\n    /**\n     * 消息拼接\n     * @param  {[string]} msg\n     * @return {[string]}\n     */\n    Target.prototype.handleMsg = function(msg) {\n        //prefix|name__Messenger__msg\n        return this.prefix + '|' + this.name + '__Messenger__' + msg;\n    };\n\n    /**\n     * 往 target 发送消息, 出于安全考虑, 发送消息会带上前缀\n     * @type {[type]}\n     */\n    Target.prototype.send = supportPostMessage ?\n        // IE8+ 以及现代浏览器支持\n        function(msg) {\n            this.target.postMessage(this.handleMsg(msg), '*');\n        } :\n        // 兼容IE 6/7\n        function(msg, targetUrl) {\n            targetUrl = (targetUrl || this.target.location || parent.location.href) + '';\n            //修改hash\n            this.target.location = targetUrl.replace(/#.*$/, '') + '#' + (+new Date) + (cacheId++) + '&' + this.handleMsg(msg);\n        };\n\n    /**\n     * 默认配置项，目前就一个\n     * @type {Object}\n     */\n    var defaultOpts = {\n        delay: 200\n    };\n\n    // 信使类\n    // 创建Messenger实例时指定, 必须指定Messenger的名字, (可选)指定项目名, 以避免Mashup类应用中的冲突\n    // !注意: 父子页面中projectName必须保持一致, 否则无法匹配\n    function Messenger(messengerName, projectName) {\n        this.targets = {};\n        this.name = messengerName;\n        this.listenFunc = [];\n        this.prefix = projectName || prefix;\n        this.opts = extend({}, defaultOpts);\n        this.initListen();\n    }\n\n    /**\n     * set opts\n     * @param {object} opts\n     */\n    Messenger.prototype.setOpts = function(opts) {\n        this.opts = extend(this.opts, opts || {});\n    };\n\n    /**\n     * 添加一个消息对象\n     * @param {object} target\n     * @param {string} name\n     */\n    Messenger.prototype.addTarget = function(target, name) {\n        this.targets[name] = new Target(target, name, this.prefix);\n    };\n\n    /**\n     * 移除一个消息对象\n     * @param  {string} name\n     * @return {}\n     */\n    Messenger.prototype.removeTarget = function(name) {\n        delete this.targets[name];\n    };\n\n    /**\n     * 初始化消息监听\n     * @return {null}\n     */\n    Messenger.prototype.initListen = function() {\n        var self = this;\n        /**\n         * [generalCallback description]\n         * @param  {string} msg prefix|name__Messenger__msg\n         * @return {[type]}     [description]\n         */\n        var generalCallback = function(msg) {\n            if (typeof msg == 'object' && msg.data) {\n                msg = msg.data;\n            }\n\n            var msgPairs = msg.split('__Messenger__');\n            var msg = msgPairs[1];\n            var pairs = msgPairs[0].split('|');\n            var prefix = pairs[0];\n            var name = pairs[1];\n\n            if (prefix + name !== self.prefix + self.name) {\n                console.warn('error ');\n                return;\n            }\n\n            for (var i = 0, len = self.listenFunc.length; i < len; i++) {\n                self.listenFunc[i](msg);\n            }\n        };\n\n        //高级浏览器\n        if (supportPostMessage) {\n            if ('addEventListener' in document) {\n                window.addEventListener('message', generalCallback, false);\n            } else if ('attachEvent' in document) {\n                window.attachEvent('onmessage', generalCallback);\n            }\n            return;\n        }\n\n        // 兼容IE 6/7\n        intervalId && clearInterval(intervalId);\n        intervalId = null;\n        intervalId = setInterval(function() {\n            var hash = document.location.hash,\n                re = /^#?\\d+&/;\n            if (hash !== lastHash && re.test(hash)) {\n                lastHash = hash;\n                generalCallback(hash.replace(re, ''));\n            }\n        }, self.opts.delay);\n    };\n\n    /**\n     * 监听消息\n     * @param  {Function} callback\n     * @return {[type]}\n     */\n    Messenger.prototype.listen = function(callback) {\n        var i = 0;\n        var len = this.listenFunc.length;\n        var cbIsExist = false;\n        for (; i < len; i++) {\n            if (this.listenFunc[i] == callback) {\n                cbIsExist = true;\n                break;\n            }\n        }\n        if (!cbIsExist) {\n            this.listenFunc.push(callback);\n        }\n    };\n\n    /**\n     * 注销监听\n     * @return {[type]} [description]\n     */\n    Messenger.prototype.clear = function() {\n        this.listenFunc.length = 0;\n    };\n\n    /**\n     * 广播消息,给所有的消息对象发送消息\n     * @param  {[type]} msg [description]\n     * @return {[type]}     [description]\n     */\n    //低版本浏览器要求提供url 这里不行\n    Messenger.prototype.send = function(msg) {\n        var targets = this.targets,\n            target;\n        for (target in targets) {\n            if (targets.hasOwnProperty(target)) {\n                targets[target].send(msg);\n            }\n        }\n    };\n    return Messenger;\n}());\n\n```\n\n平台发送html代码方\n\n```\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"utf-8\" />\n    <title>Html version | Angulr</title>\n    <meta name=\"description\" content=\"app, web app, responsive, responsive layout, admin, admin panel, admin dashboard, flat, flat ui, ui kit, AngularJS, ui route, charts, widgets, components\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\"/>\n    <link href=\"css/top.css\" rel=\"stylesheet\"/>\n    <script src=\"js/jquery.js\"></script>\n    <script src=\"js/bootstrap.min.js\"></script>\n</head>\n<body>\n<div id=\"header\">\n<nav class=\"navbar navbar-inverse navbar-static-top container-fluid fixed-top\" role=\"navigation\">\n    <div class=\"navbar-header\">\n        <a><img src=\"C:/Users/Administrator/Desktop/navigator1/platform/images/logo1.png\"/></a>\n    </div>\n    <div class=\"collapse navbar-collapse\" id=\"navbar\">\n        <div  class=\"nav navbar-nav nav_nav hidden-sm top-title\" id=\"nav-nav\">\n            第三方应用名称\n        </div>\n        <ul class=\"nav navbar-nav navbar-right main-nav\">\n            <li class=\"btn-group\">\n                <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <span class=\"glyphicon glyphicon-bell\" style=\"color: #fff;\"></span>\n                </a> \n                <ul class=\"dropdown-menu\" style=\"margin-top: 9px;\">\n\n                    <li>\n                        <a>&nbsp;应用1</a>\n                    </li>\n                    <li class=\"divider\"></li>\n                    <li>\n                        <a>&nbsp;应用2</a>\n                    </li>\n\t\t\t\t\t  <li>\n                        <a>&nbsp;应用2</a>\n                    </li>\n\t\t\t\t\t  <li>\n                        <a>&nbsp;应用2</a>\n                    </li>\n                </ul> \n            </li>\n\n            <!-- Single button -->\n            <li class=\"btn-group\">\n                <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <span style=\"color: #fff;\">仲玮</span>\n\t\t\t\t\t<span class=\"caret\" style=\"border-top-color: #7793a7;\"></span>\n                </a>\n\n                <!-- dropdown -->\n                <ul class=\"dropdown-menu\" style=\"margin-top: 9px;\">\n\n                    <li>\n                        <a>&nbsp;个人中心</a>\n                    </li>\n                    <li class=\"divider\"></li>\n                    <li>\n                        <a>&nbsp;注销</a>\n                    </li>\n                </ul>\n                <!-- / dropdown -->\n            </li>\n        </ul>\n    </div>\n\n</nav>\n</div>\n\n<script src=\"js/message.js\"></script>\n<script>\n window.onload = function(){\n\t var messenger = new Messenger('iframe1', 'header'); \n     \n     messenger.addTarget(window.parent, 'parent'); \n\t\tvar msg = document.getElementById(\"header\").innerHTML;\n\t\tmessenger.targets[\"parent\"].send(msg);\n\t }\n\t\n</script>\n</body>\n</html>\n\n```\n\n\n第三方接收html代码端\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n     <link href=\"../platform/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n     <link href=\"../platform/css/top.css\" rel=\"stylesheet\"/>\n     <script src=\"../platform/js/jquery.js\"></script>\n     <script src=\"../platform/js/bootstrap.min.js\"></script>\n</head>\n<body>\n\n<iframe id=\"iframe\" src=\"../platform/header.html\" frameborder=\"0\" style=\"display:none\"></iframe>\n\n<div id=\"header\">\n</div> \n\n这个header div下面就是第三方应用自己的页面内容\n\n\n<script src=\"../platform/js/message.js\"></script>\n\t<script type=\"text/javascript\">\n\tvar messenger = new Messenger('parent', 'header'), \n            input = document.getElementById('message');\n            messenger.listen(function(msg) { \n                document.getElementById('header').innerHTML=msg;\n            }); \n    </script>\n</body>\n</html>\n\n```","source":"_posts/heder.md","raw":"###### ---\ntitle: iframe跨域嵌套头部 \ndate: 2017-05-05 13:51:49\ntags: js   跨域\n---\n\n# 需求\n\n  ```\n 不同域名，使用iframe，想互相获取html\n \n 请查找 navigator.rar文件\n \n  ```\n  \n# 实现思路\n```\n使用js listener 消息发送html代码。\n\n\n\n\n头部公共菜单使用方法：\n\n（原理是将平台的头部菜单代码作为消息跨域发送到第三方应用）\n\n前提：\n\t平台的头部菜单，使用的css，js ，png，jpg静态资源文件支持外链访问\n\t例如：在第三方应用中 ,如下语句能访问到对应资源  \n\t\t<script src =\"www.pingtai.com/js\">\n\t\t<link src =\"www.pingtai.com/css\">\n\t\t<img src = \"www.pingtai.com/***.\">\n\t\t\n\t平台，第三方通过message.js插件来传递头部菜单代码\n\t\t\n\n安装步骤：\n\n\t切忌：平台用的logo等静态资源文件一定是外链能够访问的！否则代码同步到第三方应用，他的logo显示不出来\n\n\t上面说到是将平台头部菜单作为消息跨域发送，那么就有一个发送者（平台），一个接收者（第三方应用）\n\t\n\t\n\t1：作为平台的开发者：发送头部菜单代码：\n\n\t\t<script>\n\t\t\t window.onload = function(){\n\t\t\t\t var messenger = new Messenger('iframe1', 'header'); // header是消息的key\n\t\t\t\t \n\t\t\t\t messenger.addTarget(window.parent, 'parent'); \n\t\t\t\t\tvar msg = document.getElementById(\"header\").innerHTML;\n\t\t\t\t\tmessenger.targets[\"parent\"].send(msg);\n\t\t\t\t }\n\t\n\t\t</script>\n\t\t\n\t2：作为第三方应用对接者\n\t\n\t\t2-1： 引用平台提供的css，js外链样式以及js \n\t\t2-2:  页面引用iframe src为平台提供的头部菜单页面\t\n\t\t\t <iframe id=\"iframe\" src=\"../platform/header.html\" frameborder=\"0\" style=\"display:none\"></iframe>\n\t\t\t \n\t\t2-3 在页面添加头部菜单的div\n\t\t\t\t<div id=\"header\">\n\t\t\t\t</div> \n\t\t2-4 接受消息，将消息（此消息是平台发送的头部菜单的代码）放到2-3建的header里面\n\t\t\n\n```\n\n# 实现代码如下：\nmessage.js 代码\n```\nwindow.Messenger = (function() {\n\n    // 消息前缀, 建议使用自己的项目名, 避免多项目之间的冲突\n    // !注意 消息前缀应使用字符串类型\n    var prefix = \"koolearn\",\n        supportPostMessage = 'postMessage' in window,\n        lastHash = document.location.hash,\n        intervalId,\n        cacheId = 1,\n        extend = function() {\n            var args = arguments,\n                o = args[0],\n                len = args.length,\n                curr;\n            for (var j = 1; j < len; j++) {\n                curr = args[j];\n                for (var i in curr) {\n                    curr.hasOwnProperty(i) && (o[i] = curr[i]);\n                }\n            }\n            return o;\n        };\n\n    /**\n     * [Target description]\n     * @param {object} target Target 类, 消息对象\n     * @param {string} name   名字,iframe的id\n     * @param {string} prefix 前缀\n     */\n    function Target(target, name, prefix) {\n        var errMsg = '';\n        if (arguments.length < 2) {\n            errMsg = 'target error - target and name are both required';\n        } else if (typeof target != 'object') {\n            errMsg = 'target error - target itself must be window object';\n        } else if (typeof name != 'string') {\n            errMsg = 'target error - target name must be string type';\n        }\n        if (errMsg) {\n            throw new Error(errMsg);\n        }\n\n        this.target = target;\n        this.name = name;\n        this.prefix = prefix;\n    }\n\n    /**\n     * 消息拼接\n     * @param  {[string]} msg\n     * @return {[string]}\n     */\n    Target.prototype.handleMsg = function(msg) {\n        //prefix|name__Messenger__msg\n        return this.prefix + '|' + this.name + '__Messenger__' + msg;\n    };\n\n    /**\n     * 往 target 发送消息, 出于安全考虑, 发送消息会带上前缀\n     * @type {[type]}\n     */\n    Target.prototype.send = supportPostMessage ?\n        // IE8+ 以及现代浏览器支持\n        function(msg) {\n            this.target.postMessage(this.handleMsg(msg), '*');\n        } :\n        // 兼容IE 6/7\n        function(msg, targetUrl) {\n            targetUrl = (targetUrl || this.target.location || parent.location.href) + '';\n            //修改hash\n            this.target.location = targetUrl.replace(/#.*$/, '') + '#' + (+new Date) + (cacheId++) + '&' + this.handleMsg(msg);\n        };\n\n    /**\n     * 默认配置项，目前就一个\n     * @type {Object}\n     */\n    var defaultOpts = {\n        delay: 200\n    };\n\n    // 信使类\n    // 创建Messenger实例时指定, 必须指定Messenger的名字, (可选)指定项目名, 以避免Mashup类应用中的冲突\n    // !注意: 父子页面中projectName必须保持一致, 否则无法匹配\n    function Messenger(messengerName, projectName) {\n        this.targets = {};\n        this.name = messengerName;\n        this.listenFunc = [];\n        this.prefix = projectName || prefix;\n        this.opts = extend({}, defaultOpts);\n        this.initListen();\n    }\n\n    /**\n     * set opts\n     * @param {object} opts\n     */\n    Messenger.prototype.setOpts = function(opts) {\n        this.opts = extend(this.opts, opts || {});\n    };\n\n    /**\n     * 添加一个消息对象\n     * @param {object} target\n     * @param {string} name\n     */\n    Messenger.prototype.addTarget = function(target, name) {\n        this.targets[name] = new Target(target, name, this.prefix);\n    };\n\n    /**\n     * 移除一个消息对象\n     * @param  {string} name\n     * @return {}\n     */\n    Messenger.prototype.removeTarget = function(name) {\n        delete this.targets[name];\n    };\n\n    /**\n     * 初始化消息监听\n     * @return {null}\n     */\n    Messenger.prototype.initListen = function() {\n        var self = this;\n        /**\n         * [generalCallback description]\n         * @param  {string} msg prefix|name__Messenger__msg\n         * @return {[type]}     [description]\n         */\n        var generalCallback = function(msg) {\n            if (typeof msg == 'object' && msg.data) {\n                msg = msg.data;\n            }\n\n            var msgPairs = msg.split('__Messenger__');\n            var msg = msgPairs[1];\n            var pairs = msgPairs[0].split('|');\n            var prefix = pairs[0];\n            var name = pairs[1];\n\n            if (prefix + name !== self.prefix + self.name) {\n                console.warn('error ');\n                return;\n            }\n\n            for (var i = 0, len = self.listenFunc.length; i < len; i++) {\n                self.listenFunc[i](msg);\n            }\n        };\n\n        //高级浏览器\n        if (supportPostMessage) {\n            if ('addEventListener' in document) {\n                window.addEventListener('message', generalCallback, false);\n            } else if ('attachEvent' in document) {\n                window.attachEvent('onmessage', generalCallback);\n            }\n            return;\n        }\n\n        // 兼容IE 6/7\n        intervalId && clearInterval(intervalId);\n        intervalId = null;\n        intervalId = setInterval(function() {\n            var hash = document.location.hash,\n                re = /^#?\\d+&/;\n            if (hash !== lastHash && re.test(hash)) {\n                lastHash = hash;\n                generalCallback(hash.replace(re, ''));\n            }\n        }, self.opts.delay);\n    };\n\n    /**\n     * 监听消息\n     * @param  {Function} callback\n     * @return {[type]}\n     */\n    Messenger.prototype.listen = function(callback) {\n        var i = 0;\n        var len = this.listenFunc.length;\n        var cbIsExist = false;\n        for (; i < len; i++) {\n            if (this.listenFunc[i] == callback) {\n                cbIsExist = true;\n                break;\n            }\n        }\n        if (!cbIsExist) {\n            this.listenFunc.push(callback);\n        }\n    };\n\n    /**\n     * 注销监听\n     * @return {[type]} [description]\n     */\n    Messenger.prototype.clear = function() {\n        this.listenFunc.length = 0;\n    };\n\n    /**\n     * 广播消息,给所有的消息对象发送消息\n     * @param  {[type]} msg [description]\n     * @return {[type]}     [description]\n     */\n    //低版本浏览器要求提供url 这里不行\n    Messenger.prototype.send = function(msg) {\n        var targets = this.targets,\n            target;\n        for (target in targets) {\n            if (targets.hasOwnProperty(target)) {\n                targets[target].send(msg);\n            }\n        }\n    };\n    return Messenger;\n}());\n\n```\n\n平台发送html代码方\n\n```\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"utf-8\" />\n    <title>Html version | Angulr</title>\n    <meta name=\"description\" content=\"app, web app, responsive, responsive layout, admin, admin panel, admin dashboard, flat, flat ui, ui kit, AngularJS, ui route, charts, widgets, components\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\"/>\n    <link href=\"css/top.css\" rel=\"stylesheet\"/>\n    <script src=\"js/jquery.js\"></script>\n    <script src=\"js/bootstrap.min.js\"></script>\n</head>\n<body>\n<div id=\"header\">\n<nav class=\"navbar navbar-inverse navbar-static-top container-fluid fixed-top\" role=\"navigation\">\n    <div class=\"navbar-header\">\n        <a><img src=\"C:/Users/Administrator/Desktop/navigator1/platform/images/logo1.png\"/></a>\n    </div>\n    <div class=\"collapse navbar-collapse\" id=\"navbar\">\n        <div  class=\"nav navbar-nav nav_nav hidden-sm top-title\" id=\"nav-nav\">\n            第三方应用名称\n        </div>\n        <ul class=\"nav navbar-nav navbar-right main-nav\">\n            <li class=\"btn-group\">\n                <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <span class=\"glyphicon glyphicon-bell\" style=\"color: #fff;\"></span>\n                </a> \n                <ul class=\"dropdown-menu\" style=\"margin-top: 9px;\">\n\n                    <li>\n                        <a>&nbsp;应用1</a>\n                    </li>\n                    <li class=\"divider\"></li>\n                    <li>\n                        <a>&nbsp;应用2</a>\n                    </li>\n\t\t\t\t\t  <li>\n                        <a>&nbsp;应用2</a>\n                    </li>\n\t\t\t\t\t  <li>\n                        <a>&nbsp;应用2</a>\n                    </li>\n                </ul> \n            </li>\n\n            <!-- Single button -->\n            <li class=\"btn-group\">\n                <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <span style=\"color: #fff;\">仲玮</span>\n\t\t\t\t\t<span class=\"caret\" style=\"border-top-color: #7793a7;\"></span>\n                </a>\n\n                <!-- dropdown -->\n                <ul class=\"dropdown-menu\" style=\"margin-top: 9px;\">\n\n                    <li>\n                        <a>&nbsp;个人中心</a>\n                    </li>\n                    <li class=\"divider\"></li>\n                    <li>\n                        <a>&nbsp;注销</a>\n                    </li>\n                </ul>\n                <!-- / dropdown -->\n            </li>\n        </ul>\n    </div>\n\n</nav>\n</div>\n\n<script src=\"js/message.js\"></script>\n<script>\n window.onload = function(){\n\t var messenger = new Messenger('iframe1', 'header'); \n     \n     messenger.addTarget(window.parent, 'parent'); \n\t\tvar msg = document.getElementById(\"header\").innerHTML;\n\t\tmessenger.targets[\"parent\"].send(msg);\n\t }\n\t\n</script>\n</body>\n</html>\n\n```\n\n\n第三方接收html代码端\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n     <link href=\"../platform/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n     <link href=\"../platform/css/top.css\" rel=\"stylesheet\"/>\n     <script src=\"../platform/js/jquery.js\"></script>\n     <script src=\"../platform/js/bootstrap.min.js\"></script>\n</head>\n<body>\n\n<iframe id=\"iframe\" src=\"../platform/header.html\" frameborder=\"0\" style=\"display:none\"></iframe>\n\n<div id=\"header\">\n</div> \n\n这个header div下面就是第三方应用自己的页面内容\n\n\n<script src=\"../platform/js/message.js\"></script>\n\t<script type=\"text/javascript\">\n\tvar messenger = new Messenger('parent', 'header'), \n            input = document.getElementById('message');\n            messenger.listen(function(msg) { \n                document.getElementById('header').innerHTML=msg;\n            }); \n    </script>\n</body>\n</html>\n\n```","slug":"heder","published":1,"updated":"2017-07-19T10:40:28.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eq5000fawpfqo0rwit0","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">不同域名，使用iframe，想互相获取html</div><div class=\"line\"></div><div class=\"line\">请查找 navigator.rar文件</div></pre></td></tr></table></figure>\n<h1 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用js listener 消息发送html代码。</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">头部公共菜单使用方法：</div><div class=\"line\"></div><div class=\"line\">（原理是将平台的头部菜单代码作为消息跨域发送到第三方应用）</div><div class=\"line\"></div><div class=\"line\">前提：</div><div class=\"line\">\t平台的头部菜单，使用的css，js ，png，jpg静态资源文件支持外链访问</div><div class=\"line\">\t例如：在第三方应用中 ,如下语句能访问到对应资源  </div><div class=\"line\">\t\t&lt;script src =&quot;www.pingtai.com/js&quot;&gt;</div><div class=\"line\">\t\t&lt;link src =&quot;www.pingtai.com/css&quot;&gt;</div><div class=\"line\">\t\t&lt;img src = &quot;www.pingtai.com/***.&quot;&gt;</div><div class=\"line\">\t\t</div><div class=\"line\">\t平台，第三方通过message.js插件来传递头部菜单代码</div><div class=\"line\">\t\t</div><div class=\"line\"></div><div class=\"line\">安装步骤：</div><div class=\"line\"></div><div class=\"line\">\t切忌：平台用的logo等静态资源文件一定是外链能够访问的！否则代码同步到第三方应用，他的logo显示不出来</div><div class=\"line\"></div><div class=\"line\">\t上面说到是将平台头部菜单作为消息跨域发送，那么就有一个发送者（平台），一个接收者（第三方应用）</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">\t1：作为平台的开发者：发送头部菜单代码：</div><div class=\"line\"></div><div class=\"line\">\t\t&lt;script&gt;</div><div class=\"line\">\t\t\t window.onload = function()&#123;</div><div class=\"line\">\t\t\t\t var messenger = new Messenger(&apos;iframe1&apos;, &apos;header&apos;); // header是消息的key</div><div class=\"line\">\t\t\t\t </div><div class=\"line\">\t\t\t\t messenger.addTarget(window.parent, &apos;parent&apos;); </div><div class=\"line\">\t\t\t\t\tvar msg = document.getElementById(&quot;header&quot;).innerHTML;</div><div class=\"line\">\t\t\t\t\tmessenger.targets[&quot;parent&quot;].send(msg);</div><div class=\"line\">\t\t\t\t &#125;</div><div class=\"line\">\t</div><div class=\"line\">\t\t&lt;/script&gt;</div><div class=\"line\">\t\t</div><div class=\"line\">\t2：作为第三方应用对接者</div><div class=\"line\">\t</div><div class=\"line\">\t\t2-1： 引用平台提供的css，js外链样式以及js </div><div class=\"line\">\t\t2-2:  页面引用iframe src为平台提供的头部菜单页面\t</div><div class=\"line\">\t\t\t &lt;iframe id=&quot;iframe&quot; src=&quot;../platform/header.html&quot; frameborder=&quot;0&quot; style=&quot;display:none&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\">\t\t\t </div><div class=\"line\">\t\t2-3 在页面添加头部菜单的div</div><div class=\"line\">\t\t\t\t&lt;div id=&quot;header&quot;&gt;</div><div class=\"line\">\t\t\t\t&lt;/div&gt; </div><div class=\"line\">\t\t2-4 接受消息，将消息（此消息是平台发送的头部菜单的代码）放到2-3建的header里面</div></pre></td></tr></table></figure>\n<h1 id=\"实现代码如下：\"><a href=\"#实现代码如下：\" class=\"headerlink\" title=\"实现代码如下：\"></a>实现代码如下：</h1><p>message.js 代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.Messenger = (function() &#123;</div><div class=\"line\"></div><div class=\"line\">    // 消息前缀, 建议使用自己的项目名, 避免多项目之间的冲突</div><div class=\"line\">    // !注意 消息前缀应使用字符串类型</div><div class=\"line\">    var prefix = &quot;koolearn&quot;,</div><div class=\"line\">        supportPostMessage = &apos;postMessage&apos; in window,</div><div class=\"line\">        lastHash = document.location.hash,</div><div class=\"line\">        intervalId,</div><div class=\"line\">        cacheId = 1,</div><div class=\"line\">        extend = function() &#123;</div><div class=\"line\">            var args = arguments,</div><div class=\"line\">                o = args[0],</div><div class=\"line\">                len = args.length,</div><div class=\"line\">                curr;</div><div class=\"line\">            for (var j = 1; j &lt; len; j++) &#123;</div><div class=\"line\">                curr = args[j];</div><div class=\"line\">                for (var i in curr) &#123;</div><div class=\"line\">                    curr.hasOwnProperty(i) &amp;&amp; (o[i] = curr[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            return o;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * [Target description]</div><div class=\"line\">     * @param &#123;object&#125; target Target 类, 消息对象</div><div class=\"line\">     * @param &#123;string&#125; name   名字,iframe的id</div><div class=\"line\">     * @param &#123;string&#125; prefix 前缀</div><div class=\"line\">     */</div><div class=\"line\">    function Target(target, name, prefix) &#123;</div><div class=\"line\">        var errMsg = &apos;&apos;;</div><div class=\"line\">        if (arguments.length &lt; 2) &#123;</div><div class=\"line\">            errMsg = &apos;target error - target and name are both required&apos;;</div><div class=\"line\">        &#125; else if (typeof target != &apos;object&apos;) &#123;</div><div class=\"line\">            errMsg = &apos;target error - target itself must be window object&apos;;</div><div class=\"line\">        &#125; else if (typeof name != &apos;string&apos;) &#123;</div><div class=\"line\">            errMsg = &apos;target error - target name must be string type&apos;;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (errMsg) &#123;</div><div class=\"line\">            throw new Error(errMsg);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        this.target = target;</div><div class=\"line\">        this.name = name;</div><div class=\"line\">        this.prefix = prefix;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 消息拼接</div><div class=\"line\">     * @param  &#123;[string]&#125; msg</div><div class=\"line\">     * @return &#123;[string]&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Target.prototype.handleMsg = function(msg) &#123;</div><div class=\"line\">        //prefix|name__Messenger__msg</div><div class=\"line\">        return this.prefix + &apos;|&apos; + this.name + &apos;__Messenger__&apos; + msg;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 往 target 发送消息, 出于安全考虑, 发送消息会带上前缀</div><div class=\"line\">     * @type &#123;[type]&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Target.prototype.send = supportPostMessage ?</div><div class=\"line\">        // IE8+ 以及现代浏览器支持</div><div class=\"line\">        function(msg) &#123;</div><div class=\"line\">            this.target.postMessage(this.handleMsg(msg), &apos;*&apos;);</div><div class=\"line\">        &#125; :</div><div class=\"line\">        // 兼容IE 6/7</div><div class=\"line\">        function(msg, targetUrl) &#123;</div><div class=\"line\">            targetUrl = (targetUrl || this.target.location || parent.location.href) + &apos;&apos;;</div><div class=\"line\">            //修改hash</div><div class=\"line\">            this.target.location = targetUrl.replace(/#.*$/, &apos;&apos;) + &apos;#&apos; + (+new Date) + (cacheId++) + &apos;&amp;&apos; + this.handleMsg(msg);</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 默认配置项，目前就一个</div><div class=\"line\">     * @type &#123;Object&#125;</div><div class=\"line\">     */</div><div class=\"line\">    var defaultOpts = &#123;</div><div class=\"line\">        delay: 200</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    // 信使类</div><div class=\"line\">    // 创建Messenger实例时指定, 必须指定Messenger的名字, (可选)指定项目名, 以避免Mashup类应用中的冲突</div><div class=\"line\">    // !注意: 父子页面中projectName必须保持一致, 否则无法匹配</div><div class=\"line\">    function Messenger(messengerName, projectName) &#123;</div><div class=\"line\">        this.targets = &#123;&#125;;</div><div class=\"line\">        this.name = messengerName;</div><div class=\"line\">        this.listenFunc = [];</div><div class=\"line\">        this.prefix = projectName || prefix;</div><div class=\"line\">        this.opts = extend(&#123;&#125;, defaultOpts);</div><div class=\"line\">        this.initListen();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * set opts</div><div class=\"line\">     * @param &#123;object&#125; opts</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.setOpts = function(opts) &#123;</div><div class=\"line\">        this.opts = extend(this.opts, opts || &#123;&#125;);</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 添加一个消息对象</div><div class=\"line\">     * @param &#123;object&#125; target</div><div class=\"line\">     * @param &#123;string&#125; name</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.addTarget = function(target, name) &#123;</div><div class=\"line\">        this.targets[name] = new Target(target, name, this.prefix);</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 移除一个消息对象</div><div class=\"line\">     * @param  &#123;string&#125; name</div><div class=\"line\">     * @return &#123;&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.removeTarget = function(name) &#123;</div><div class=\"line\">        delete this.targets[name];</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 初始化消息监听</div><div class=\"line\">     * @return &#123;null&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.initListen = function() &#123;</div><div class=\"line\">        var self = this;</div><div class=\"line\">        /**</div><div class=\"line\">         * [generalCallback description]</div><div class=\"line\">         * @param  &#123;string&#125; msg prefix|name__Messenger__msg</div><div class=\"line\">         * @return &#123;[type]&#125;     [description]</div><div class=\"line\">         */</div><div class=\"line\">        var generalCallback = function(msg) &#123;</div><div class=\"line\">            if (typeof msg == &apos;object&apos; &amp;&amp; msg.data) &#123;</div><div class=\"line\">                msg = msg.data;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            var msgPairs = msg.split(&apos;__Messenger__&apos;);</div><div class=\"line\">            var msg = msgPairs[1];</div><div class=\"line\">            var pairs = msgPairs[0].split(&apos;|&apos;);</div><div class=\"line\">            var prefix = pairs[0];</div><div class=\"line\">            var name = pairs[1];</div><div class=\"line\"></div><div class=\"line\">            if (prefix + name !== self.prefix + self.name) &#123;</div><div class=\"line\">                console.warn(&apos;error &apos;);</div><div class=\"line\">                return;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            for (var i = 0, len = self.listenFunc.length; i &lt; len; i++) &#123;</div><div class=\"line\">                self.listenFunc[i](msg);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">        //高级浏览器</div><div class=\"line\">        if (supportPostMessage) &#123;</div><div class=\"line\">            if (&apos;addEventListener&apos; in document) &#123;</div><div class=\"line\">                window.addEventListener(&apos;message&apos;, generalCallback, false);</div><div class=\"line\">            &#125; else if (&apos;attachEvent&apos; in document) &#123;</div><div class=\"line\">                window.attachEvent(&apos;onmessage&apos;, generalCallback);</div><div class=\"line\">            &#125;</div><div class=\"line\">            return;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        // 兼容IE 6/7</div><div class=\"line\">        intervalId &amp;&amp; clearInterval(intervalId);</div><div class=\"line\">        intervalId = null;</div><div class=\"line\">        intervalId = setInterval(function() &#123;</div><div class=\"line\">            var hash = document.location.hash,</div><div class=\"line\">                re = /^#?\\d+&amp;/;</div><div class=\"line\">            if (hash !== lastHash &amp;&amp; re.test(hash)) &#123;</div><div class=\"line\">                lastHash = hash;</div><div class=\"line\">                generalCallback(hash.replace(re, &apos;&apos;));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;, self.opts.delay);</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 监听消息</div><div class=\"line\">     * @param  &#123;Function&#125; callback</div><div class=\"line\">     * @return &#123;[type]&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.listen = function(callback) &#123;</div><div class=\"line\">        var i = 0;</div><div class=\"line\">        var len = this.listenFunc.length;</div><div class=\"line\">        var cbIsExist = false;</div><div class=\"line\">        for (; i &lt; len; i++) &#123;</div><div class=\"line\">            if (this.listenFunc[i] == callback) &#123;</div><div class=\"line\">                cbIsExist = true;</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (!cbIsExist) &#123;</div><div class=\"line\">            this.listenFunc.push(callback);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 注销监听</div><div class=\"line\">     * @return &#123;[type]&#125; [description]</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.clear = function() &#123;</div><div class=\"line\">        this.listenFunc.length = 0;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 广播消息,给所有的消息对象发送消息</div><div class=\"line\">     * @param  &#123;[type]&#125; msg [description]</div><div class=\"line\">     * @return &#123;[type]&#125;     [description]</div><div class=\"line\">     */</div><div class=\"line\">    //低版本浏览器要求提供url 这里不行</div><div class=\"line\">    Messenger.prototype.send = function(msg) &#123;</div><div class=\"line\">        var targets = this.targets,</div><div class=\"line\">            target;</div><div class=\"line\">        for (target in targets) &#123;</div><div class=\"line\">            if (targets.hasOwnProperty(target)) &#123;</div><div class=\"line\">                targets[target].send(msg);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    return Messenger;</div><div class=\"line\">&#125;());</div></pre></td></tr></table></figure></p>\n<p>平台发送html代码方</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head lang=&quot;en&quot;&gt;</div><div class=\"line\">    &lt;meta charset=&quot;utf-8&quot; /&gt;</div><div class=\"line\">    &lt;title&gt;Html version | Angulr&lt;/title&gt;</div><div class=\"line\">    &lt;meta name=&quot;description&quot; content=&quot;app, web app, responsive, responsive layout, admin, admin panel, admin dashboard, flat, flat ui, ui kit, AngularJS, ui route, charts, widgets, components&quot; /&gt;</div><div class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot; /&gt;</div><div class=\"line\">    &lt;link href=&quot;css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;/&gt;</div><div class=\"line\">    &lt;link href=&quot;css/top.css&quot; rel=&quot;stylesheet&quot;/&gt;</div><div class=\"line\">    &lt;script src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">    &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;div id=&quot;header&quot;&gt;</div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-static-top container-fluid fixed-top&quot; role=&quot;navigation&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">        &lt;a&gt;&lt;img src=&quot;C:/Users/Administrator/Desktop/navigator1/platform/images/logo1.png&quot;/&gt;&lt;/a&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;navbar&quot;&gt;</div><div class=\"line\">        &lt;div  class=&quot;nav navbar-nav nav_nav hidden-sm top-title&quot; id=&quot;nav-nav&quot;&gt;</div><div class=\"line\">            第三方应用名称</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;ul class=&quot;nav navbar-nav navbar-right main-nav&quot;&gt;</div><div class=\"line\">            &lt;li class=&quot;btn-group&quot;&gt;</div><div class=\"line\">                &lt;a class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;</div><div class=\"line\">                    &lt;span class=&quot;glyphicon glyphicon-bell&quot; style=&quot;color: #fff;&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;/a&gt; </div><div class=\"line\">                &lt;ul class=&quot;dropdown-menu&quot; style=&quot;margin-top: 9px;&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">                    &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;应用1&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">                    &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;</div><div class=\"line\">                    &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;应用2&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">\t\t\t\t\t  &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;应用2&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">\t\t\t\t\t  &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;应用2&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">                &lt;/ul&gt; </div><div class=\"line\">            &lt;/li&gt;</div><div class=\"line\"></div><div class=\"line\">            &lt;!-- Single button --&gt;</div><div class=\"line\">            &lt;li class=&quot;btn-group&quot;&gt;</div><div class=\"line\">                &lt;a class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;</div><div class=\"line\">                    &lt;span style=&quot;color: #fff;&quot;&gt;仲玮&lt;/span&gt;</div><div class=\"line\">\t\t\t\t\t&lt;span class=&quot;caret&quot; style=&quot;border-top-color: #7793a7;&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;/a&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;!-- dropdown --&gt;</div><div class=\"line\">                &lt;ul class=&quot;dropdown-menu&quot; style=&quot;margin-top: 9px;&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">                    &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;个人中心&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">                    &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;</div><div class=\"line\">                    &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;注销&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">                &lt;/ul&gt;</div><div class=\"line\">                &lt;!-- / dropdown --&gt;</div><div class=\"line\">            &lt;/li&gt;</div><div class=\"line\">        &lt;/ul&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script src=&quot;js/message.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\"> window.onload = function()&#123;</div><div class=\"line\">\t var messenger = new Messenger(&apos;iframe1&apos;, &apos;header&apos;); </div><div class=\"line\">     </div><div class=\"line\">     messenger.addTarget(window.parent, &apos;parent&apos;); </div><div class=\"line\">\t\tvar msg = document.getElementById(&quot;header&quot;).innerHTML;</div><div class=\"line\">\t\tmessenger.targets[&quot;parent&quot;].send(msg);</div><div class=\"line\">\t &#125;</div><div class=\"line\">\t</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>第三方接收html代码端<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=&quot;en&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">    &lt;title&gt;Title&lt;/title&gt;</div><div class=\"line\">     &lt;link href=&quot;../platform/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;/&gt;</div><div class=\"line\">     &lt;link href=&quot;../platform/css/top.css&quot; rel=&quot;stylesheet&quot;/&gt;</div><div class=\"line\">     &lt;script src=&quot;../platform/js/jquery.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">     &lt;script src=&quot;../platform/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;iframe id=&quot;iframe&quot; src=&quot;../platform/header.html&quot; frameborder=&quot;0&quot; style=&quot;display:none&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div id=&quot;header&quot;&gt;</div><div class=\"line\">&lt;/div&gt; </div><div class=\"line\"></div><div class=\"line\">这个header div下面就是第三方应用自己的页面内容</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script src=&quot;../platform/js/message.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">\t&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">\tvar messenger = new Messenger(&apos;parent&apos;, &apos;header&apos;), </div><div class=\"line\">            input = document.getElementById(&apos;message&apos;);</div><div class=\"line\">            messenger.listen(function(msg) &#123; </div><div class=\"line\">                document.getElementById(&apos;header&apos;).innerHTML=msg;</div><div class=\"line\">            &#125;); </div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">不同域名，使用iframe，想互相获取html</div><div class=\"line\"></div><div class=\"line\">请查找 navigator.rar文件</div></pre></td></tr></table></figure>\n<h1 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用js listener 消息发送html代码。</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">头部公共菜单使用方法：</div><div class=\"line\"></div><div class=\"line\">（原理是将平台的头部菜单代码作为消息跨域发送到第三方应用）</div><div class=\"line\"></div><div class=\"line\">前提：</div><div class=\"line\">\t平台的头部菜单，使用的css，js ，png，jpg静态资源文件支持外链访问</div><div class=\"line\">\t例如：在第三方应用中 ,如下语句能访问到对应资源  </div><div class=\"line\">\t\t&lt;script src =&quot;www.pingtai.com/js&quot;&gt;</div><div class=\"line\">\t\t&lt;link src =&quot;www.pingtai.com/css&quot;&gt;</div><div class=\"line\">\t\t&lt;img src = &quot;www.pingtai.com/***.&quot;&gt;</div><div class=\"line\">\t\t</div><div class=\"line\">\t平台，第三方通过message.js插件来传递头部菜单代码</div><div class=\"line\">\t\t</div><div class=\"line\"></div><div class=\"line\">安装步骤：</div><div class=\"line\"></div><div class=\"line\">\t切忌：平台用的logo等静态资源文件一定是外链能够访问的！否则代码同步到第三方应用，他的logo显示不出来</div><div class=\"line\"></div><div class=\"line\">\t上面说到是将平台头部菜单作为消息跨域发送，那么就有一个发送者（平台），一个接收者（第三方应用）</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">\t1：作为平台的开发者：发送头部菜单代码：</div><div class=\"line\"></div><div class=\"line\">\t\t&lt;script&gt;</div><div class=\"line\">\t\t\t window.onload = function()&#123;</div><div class=\"line\">\t\t\t\t var messenger = new Messenger(&apos;iframe1&apos;, &apos;header&apos;); // header是消息的key</div><div class=\"line\">\t\t\t\t </div><div class=\"line\">\t\t\t\t messenger.addTarget(window.parent, &apos;parent&apos;); </div><div class=\"line\">\t\t\t\t\tvar msg = document.getElementById(&quot;header&quot;).innerHTML;</div><div class=\"line\">\t\t\t\t\tmessenger.targets[&quot;parent&quot;].send(msg);</div><div class=\"line\">\t\t\t\t &#125;</div><div class=\"line\">\t</div><div class=\"line\">\t\t&lt;/script&gt;</div><div class=\"line\">\t\t</div><div class=\"line\">\t2：作为第三方应用对接者</div><div class=\"line\">\t</div><div class=\"line\">\t\t2-1： 引用平台提供的css，js外链样式以及js </div><div class=\"line\">\t\t2-2:  页面引用iframe src为平台提供的头部菜单页面\t</div><div class=\"line\">\t\t\t &lt;iframe id=&quot;iframe&quot; src=&quot;../platform/header.html&quot; frameborder=&quot;0&quot; style=&quot;display:none&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\">\t\t\t </div><div class=\"line\">\t\t2-3 在页面添加头部菜单的div</div><div class=\"line\">\t\t\t\t&lt;div id=&quot;header&quot;&gt;</div><div class=\"line\">\t\t\t\t&lt;/div&gt; </div><div class=\"line\">\t\t2-4 接受消息，将消息（此消息是平台发送的头部菜单的代码）放到2-3建的header里面</div></pre></td></tr></table></figure>\n<h1 id=\"实现代码如下：\"><a href=\"#实现代码如下：\" class=\"headerlink\" title=\"实现代码如下：\"></a>实现代码如下：</h1><p>message.js 代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.Messenger = (function() &#123;</div><div class=\"line\"></div><div class=\"line\">    // 消息前缀, 建议使用自己的项目名, 避免多项目之间的冲突</div><div class=\"line\">    // !注意 消息前缀应使用字符串类型</div><div class=\"line\">    var prefix = &quot;koolearn&quot;,</div><div class=\"line\">        supportPostMessage = &apos;postMessage&apos; in window,</div><div class=\"line\">        lastHash = document.location.hash,</div><div class=\"line\">        intervalId,</div><div class=\"line\">        cacheId = 1,</div><div class=\"line\">        extend = function() &#123;</div><div class=\"line\">            var args = arguments,</div><div class=\"line\">                o = args[0],</div><div class=\"line\">                len = args.length,</div><div class=\"line\">                curr;</div><div class=\"line\">            for (var j = 1; j &lt; len; j++) &#123;</div><div class=\"line\">                curr = args[j];</div><div class=\"line\">                for (var i in curr) &#123;</div><div class=\"line\">                    curr.hasOwnProperty(i) &amp;&amp; (o[i] = curr[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            return o;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * [Target description]</div><div class=\"line\">     * @param &#123;object&#125; target Target 类, 消息对象</div><div class=\"line\">     * @param &#123;string&#125; name   名字,iframe的id</div><div class=\"line\">     * @param &#123;string&#125; prefix 前缀</div><div class=\"line\">     */</div><div class=\"line\">    function Target(target, name, prefix) &#123;</div><div class=\"line\">        var errMsg = &apos;&apos;;</div><div class=\"line\">        if (arguments.length &lt; 2) &#123;</div><div class=\"line\">            errMsg = &apos;target error - target and name are both required&apos;;</div><div class=\"line\">        &#125; else if (typeof target != &apos;object&apos;) &#123;</div><div class=\"line\">            errMsg = &apos;target error - target itself must be window object&apos;;</div><div class=\"line\">        &#125; else if (typeof name != &apos;string&apos;) &#123;</div><div class=\"line\">            errMsg = &apos;target error - target name must be string type&apos;;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (errMsg) &#123;</div><div class=\"line\">            throw new Error(errMsg);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        this.target = target;</div><div class=\"line\">        this.name = name;</div><div class=\"line\">        this.prefix = prefix;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 消息拼接</div><div class=\"line\">     * @param  &#123;[string]&#125; msg</div><div class=\"line\">     * @return &#123;[string]&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Target.prototype.handleMsg = function(msg) &#123;</div><div class=\"line\">        //prefix|name__Messenger__msg</div><div class=\"line\">        return this.prefix + &apos;|&apos; + this.name + &apos;__Messenger__&apos; + msg;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 往 target 发送消息, 出于安全考虑, 发送消息会带上前缀</div><div class=\"line\">     * @type &#123;[type]&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Target.prototype.send = supportPostMessage ?</div><div class=\"line\">        // IE8+ 以及现代浏览器支持</div><div class=\"line\">        function(msg) &#123;</div><div class=\"line\">            this.target.postMessage(this.handleMsg(msg), &apos;*&apos;);</div><div class=\"line\">        &#125; :</div><div class=\"line\">        // 兼容IE 6/7</div><div class=\"line\">        function(msg, targetUrl) &#123;</div><div class=\"line\">            targetUrl = (targetUrl || this.target.location || parent.location.href) + &apos;&apos;;</div><div class=\"line\">            //修改hash</div><div class=\"line\">            this.target.location = targetUrl.replace(/#.*$/, &apos;&apos;) + &apos;#&apos; + (+new Date) + (cacheId++) + &apos;&amp;&apos; + this.handleMsg(msg);</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 默认配置项，目前就一个</div><div class=\"line\">     * @type &#123;Object&#125;</div><div class=\"line\">     */</div><div class=\"line\">    var defaultOpts = &#123;</div><div class=\"line\">        delay: 200</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    // 信使类</div><div class=\"line\">    // 创建Messenger实例时指定, 必须指定Messenger的名字, (可选)指定项目名, 以避免Mashup类应用中的冲突</div><div class=\"line\">    // !注意: 父子页面中projectName必须保持一致, 否则无法匹配</div><div class=\"line\">    function Messenger(messengerName, projectName) &#123;</div><div class=\"line\">        this.targets = &#123;&#125;;</div><div class=\"line\">        this.name = messengerName;</div><div class=\"line\">        this.listenFunc = [];</div><div class=\"line\">        this.prefix = projectName || prefix;</div><div class=\"line\">        this.opts = extend(&#123;&#125;, defaultOpts);</div><div class=\"line\">        this.initListen();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * set opts</div><div class=\"line\">     * @param &#123;object&#125; opts</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.setOpts = function(opts) &#123;</div><div class=\"line\">        this.opts = extend(this.opts, opts || &#123;&#125;);</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 添加一个消息对象</div><div class=\"line\">     * @param &#123;object&#125; target</div><div class=\"line\">     * @param &#123;string&#125; name</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.addTarget = function(target, name) &#123;</div><div class=\"line\">        this.targets[name] = new Target(target, name, this.prefix);</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 移除一个消息对象</div><div class=\"line\">     * @param  &#123;string&#125; name</div><div class=\"line\">     * @return &#123;&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.removeTarget = function(name) &#123;</div><div class=\"line\">        delete this.targets[name];</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 初始化消息监听</div><div class=\"line\">     * @return &#123;null&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.initListen = function() &#123;</div><div class=\"line\">        var self = this;</div><div class=\"line\">        /**</div><div class=\"line\">         * [generalCallback description]</div><div class=\"line\">         * @param  &#123;string&#125; msg prefix|name__Messenger__msg</div><div class=\"line\">         * @return &#123;[type]&#125;     [description]</div><div class=\"line\">         */</div><div class=\"line\">        var generalCallback = function(msg) &#123;</div><div class=\"line\">            if (typeof msg == &apos;object&apos; &amp;&amp; msg.data) &#123;</div><div class=\"line\">                msg = msg.data;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            var msgPairs = msg.split(&apos;__Messenger__&apos;);</div><div class=\"line\">            var msg = msgPairs[1];</div><div class=\"line\">            var pairs = msgPairs[0].split(&apos;|&apos;);</div><div class=\"line\">            var prefix = pairs[0];</div><div class=\"line\">            var name = pairs[1];</div><div class=\"line\"></div><div class=\"line\">            if (prefix + name !== self.prefix + self.name) &#123;</div><div class=\"line\">                console.warn(&apos;error &apos;);</div><div class=\"line\">                return;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            for (var i = 0, len = self.listenFunc.length; i &lt; len; i++) &#123;</div><div class=\"line\">                self.listenFunc[i](msg);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">        //高级浏览器</div><div class=\"line\">        if (supportPostMessage) &#123;</div><div class=\"line\">            if (&apos;addEventListener&apos; in document) &#123;</div><div class=\"line\">                window.addEventListener(&apos;message&apos;, generalCallback, false);</div><div class=\"line\">            &#125; else if (&apos;attachEvent&apos; in document) &#123;</div><div class=\"line\">                window.attachEvent(&apos;onmessage&apos;, generalCallback);</div><div class=\"line\">            &#125;</div><div class=\"line\">            return;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        // 兼容IE 6/7</div><div class=\"line\">        intervalId &amp;&amp; clearInterval(intervalId);</div><div class=\"line\">        intervalId = null;</div><div class=\"line\">        intervalId = setInterval(function() &#123;</div><div class=\"line\">            var hash = document.location.hash,</div><div class=\"line\">                re = /^#?\\d+&amp;/;</div><div class=\"line\">            if (hash !== lastHash &amp;&amp; re.test(hash)) &#123;</div><div class=\"line\">                lastHash = hash;</div><div class=\"line\">                generalCallback(hash.replace(re, &apos;&apos;));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;, self.opts.delay);</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 监听消息</div><div class=\"line\">     * @param  &#123;Function&#125; callback</div><div class=\"line\">     * @return &#123;[type]&#125;</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.listen = function(callback) &#123;</div><div class=\"line\">        var i = 0;</div><div class=\"line\">        var len = this.listenFunc.length;</div><div class=\"line\">        var cbIsExist = false;</div><div class=\"line\">        for (; i &lt; len; i++) &#123;</div><div class=\"line\">            if (this.listenFunc[i] == callback) &#123;</div><div class=\"line\">                cbIsExist = true;</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (!cbIsExist) &#123;</div><div class=\"line\">            this.listenFunc.push(callback);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 注销监听</div><div class=\"line\">     * @return &#123;[type]&#125; [description]</div><div class=\"line\">     */</div><div class=\"line\">    Messenger.prototype.clear = function() &#123;</div><div class=\"line\">        this.listenFunc.length = 0;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 广播消息,给所有的消息对象发送消息</div><div class=\"line\">     * @param  &#123;[type]&#125; msg [description]</div><div class=\"line\">     * @return &#123;[type]&#125;     [description]</div><div class=\"line\">     */</div><div class=\"line\">    //低版本浏览器要求提供url 这里不行</div><div class=\"line\">    Messenger.prototype.send = function(msg) &#123;</div><div class=\"line\">        var targets = this.targets,</div><div class=\"line\">            target;</div><div class=\"line\">        for (target in targets) &#123;</div><div class=\"line\">            if (targets.hasOwnProperty(target)) &#123;</div><div class=\"line\">                targets[target].send(msg);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    return Messenger;</div><div class=\"line\">&#125;());</div></pre></td></tr></table></figure></p>\n<p>平台发送html代码方</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head lang=&quot;en&quot;&gt;</div><div class=\"line\">    &lt;meta charset=&quot;utf-8&quot; /&gt;</div><div class=\"line\">    &lt;title&gt;Html version | Angulr&lt;/title&gt;</div><div class=\"line\">    &lt;meta name=&quot;description&quot; content=&quot;app, web app, responsive, responsive layout, admin, admin panel, admin dashboard, flat, flat ui, ui kit, AngularJS, ui route, charts, widgets, components&quot; /&gt;</div><div class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot; /&gt;</div><div class=\"line\">    &lt;link href=&quot;css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;/&gt;</div><div class=\"line\">    &lt;link href=&quot;css/top.css&quot; rel=&quot;stylesheet&quot;/&gt;</div><div class=\"line\">    &lt;script src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">    &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;div id=&quot;header&quot;&gt;</div><div class=\"line\">&lt;nav class=&quot;navbar navbar-inverse navbar-static-top container-fluid fixed-top&quot; role=&quot;navigation&quot;&gt;</div><div class=\"line\">    &lt;div class=&quot;navbar-header&quot;&gt;</div><div class=\"line\">        &lt;a&gt;&lt;img src=&quot;C:/Users/Administrator/Desktop/navigator1/platform/images/logo1.png&quot;/&gt;&lt;/a&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;navbar&quot;&gt;</div><div class=\"line\">        &lt;div  class=&quot;nav navbar-nav nav_nav hidden-sm top-title&quot; id=&quot;nav-nav&quot;&gt;</div><div class=\"line\">            第三方应用名称</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;ul class=&quot;nav navbar-nav navbar-right main-nav&quot;&gt;</div><div class=\"line\">            &lt;li class=&quot;btn-group&quot;&gt;</div><div class=\"line\">                &lt;a class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;</div><div class=\"line\">                    &lt;span class=&quot;glyphicon glyphicon-bell&quot; style=&quot;color: #fff;&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;/a&gt; </div><div class=\"line\">                &lt;ul class=&quot;dropdown-menu&quot; style=&quot;margin-top: 9px;&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">                    &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;应用1&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">                    &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;</div><div class=\"line\">                    &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;应用2&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">\t\t\t\t\t  &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;应用2&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">\t\t\t\t\t  &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;应用2&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">                &lt;/ul&gt; </div><div class=\"line\">            &lt;/li&gt;</div><div class=\"line\"></div><div class=\"line\">            &lt;!-- Single button --&gt;</div><div class=\"line\">            &lt;li class=&quot;btn-group&quot;&gt;</div><div class=\"line\">                &lt;a class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;</div><div class=\"line\">                    &lt;span style=&quot;color: #fff;&quot;&gt;仲玮&lt;/span&gt;</div><div class=\"line\">\t\t\t\t\t&lt;span class=&quot;caret&quot; style=&quot;border-top-color: #7793a7;&quot;&gt;&lt;/span&gt;</div><div class=\"line\">                &lt;/a&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;!-- dropdown --&gt;</div><div class=\"line\">                &lt;ul class=&quot;dropdown-menu&quot; style=&quot;margin-top: 9px;&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">                    &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;个人中心&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">                    &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;</div><div class=\"line\">                    &lt;li&gt;</div><div class=\"line\">                        &lt;a&gt;&amp;nbsp;注销&lt;/a&gt;</div><div class=\"line\">                    &lt;/li&gt;</div><div class=\"line\">                &lt;/ul&gt;</div><div class=\"line\">                &lt;!-- / dropdown --&gt;</div><div class=\"line\">            &lt;/li&gt;</div><div class=\"line\">        &lt;/ul&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/nav&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script src=&quot;js/message.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\"> window.onload = function()&#123;</div><div class=\"line\">\t var messenger = new Messenger(&apos;iframe1&apos;, &apos;header&apos;); </div><div class=\"line\">     </div><div class=\"line\">     messenger.addTarget(window.parent, &apos;parent&apos;); </div><div class=\"line\">\t\tvar msg = document.getElementById(&quot;header&quot;).innerHTML;</div><div class=\"line\">\t\tmessenger.targets[&quot;parent&quot;].send(msg);</div><div class=\"line\">\t &#125;</div><div class=\"line\">\t</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>第三方接收html代码端<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=&quot;en&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">    &lt;title&gt;Title&lt;/title&gt;</div><div class=\"line\">     &lt;link href=&quot;../platform/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;/&gt;</div><div class=\"line\">     &lt;link href=&quot;../platform/css/top.css&quot; rel=&quot;stylesheet&quot;/&gt;</div><div class=\"line\">     &lt;script src=&quot;../platform/js/jquery.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">     &lt;script src=&quot;../platform/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;iframe id=&quot;iframe&quot; src=&quot;../platform/header.html&quot; frameborder=&quot;0&quot; style=&quot;display:none&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div id=&quot;header&quot;&gt;</div><div class=\"line\">&lt;/div&gt; </div><div class=\"line\"></div><div class=\"line\">这个header div下面就是第三方应用自己的页面内容</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;script src=&quot;../platform/js/message.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">\t&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">\tvar messenger = new Messenger(&apos;parent&apos;, &apos;header&apos;), </div><div class=\"line\">            input = document.getElementById(&apos;message&apos;);</div><div class=\"line\">            messenger.listen(function(msg) &#123; </div><div class=\"line\">                document.getElementById(&apos;header&apos;).innerHTML=msg;</div><div class=\"line\">            &#125;); </div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n"},{"title":"http升级https协议-tomcat-nginx","author":"zjy","date":"2018-08-14T02:20:12.000Z","_content":"# 需求\n## 想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。\n\n\n\n# tomcat7升级https配置步骤\n\n##  1. 用JDK自带的keytool来生成私有密钥和自签发的证书，如下： \n\n\tkeytool -genkey -alias sdtx -keyalg RSA -keystore /home/apache-tomcat-7.0.64/tomcat.keystore\n    //生成过程中会让填写信息，我这里全部填的localhost。主要是firstname。要填域名信息\n    \n## 2.配置tomcat/server.xml\n\t找到server.xml里面将该节点配置改为如下：\n      <Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11Protocol\"\n               maxThreads=\"150\" SSLEnabled=\"true\" scheme=\"https\" secure=\"true\"\n               clientAuth=\"false\" sslProtocol=\"TLS\" keystoreFile=\"/home/apache-tomcat-7.0.64/tomcat.keystore\" keystorePass=\"123456\" cliphers=\"123456\"/>\n   \n    并且注释掉\n\n    <!--  <Listener className=\"org.apache.catalina.core.AprLifecycleListener\" SSLEngine=\"on\" />\n\t-->  \n    \n## 3. 访问：https://localhost:8443/yourwebapp\n  ps：https和http访问是可以共存的。\n  如果没有注释掉8080那个端口的http请求。需要注意的是生成密钥的时候，记得firstname写域名\n  https://localhost:8443/yourwebapp   等价于    http://localhost:8080/yourwebapp\n\n访问效果如图：\n\n![upload successful](pasted-2.png) \n\n\n\n# nginx https代理配置步骤\n\n## 1. 创建证书：\n\t  mkdir /etc/nginx/ssl\n  \topenssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout nginx.key -out nginx.crt\n    //解释：创建一个有效期 10 年，加密强度为 RSA2048 SSL 密钥 nginx.key 和 X509 证书文件 nginx.crt。\n## 2.配置nginx.conf\n    server {\n    listen 8086 ssl;\n    server_name blog.zhangjianyu.top;\n\n    ssl_certificate /etc/nginx/ssl/nginx.crt;\n    ssl_certificate_key /etc/nginx/ssl/nginx.key;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers HIGH:!aNULL:!MD5;\n\n    root /www/nginx/https;\n    index index.html index.jsp;\n        \n    keepalive_timeout 70;\n        \n    server_tokens off;\n    location / {\n            alias /home/ligu/attach/;\n            autoindex on;\n        }\n\n    access_log /var/log/nginx/www.hao.com.access.log;\n    error_log /var/log/nginx/www.hao.com.error.log;\n\t}\n    \n    \n## 3.访问效果图\n\n\n![upload successful](pasted-3.png)","source":"_posts/http升级https协议-tomcat-nginx.md","raw":"title: http升级https协议-tomcat-nginx\nauthor: zjy\ndate: 2018-08-14 10:20:12\ntags:\n---\n# 需求\n## 想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。\n\n\n\n# tomcat7升级https配置步骤\n\n##  1. 用JDK自带的keytool来生成私有密钥和自签发的证书，如下： \n\n\tkeytool -genkey -alias sdtx -keyalg RSA -keystore /home/apache-tomcat-7.0.64/tomcat.keystore\n    //生成过程中会让填写信息，我这里全部填的localhost。主要是firstname。要填域名信息\n    \n## 2.配置tomcat/server.xml\n\t找到server.xml里面将该节点配置改为如下：\n      <Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11Protocol\"\n               maxThreads=\"150\" SSLEnabled=\"true\" scheme=\"https\" secure=\"true\"\n               clientAuth=\"false\" sslProtocol=\"TLS\" keystoreFile=\"/home/apache-tomcat-7.0.64/tomcat.keystore\" keystorePass=\"123456\" cliphers=\"123456\"/>\n   \n    并且注释掉\n\n    <!--  <Listener className=\"org.apache.catalina.core.AprLifecycleListener\" SSLEngine=\"on\" />\n\t-->  \n    \n## 3. 访问：https://localhost:8443/yourwebapp\n  ps：https和http访问是可以共存的。\n  如果没有注释掉8080那个端口的http请求。需要注意的是生成密钥的时候，记得firstname写域名\n  https://localhost:8443/yourwebapp   等价于    http://localhost:8080/yourwebapp\n\n访问效果如图：\n\n![upload successful](pasted-2.png) \n\n\n\n# nginx https代理配置步骤\n\n## 1. 创建证书：\n\t  mkdir /etc/nginx/ssl\n  \topenssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout nginx.key -out nginx.crt\n    //解释：创建一个有效期 10 年，加密强度为 RSA2048 SSL 密钥 nginx.key 和 X509 证书文件 nginx.crt。\n## 2.配置nginx.conf\n    server {\n    listen 8086 ssl;\n    server_name blog.zhangjianyu.top;\n\n    ssl_certificate /etc/nginx/ssl/nginx.crt;\n    ssl_certificate_key /etc/nginx/ssl/nginx.key;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers HIGH:!aNULL:!MD5;\n\n    root /www/nginx/https;\n    index index.html index.jsp;\n        \n    keepalive_timeout 70;\n        \n    server_tokens off;\n    location / {\n            alias /home/ligu/attach/;\n            autoindex on;\n        }\n\n    access_log /var/log/nginx/www.hao.com.access.log;\n    error_log /var/log/nginx/www.hao.com.error.log;\n\t}\n    \n    \n## 3.访问效果图\n\n\n![upload successful](pasted-3.png)","slug":"http升级https协议-tomcat-nginx","published":1,"updated":"2018-08-14T03:00:37.930Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eq8000hawpf67buiy28","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><h2 id=\"想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。\"><a href=\"#想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。\" class=\"headerlink\" title=\"想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。\"></a>想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。</h2><h1 id=\"tomcat7升级https配置步骤\"><a href=\"#tomcat7升级https配置步骤\" class=\"headerlink\" title=\"tomcat7升级https配置步骤\"></a>tomcat7升级https配置步骤</h1><h2 id=\"1-用JDK自带的keytool来生成私有密钥和自签发的证书，如下：\"><a href=\"#1-用JDK自带的keytool来生成私有密钥和自签发的证书，如下：\" class=\"headerlink\" title=\"1. 用JDK自带的keytool来生成私有密钥和自签发的证书，如下：\"></a>1. 用JDK自带的keytool来生成私有密钥和自签发的证书，如下：</h2><pre><code>keytool -genkey -alias sdtx -keyalg RSA -keystore /home/apache-tomcat-7.0.64/tomcat.keystore\n//生成过程中会让填写信息，我这里全部填的localhost。主要是firstname。要填域名信息\n</code></pre><h2 id=\"2-配置tomcat-server-xml\"><a href=\"#2-配置tomcat-server-xml\" class=\"headerlink\" title=\"2.配置tomcat/server.xml\"></a>2.配置tomcat/server.xml</h2><pre><code>找到server.xml里面将该节点配置改为如下：\n  &lt;Connector port=&quot;8443&quot; protocol=&quot;org.apache.coyote.http11.Http11Protocol&quot;\n           maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot;\n           clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; keystoreFile=&quot;/home/apache-tomcat-7.0.64/tomcat.keystore&quot; keystorePass=&quot;123456&quot; cliphers=&quot;123456&quot;/&gt;\n\n并且注释掉\n\n&lt;!--  &lt;Listener className=&quot;org.apache.catalina.core.AprLifecycleListener&quot; SSLEngine=&quot;on&quot; /&gt;\n--&gt;  \n</code></pre><h2 id=\"3-访问：https-localhost-8443-yourwebapp\"><a href=\"#3-访问：https-localhost-8443-yourwebapp\" class=\"headerlink\" title=\"3. 访问：https://localhost:8443/yourwebapp\"></a>3. 访问：<a href=\"https://localhost:8443/yourwebapp\" target=\"_blank\" rel=\"external\">https://localhost:8443/yourwebapp</a></h2><p>  ps：https和http访问是可以共存的。<br>  如果没有注释掉8080那个端口的http请求。需要注意的是生成密钥的时候，记得firstname写域名<br>  <a href=\"https://localhost:8443/yourwebapp\" target=\"_blank\" rel=\"external\">https://localhost:8443/yourwebapp</a>   等价于    <a href=\"http://localhost:8080/yourwebapp\" target=\"_blank\" rel=\"external\">http://localhost:8080/yourwebapp</a></p>\n<p>访问效果如图：</p>\n<p><img src=\"/2018/08/14/http升级https协议-tomcat-nginx/pasted-2.png\" alt=\"upload successful\"> </p>\n<h1 id=\"nginx-https代理配置步骤\"><a href=\"#nginx-https代理配置步骤\" class=\"headerlink\" title=\"nginx https代理配置步骤\"></a>nginx https代理配置步骤</h1><h2 id=\"1-创建证书：\"><a href=\"#1-创建证书：\" class=\"headerlink\" title=\"1. 创建证书：\"></a>1. 创建证书：</h2><pre><code>  mkdir /etc/nginx/ssl\n  openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout nginx.key -out nginx.crt\n//解释：创建一个有效期 10 年，加密强度为 RSA2048 SSL 密钥 nginx.key 和 X509 证书文件 nginx.crt。\n</code></pre><h2 id=\"2-配置nginx-conf\"><a href=\"#2-配置nginx-conf\" class=\"headerlink\" title=\"2.配置nginx.conf\"></a>2.配置nginx.conf</h2><pre><code>server {\nlisten 8086 ssl;\nserver_name blog.zhangjianyu.top;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_ciphers HIGH:!aNULL:!MD5;\n\nroot /www/nginx/https;\nindex index.html index.jsp;\n\nkeepalive_timeout 70;\n\nserver_tokens off;\nlocation / {\n        alias /home/ligu/attach/;\n        autoindex on;\n    }\n\naccess_log /var/log/nginx/www.hao.com.access.log;\nerror_log /var/log/nginx/www.hao.com.error.log;\n}\n</code></pre><h2 id=\"3-访问效果图\"><a href=\"#3-访问效果图\" class=\"headerlink\" title=\"3.访问效果图\"></a>3.访问效果图</h2><p><img src=\"/2018/08/14/http升级https协议-tomcat-nginx/pasted-3.png\" alt=\"upload successful\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><h2 id=\"想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。\"><a href=\"#想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。\" class=\"headerlink\" title=\"想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。\"></a>想做个小程序，发现小程序接口服务器域名只支持https和wss协议。所以要对现有的http进行升级。</h2><h1 id=\"tomcat7升级https配置步骤\"><a href=\"#tomcat7升级https配置步骤\" class=\"headerlink\" title=\"tomcat7升级https配置步骤\"></a>tomcat7升级https配置步骤</h1><h2 id=\"1-用JDK自带的keytool来生成私有密钥和自签发的证书，如下：\"><a href=\"#1-用JDK自带的keytool来生成私有密钥和自签发的证书，如下：\" class=\"headerlink\" title=\"1. 用JDK自带的keytool来生成私有密钥和自签发的证书，如下：\"></a>1. 用JDK自带的keytool来生成私有密钥和自签发的证书，如下：</h2><pre><code>keytool -genkey -alias sdtx -keyalg RSA -keystore /home/apache-tomcat-7.0.64/tomcat.keystore\n//生成过程中会让填写信息，我这里全部填的localhost。主要是firstname。要填域名信息\n</code></pre><h2 id=\"2-配置tomcat-server-xml\"><a href=\"#2-配置tomcat-server-xml\" class=\"headerlink\" title=\"2.配置tomcat/server.xml\"></a>2.配置tomcat/server.xml</h2><pre><code>找到server.xml里面将该节点配置改为如下：\n  &lt;Connector port=&quot;8443&quot; protocol=&quot;org.apache.coyote.http11.Http11Protocol&quot;\n           maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot;\n           clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; keystoreFile=&quot;/home/apache-tomcat-7.0.64/tomcat.keystore&quot; keystorePass=&quot;123456&quot; cliphers=&quot;123456&quot;/&gt;\n\n并且注释掉\n\n&lt;!--  &lt;Listener className=&quot;org.apache.catalina.core.AprLifecycleListener&quot; SSLEngine=&quot;on&quot; /&gt;\n--&gt;  \n</code></pre><h2 id=\"3-访问：https-localhost-8443-yourwebapp\"><a href=\"#3-访问：https-localhost-8443-yourwebapp\" class=\"headerlink\" title=\"3. 访问：https://localhost:8443/yourwebapp\"></a>3. 访问：<a href=\"https://localhost:8443/yourwebapp\">https://localhost:8443/yourwebapp</a></h2><p>  ps：https和http访问是可以共存的。<br>  如果没有注释掉8080那个端口的http请求。需要注意的是生成密钥的时候，记得firstname写域名<br>  <a href=\"https://localhost:8443/yourwebapp\">https://localhost:8443/yourwebapp</a>   等价于    <a href=\"http://localhost:8080/yourwebapp\">http://localhost:8080/yourwebapp</a></p>\n<p>访问效果如图：</p>\n<p><img src=\"/2018/08/14/http升级https协议-tomcat-nginx/pasted-2.png\" alt=\"upload successful\"> </p>\n<h1 id=\"nginx-https代理配置步骤\"><a href=\"#nginx-https代理配置步骤\" class=\"headerlink\" title=\"nginx https代理配置步骤\"></a>nginx https代理配置步骤</h1><h2 id=\"1-创建证书：\"><a href=\"#1-创建证书：\" class=\"headerlink\" title=\"1. 创建证书：\"></a>1. 创建证书：</h2><pre><code>  mkdir /etc/nginx/ssl\n  openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout nginx.key -out nginx.crt\n//解释：创建一个有效期 10 年，加密强度为 RSA2048 SSL 密钥 nginx.key 和 X509 证书文件 nginx.crt。\n</code></pre><h2 id=\"2-配置nginx-conf\"><a href=\"#2-配置nginx-conf\" class=\"headerlink\" title=\"2.配置nginx.conf\"></a>2.配置nginx.conf</h2><pre><code>server {\nlisten 8086 ssl;\nserver_name blog.zhangjianyu.top;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_ciphers HIGH:!aNULL:!MD5;\n\nroot /www/nginx/https;\nindex index.html index.jsp;\n\nkeepalive_timeout 70;\n\nserver_tokens off;\nlocation / {\n        alias /home/ligu/attach/;\n        autoindex on;\n    }\n\naccess_log /var/log/nginx/www.hao.com.access.log;\nerror_log /var/log/nginx/www.hao.com.error.log;\n}\n</code></pre><h2 id=\"3-访问效果图\"><a href=\"#3-访问效果图\" class=\"headerlink\" title=\"3.访问效果图\"></a>3.访问效果图</h2><p><img src=\"/2018/08/14/http升级https协议-tomcat-nginx/pasted-3.png\" alt=\"upload successful\"></p>\n"},{"title":"html转pdf,截图保存","date":"2016-05-03T05:51:49.000Z","_content":" \n#  使用技术\n```\nitext.jar  : 将byte文件输入流转换为图片，pdf等\nhtml2canvas.js ：将html页面区域截图为base64编码的图片资源 \njava+js\n```\n\n\n# 1. 准备资源\n1.  itext.jar\n\n```\n www.baidu.com\n```\n\n2.  html2canvas.js\n```\nwww.baidu.com\n```\n\n# 2.前端代码：\n```\n\n    //进行截图操作，document.querySelector(\"body\") 为要截图的区域\n     function test() {\n            html2canvas(document.querySelector(\"body\"), {\n                onrendered: function (canvas) {\n                    var dataUrl = canvas.toDataURL('image/png');\n                    var formData = new FormData(); //模拟表单对象\n                    formData.append(\"imgData\", convertBase64UrlToBlob(dataUrl)); //写入数据\n                    var xhr = new XMLHttpRequest(); //数据传输方法\n                    xhr.open(\"POST\", \"http://localhost:8080/pdf\"); //配置传输方式及地址\n                    xhr.send(formData);\n                    xhr.onreadystatechange = function () { //回调函数\n                    };\n                }\n            });\n        }\n\n        //格式化图片base64编码转换为byte文件流\n        function convertBase64UrlToBlob(urlData){\n            //去掉url的头，并转换为byte\n            var bytes=window.atob(urlData.split(',')[1]);\n            //处理异常,将ascii码小于0的转换为大于0\n            var ab = new ArrayBuffer(bytes.length);\n            var ia = new Uint8Array(ab);\n            for (var s = 0;s<bytes.length;s++){\n                ia[s] = bytes.charCodeAt(s);\n            }\n            return new Blob( [ab] , {type : 'image/png'});\n        }\n        \n        <body onclick=\"test()\">//调用截图方法即可\n```\n\n# 3.后端代码：   \n\n```\n\n@RequestMapping(value = \"/pdf\",method = RequestMethod.POST)\n    public void test(MultipartHttpServletRequest request, HttpServletResponse response) throws IOException {\n        String filePath = \"D:\\\\blog\\\\exportPdf2.pdf\";\n        String imagePath = \"D:\\\\blog\\\\exportImg2.png\";\n        Document document = new Document();\n        try{\n            Map getMap = request.getFileMap();\n            MultipartFile mfile = (MultipartFile) getMap.get(\"imgData\"); //获取数据\n            InputStream file = mfile.getInputStream();\n            byte[] fileByte = FileCopyUtils.copyToByteArray(file);\n\n            FileImageOutputStream imageOutput = new FileImageOutputStream(new File(imagePath));//打开输入流\n            imageOutput.write(fileByte, 0, fileByte.length);//生成本地图片文件\n            imageOutput.close();\n\n            PdfWriter.getInstance(document, new FileOutputStream(filePath)); //itextpdf文件\n            document.open();\n            document.add(new Paragraph(\"JUST TEST ...\"));\n            Image image = Image.getInstance(imagePath); //itext-pdf-image\n            float heigth = image.getHeight();\n            float width = image.getWidth();\n            int percent = getPercent2(heigth, width);  //按比例缩小图片\n            image.setAlignment(Image.MIDDLE);\n            image.scalePercent(percent+3);\n            document.add(image);\n            document.close();\n\n        }catch (DocumentException de) {\n            System.err.println(de.getMessage());\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n\n        }\n    }\n\n    private static int getPercent2(float h, float w) {\n        int p = 0;\n        float p2 = 0.0f;\n        p2 = 530 / w * 100;\n        p = Math.round(p2);\n        return p;\n    }\n```\n\n\n## 4 包名\n     \n```\nimport com.itextpdf.text.Document;\nimport com.itextpdf.text.DocumentException;\nimport com.itextpdf.text.Image;\nimport com.itextpdf.text.Paragraph;\nimport com.itextpdf.text.pdf.PdfWriter;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.util.FileCopyUtils;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.multipart.MultipartFile;\nimport org.springframework.web.multipart.MultipartHttpServletRequest;\n\nimport javax.imageio.stream.FileImageOutputStream;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Map;\n```\n\n\n# 4 前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。\n     有兴趣的同学可以把后端改为下载文件到本地\n\t \n# 5 项目源码地址\t\n ```\nhttps://github.com/zhangjy520/learn_java/tree/master/boot\t\n```","source":"_posts/java_scroll_pdf.md","raw":"---\ntitle: html转pdf,截图保存\ndate: 2016-05-03 13:51:49\ntags: java\n---\n \n#  使用技术\n```\nitext.jar  : 将byte文件输入流转换为图片，pdf等\nhtml2canvas.js ：将html页面区域截图为base64编码的图片资源 \njava+js\n```\n\n\n# 1. 准备资源\n1.  itext.jar\n\n```\n www.baidu.com\n```\n\n2.  html2canvas.js\n```\nwww.baidu.com\n```\n\n# 2.前端代码：\n```\n\n    //进行截图操作，document.querySelector(\"body\") 为要截图的区域\n     function test() {\n            html2canvas(document.querySelector(\"body\"), {\n                onrendered: function (canvas) {\n                    var dataUrl = canvas.toDataURL('image/png');\n                    var formData = new FormData(); //模拟表单对象\n                    formData.append(\"imgData\", convertBase64UrlToBlob(dataUrl)); //写入数据\n                    var xhr = new XMLHttpRequest(); //数据传输方法\n                    xhr.open(\"POST\", \"http://localhost:8080/pdf\"); //配置传输方式及地址\n                    xhr.send(formData);\n                    xhr.onreadystatechange = function () { //回调函数\n                    };\n                }\n            });\n        }\n\n        //格式化图片base64编码转换为byte文件流\n        function convertBase64UrlToBlob(urlData){\n            //去掉url的头，并转换为byte\n            var bytes=window.atob(urlData.split(',')[1]);\n            //处理异常,将ascii码小于0的转换为大于0\n            var ab = new ArrayBuffer(bytes.length);\n            var ia = new Uint8Array(ab);\n            for (var s = 0;s<bytes.length;s++){\n                ia[s] = bytes.charCodeAt(s);\n            }\n            return new Blob( [ab] , {type : 'image/png'});\n        }\n        \n        <body onclick=\"test()\">//调用截图方法即可\n```\n\n# 3.后端代码：   \n\n```\n\n@RequestMapping(value = \"/pdf\",method = RequestMethod.POST)\n    public void test(MultipartHttpServletRequest request, HttpServletResponse response) throws IOException {\n        String filePath = \"D:\\\\blog\\\\exportPdf2.pdf\";\n        String imagePath = \"D:\\\\blog\\\\exportImg2.png\";\n        Document document = new Document();\n        try{\n            Map getMap = request.getFileMap();\n            MultipartFile mfile = (MultipartFile) getMap.get(\"imgData\"); //获取数据\n            InputStream file = mfile.getInputStream();\n            byte[] fileByte = FileCopyUtils.copyToByteArray(file);\n\n            FileImageOutputStream imageOutput = new FileImageOutputStream(new File(imagePath));//打开输入流\n            imageOutput.write(fileByte, 0, fileByte.length);//生成本地图片文件\n            imageOutput.close();\n\n            PdfWriter.getInstance(document, new FileOutputStream(filePath)); //itextpdf文件\n            document.open();\n            document.add(new Paragraph(\"JUST TEST ...\"));\n            Image image = Image.getInstance(imagePath); //itext-pdf-image\n            float heigth = image.getHeight();\n            float width = image.getWidth();\n            int percent = getPercent2(heigth, width);  //按比例缩小图片\n            image.setAlignment(Image.MIDDLE);\n            image.scalePercent(percent+3);\n            document.add(image);\n            document.close();\n\n        }catch (DocumentException de) {\n            System.err.println(de.getMessage());\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n\n        }\n    }\n\n    private static int getPercent2(float h, float w) {\n        int p = 0;\n        float p2 = 0.0f;\n        p2 = 530 / w * 100;\n        p = Math.round(p2);\n        return p;\n    }\n```\n\n\n## 4 包名\n     \n```\nimport com.itextpdf.text.Document;\nimport com.itextpdf.text.DocumentException;\nimport com.itextpdf.text.Image;\nimport com.itextpdf.text.Paragraph;\nimport com.itextpdf.text.pdf.PdfWriter;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.util.FileCopyUtils;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.multipart.MultipartFile;\nimport org.springframework.web.multipart.MultipartHttpServletRequest;\n\nimport javax.imageio.stream.FileImageOutputStream;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Map;\n```\n\n\n# 4 前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。\n     有兴趣的同学可以把后端改为下载文件到本地\n\t \n# 5 项目源码地址\t\n ```\nhttps://github.com/zhangjy520/learn_java/tree/master/boot\t\n```","slug":"java_scroll_pdf","published":1,"updated":"2017-07-19T10:40:28.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eqb000kawpfbgwfsro0","content":"<h1 id=\"使用技术\"><a href=\"#使用技术\" class=\"headerlink\" title=\"使用技术\"></a>使用技术</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">itext.jar  : 将byte文件输入流转换为图片，pdf等</div><div class=\"line\">html2canvas.js ：将html页面区域截图为base64编码的图片资源 </div><div class=\"line\">java+js</div></pre></td></tr></table></figure>\n<h1 id=\"1-准备资源\"><a href=\"#1-准备资源\" class=\"headerlink\" title=\"1. 准备资源\"></a>1. 准备资源</h1><ol>\n<li>itext.jar</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">www.baidu.com</div></pre></td></tr></table></figure>\n<ol>\n<li>html2canvas.js<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">www.baidu.com</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"2-前端代码：\"><a href=\"#2-前端代码：\" class=\"headerlink\" title=\"2.前端代码：\"></a>2.前端代码：</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">//进行截图操作，document.querySelector(&quot;body&quot;) 为要截图的区域</div><div class=\"line\"> function test() &#123;</div><div class=\"line\">        html2canvas(document.querySelector(&quot;body&quot;), &#123;</div><div class=\"line\">            onrendered: function (canvas) &#123;</div><div class=\"line\">                var dataUrl = canvas.toDataURL(&apos;image/png&apos;);</div><div class=\"line\">                var formData = new FormData(); //模拟表单对象</div><div class=\"line\">                formData.append(&quot;imgData&quot;, convertBase64UrlToBlob(dataUrl)); //写入数据</div><div class=\"line\">                var xhr = new XMLHttpRequest(); //数据传输方法</div><div class=\"line\">                xhr.open(&quot;POST&quot;, &quot;http://localhost:8080/pdf&quot;); //配置传输方式及地址</div><div class=\"line\">                xhr.send(formData);</div><div class=\"line\">                xhr.onreadystatechange = function () &#123; //回调函数</div><div class=\"line\">                &#125;;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //格式化图片base64编码转换为byte文件流</div><div class=\"line\">    function convertBase64UrlToBlob(urlData)&#123;</div><div class=\"line\">        //去掉url的头，并转换为byte</div><div class=\"line\">        var bytes=window.atob(urlData.split(&apos;,&apos;)[1]);</div><div class=\"line\">        //处理异常,将ascii码小于0的转换为大于0</div><div class=\"line\">        var ab = new ArrayBuffer(bytes.length);</div><div class=\"line\">        var ia = new Uint8Array(ab);</div><div class=\"line\">        for (var s = 0;s&lt;bytes.length;s++)&#123;</div><div class=\"line\">            ia[s] = bytes.charCodeAt(s);</div><div class=\"line\">        &#125;</div><div class=\"line\">        return new Blob( [ab] , &#123;type : &apos;image/png&apos;&#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    &lt;body onclick=&quot;test()&quot;&gt;//调用截图方法即可</div></pre></td></tr></table></figure>\n<h1 id=\"3-后端代码：\"><a href=\"#3-后端代码：\" class=\"headerlink\" title=\"3.后端代码：\"></a>3.后端代码：</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@RequestMapping(value = &quot;/pdf&quot;,method = RequestMethod.POST)</div><div class=\"line\">    public void test(MultipartHttpServletRequest request, HttpServletResponse response) throws IOException &#123;</div><div class=\"line\">        String filePath = &quot;D:\\\\blog\\\\exportPdf2.pdf&quot;;</div><div class=\"line\">        String imagePath = &quot;D:\\\\blog\\\\exportImg2.png&quot;;</div><div class=\"line\">        Document document = new Document();</div><div class=\"line\">        try&#123;</div><div class=\"line\">            Map getMap = request.getFileMap();</div><div class=\"line\">            MultipartFile mfile = (MultipartFile) getMap.get(&quot;imgData&quot;); //获取数据</div><div class=\"line\">            InputStream file = mfile.getInputStream();</div><div class=\"line\">            byte[] fileByte = FileCopyUtils.copyToByteArray(file);</div><div class=\"line\"></div><div class=\"line\">            FileImageOutputStream imageOutput = new FileImageOutputStream(new File(imagePath));//打开输入流</div><div class=\"line\">            imageOutput.write(fileByte, 0, fileByte.length);//生成本地图片文件</div><div class=\"line\">            imageOutput.close();</div><div class=\"line\"></div><div class=\"line\">            PdfWriter.getInstance(document, new FileOutputStream(filePath)); //itextpdf文件</div><div class=\"line\">            document.open();</div><div class=\"line\">            document.add(new Paragraph(&quot;JUST TEST ...&quot;));</div><div class=\"line\">            Image image = Image.getInstance(imagePath); //itext-pdf-image</div><div class=\"line\">            float heigth = image.getHeight();</div><div class=\"line\">            float width = image.getWidth();</div><div class=\"line\">            int percent = getPercent2(heigth, width);  //按比例缩小图片</div><div class=\"line\">            image.setAlignment(Image.MIDDLE);</div><div class=\"line\">            image.scalePercent(percent+3);</div><div class=\"line\">            document.add(image);</div><div class=\"line\">            document.close();</div><div class=\"line\"></div><div class=\"line\">        &#125;catch (DocumentException de) &#123;</div><div class=\"line\">            System.err.println(de.getMessage());</div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    private static int getPercent2(float h, float w) &#123;</div><div class=\"line\">        int p = 0;</div><div class=\"line\">        float p2 = 0.0f;</div><div class=\"line\">        p2 = 530 / w * 100;</div><div class=\"line\">        p = Math.round(p2);</div><div class=\"line\">        return p;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4-包名\"><a href=\"#4-包名\" class=\"headerlink\" title=\"4 包名\"></a>4 包名</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">import com.itextpdf.text.Document;</div><div class=\"line\">import com.itextpdf.text.DocumentException;</div><div class=\"line\">import com.itextpdf.text.Image;</div><div class=\"line\">import com.itextpdf.text.Paragraph;</div><div class=\"line\">import com.itextpdf.text.pdf.PdfWriter;</div><div class=\"line\">import org.springframework.boot.SpringApplication;</div><div class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class=\"line\">import org.springframework.stereotype.Controller;</div><div class=\"line\">import org.springframework.util.FileCopyUtils;</div><div class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</div><div class=\"line\">import org.springframework.web.bind.annotation.RequestMethod;</div><div class=\"line\">import org.springframework.web.multipart.MultipartFile;</div><div class=\"line\">import org.springframework.web.multipart.MultipartHttpServletRequest;</div><div class=\"line\"></div><div class=\"line\">import javax.imageio.stream.FileImageOutputStream;</div><div class=\"line\">import javax.servlet.http.HttpServletResponse;</div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.io.FileOutputStream;</div><div class=\"line\">import java.io.IOException;</div><div class=\"line\">import java.io.InputStream;</div><div class=\"line\">import java.util.Map;</div></pre></td></tr></table></figure>\n<h1 id=\"4-前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。\"><a href=\"#4-前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。\" class=\"headerlink\" title=\"4 前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。\"></a>4 前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。</h1><pre><code>有兴趣的同学可以把后端改为下载文件到本地\n</code></pre><h1 id=\"5-项目源码地址\"><a href=\"#5-项目源码地址\" class=\"headerlink\" title=\"5 项目源码地址\"></a>5 项目源码地址</h1> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">https://github.com/zhangjy520/learn_java/tree/master/boot</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"使用技术\"><a href=\"#使用技术\" class=\"headerlink\" title=\"使用技术\"></a>使用技术</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">itext.jar  : 将byte文件输入流转换为图片，pdf等</div><div class=\"line\">html2canvas.js ：将html页面区域截图为base64编码的图片资源 </div><div class=\"line\">java+js</div></pre></td></tr></table></figure>\n<h1 id=\"1-准备资源\"><a href=\"#1-准备资源\" class=\"headerlink\" title=\"1. 准备资源\"></a>1. 准备资源</h1><ol>\n<li>itext.jar</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">www.baidu.com</div></pre></td></tr></table></figure>\n<ol>\n<li>html2canvas.js<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">www.baidu.com</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"2-前端代码：\"><a href=\"#2-前端代码：\" class=\"headerlink\" title=\"2.前端代码：\"></a>2.前端代码：</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">//进行截图操作，document.querySelector(&quot;body&quot;) 为要截图的区域</div><div class=\"line\"> function test() &#123;</div><div class=\"line\">        html2canvas(document.querySelector(&quot;body&quot;), &#123;</div><div class=\"line\">            onrendered: function (canvas) &#123;</div><div class=\"line\">                var dataUrl = canvas.toDataURL(&apos;image/png&apos;);</div><div class=\"line\">                var formData = new FormData(); //模拟表单对象</div><div class=\"line\">                formData.append(&quot;imgData&quot;, convertBase64UrlToBlob(dataUrl)); //写入数据</div><div class=\"line\">                var xhr = new XMLHttpRequest(); //数据传输方法</div><div class=\"line\">                xhr.open(&quot;POST&quot;, &quot;http://localhost:8080/pdf&quot;); //配置传输方式及地址</div><div class=\"line\">                xhr.send(formData);</div><div class=\"line\">                xhr.onreadystatechange = function () &#123; //回调函数</div><div class=\"line\">                &#125;;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //格式化图片base64编码转换为byte文件流</div><div class=\"line\">    function convertBase64UrlToBlob(urlData)&#123;</div><div class=\"line\">        //去掉url的头，并转换为byte</div><div class=\"line\">        var bytes=window.atob(urlData.split(&apos;,&apos;)[1]);</div><div class=\"line\">        //处理异常,将ascii码小于0的转换为大于0</div><div class=\"line\">        var ab = new ArrayBuffer(bytes.length);</div><div class=\"line\">        var ia = new Uint8Array(ab);</div><div class=\"line\">        for (var s = 0;s&lt;bytes.length;s++)&#123;</div><div class=\"line\">            ia[s] = bytes.charCodeAt(s);</div><div class=\"line\">        &#125;</div><div class=\"line\">        return new Blob( [ab] , &#123;type : &apos;image/png&apos;&#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    &lt;body onclick=&quot;test()&quot;&gt;//调用截图方法即可</div></pre></td></tr></table></figure>\n<h1 id=\"3-后端代码：\"><a href=\"#3-后端代码：\" class=\"headerlink\" title=\"3.后端代码：\"></a>3.后端代码：</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@RequestMapping(value = &quot;/pdf&quot;,method = RequestMethod.POST)</div><div class=\"line\">    public void test(MultipartHttpServletRequest request, HttpServletResponse response) throws IOException &#123;</div><div class=\"line\">        String filePath = &quot;D:\\\\blog\\\\exportPdf2.pdf&quot;;</div><div class=\"line\">        String imagePath = &quot;D:\\\\blog\\\\exportImg2.png&quot;;</div><div class=\"line\">        Document document = new Document();</div><div class=\"line\">        try&#123;</div><div class=\"line\">            Map getMap = request.getFileMap();</div><div class=\"line\">            MultipartFile mfile = (MultipartFile) getMap.get(&quot;imgData&quot;); //获取数据</div><div class=\"line\">            InputStream file = mfile.getInputStream();</div><div class=\"line\">            byte[] fileByte = FileCopyUtils.copyToByteArray(file);</div><div class=\"line\"></div><div class=\"line\">            FileImageOutputStream imageOutput = new FileImageOutputStream(new File(imagePath));//打开输入流</div><div class=\"line\">            imageOutput.write(fileByte, 0, fileByte.length);//生成本地图片文件</div><div class=\"line\">            imageOutput.close();</div><div class=\"line\"></div><div class=\"line\">            PdfWriter.getInstance(document, new FileOutputStream(filePath)); //itextpdf文件</div><div class=\"line\">            document.open();</div><div class=\"line\">            document.add(new Paragraph(&quot;JUST TEST ...&quot;));</div><div class=\"line\">            Image image = Image.getInstance(imagePath); //itext-pdf-image</div><div class=\"line\">            float heigth = image.getHeight();</div><div class=\"line\">            float width = image.getWidth();</div><div class=\"line\">            int percent = getPercent2(heigth, width);  //按比例缩小图片</div><div class=\"line\">            image.setAlignment(Image.MIDDLE);</div><div class=\"line\">            image.scalePercent(percent+3);</div><div class=\"line\">            document.add(image);</div><div class=\"line\">            document.close();</div><div class=\"line\"></div><div class=\"line\">        &#125;catch (DocumentException de) &#123;</div><div class=\"line\">            System.err.println(de.getMessage());</div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    private static int getPercent2(float h, float w) &#123;</div><div class=\"line\">        int p = 0;</div><div class=\"line\">        float p2 = 0.0f;</div><div class=\"line\">        p2 = 530 / w * 100;</div><div class=\"line\">        p = Math.round(p2);</div><div class=\"line\">        return p;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4-包名\"><a href=\"#4-包名\" class=\"headerlink\" title=\"4 包名\"></a>4 包名</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">import com.itextpdf.text.Document;</div><div class=\"line\">import com.itextpdf.text.DocumentException;</div><div class=\"line\">import com.itextpdf.text.Image;</div><div class=\"line\">import com.itextpdf.text.Paragraph;</div><div class=\"line\">import com.itextpdf.text.pdf.PdfWriter;</div><div class=\"line\">import org.springframework.boot.SpringApplication;</div><div class=\"line\">import org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class=\"line\">import org.springframework.stereotype.Controller;</div><div class=\"line\">import org.springframework.util.FileCopyUtils;</div><div class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</div><div class=\"line\">import org.springframework.web.bind.annotation.RequestMethod;</div><div class=\"line\">import org.springframework.web.multipart.MultipartFile;</div><div class=\"line\">import org.springframework.web.multipart.MultipartHttpServletRequest;</div><div class=\"line\"></div><div class=\"line\">import javax.imageio.stream.FileImageOutputStream;</div><div class=\"line\">import javax.servlet.http.HttpServletResponse;</div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.io.FileOutputStream;</div><div class=\"line\">import java.io.IOException;</div><div class=\"line\">import java.io.InputStream;</div><div class=\"line\">import java.util.Map;</div></pre></td></tr></table></figure>\n<h1 id=\"4-前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。\"><a href=\"#4-前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。\" class=\"headerlink\" title=\"4 前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。\"></a>4 前端截图，访问后端接口，保存截图文件到本地为pdf或者其他格式的文件。</h1><pre><code>有兴趣的同学可以把后端改为下载文件到本地\n</code></pre><h1 id=\"5-项目源码地址\"><a href=\"#5-项目源码地址\" class=\"headerlink\" title=\"5 项目源码地址\"></a>5 项目源码地址</h1> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">https://github.com/zhangjy520/learn_java/tree/master/boot</div></pre></td></tr></table></figure>"},{"title":"java导入文件视频文件并使用nginx做静态资源代理","author":"zjy","date":"2018-05-30T08:09:07.000Z","_content":"## 1 前端\n\n\t\t<div class=\"unit\">\n                <label>上传文件：</label>\n                <input type=\"hidden\" name=\"fileUrl\" id=\"sourceUrl\" value=\"\">\n                <input type=\"hidden\" name=\"fileName\" id=\"sourceName\" value=\"\">\n                <input type=\"hidden\" name=\"ctx\" value=\"${ctx}\">\n                <div style=\"display: inline-block;vertical-align: top\" id=\"sourceUpload\" data-flag='schoolCulture' data-flagtype='schoolculturevideo' class=\"webuploader-container \">\n                    <div class=\"webuploader-pick\">上传资源</div>\n                    <div style=\"position: absolute; top: 0px; left: 0px; width: 126px; height: 44px; overflow: hidden; bottom: auto; right: auto;\">\n                        <input type=\"file\" name=\"file\" class=\"webuploader-element-invisible\">\n                        <label style=\"opacity: 0; width: 100%; height: 100%; display: block; cursor: pointer; background: rgb(255, 255, 255);\"></label>\n                    </div>\n                </div>\n           </div>\n           \n           \n \t<script>\n        $('#sourceUpload').diyUpload({\n            url: '${ctx}/file/upload',\n            success: function (data) {\n                $('#sourceUrl').val(data.data.fileRequestPath);\n                $('#sourceName').val(data.data.fileName);\n                $(\"input[name='suffix']\").val(data.data.suffix);\n                $(\"input[name='url']\").val(\"已经上传，不需要填写路径\");\n                $(\"input[name='url']\").attr(\"disabled\",true);\n            },\n            error: function (err) {\n                console.info(err);\n            },\n            buttonText: '上传资源',\n            chunked: false,\n            // 分片大小\n            chunkSize: 50 * 1024 * 1024,\n            //最大上传的文件数量, 总文件大小,单个文件大小(单位字节);\n            fileNumLimit: 1,\n            fileSizeLimit: 250 * 1024 * 1024,\n            fileSingleSizeLimit: 250 * 1024 * 1024,\n            accept: {\n                title: \"files\",\n                extensions: \"avi,rmvb,rm,flv,mp4,mov,pdf,wps,rtf,doc,txt,docx,ppt,xlsx,bmp,gif,jpg,pic,png,tif\"\n            },\n        });\n    </script>\n    \n    \n# 2 资源文件\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"${ctxStatic}/js/diyUpload/css/diyUpload.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"${ctxStatic}/js/diyUpload/css/webuploader.css\">\n    <script type=\"text/javascript\" src=\"${ctxStatic}/js/diyUpload/js/diyUploadmore.js\"></script>\n    <script type=\"text/javascript\" src=\"${ctxStatic}/js/diyUpload/js/webuploader.html5only.min.js\"></script>\n  \n  \n  # 3 后端\n  ## 上传到了本地磁盘路径，注意访问的时候走nginx代理访问\n  \t @ResponseBody\n      @RequestMapping(value = \"/upload\", method = RequestMethod.POST)\n      public ResultEntity uploads(@RequestParam(\"file\") MultipartFile file, HttpServletRequest request) throws Exception {\n          FileOutputStream fos = null;\n          InputStream fis = null;\n          try {\n              String fullPath = FileUtils.VFS_ROOT_PATH + FileUtils.SOURCE_ATTACH;\n              File dir = new File(fullPath);\n              if (!dir.exists()) {\n                  dir.mkdirs();\n              }\n              String suffix = file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf(\".\"));\n              String fileName = System.currentTimeMillis()  + suffix;\n              String absPath = FileUtils.VFS_ROOT_PATH + FileUtils.SOURCE_ATTACH + fileName;\n              String fileRequestPath = FileUtils.SOURCE_ATTACH + fileName;\n\n              fis = file.getInputStream();\n              File f = new File(absPath);\n              fos = new FileOutputStream(f);\n              byte[] b = new byte[1024];\n              int nRead = 0;\n              while ((nRead = fis.read(b)) != -1) {\n                  fos.write(b, 0, nRead);\n              }\n              fos.flush();\n\n              Map<String, String> pathMap = new HashMap<>();\n              pathMap.put(\"fileName\", file.getOriginalFilename());\n              pathMap.put(\"fileRequestPath\", fileRequestPath);\n              pathMap.put(\"suffix\", suffix);\n              return ResultEntity.newResultEntity(pathMap);\n          } catch (Exception e) {\n              logger.error(\"上传文件失败\", e);\n          } finally {\n              fos.close();\n              fis.close();\n          }\n          return ResultEntity.newErrEntity();\n      }\n  \n  \n  # 4 nginx配置\n  \n    server{\n       listen 8085;\n          location / {\n          #配置成本地文件路径和对应的端口nginx.conf里加这个server节点即可\n              alias C:/smartBoard/vfsroot/;\n              autoindex on;\n        }\n\n      }\n  ","source":"_posts/java导入文件视频文件并使用nginx做静态资源代理.md","raw":"title: java导入文件视频文件并使用nginx做静态资源代理\nauthor: zjy\ndate: 2018-05-30 16:09:07\ntags:\n---\n## 1 前端\n\n\t\t<div class=\"unit\">\n                <label>上传文件：</label>\n                <input type=\"hidden\" name=\"fileUrl\" id=\"sourceUrl\" value=\"\">\n                <input type=\"hidden\" name=\"fileName\" id=\"sourceName\" value=\"\">\n                <input type=\"hidden\" name=\"ctx\" value=\"${ctx}\">\n                <div style=\"display: inline-block;vertical-align: top\" id=\"sourceUpload\" data-flag='schoolCulture' data-flagtype='schoolculturevideo' class=\"webuploader-container \">\n                    <div class=\"webuploader-pick\">上传资源</div>\n                    <div style=\"position: absolute; top: 0px; left: 0px; width: 126px; height: 44px; overflow: hidden; bottom: auto; right: auto;\">\n                        <input type=\"file\" name=\"file\" class=\"webuploader-element-invisible\">\n                        <label style=\"opacity: 0; width: 100%; height: 100%; display: block; cursor: pointer; background: rgb(255, 255, 255);\"></label>\n                    </div>\n                </div>\n           </div>\n           \n           \n \t<script>\n        $('#sourceUpload').diyUpload({\n            url: '${ctx}/file/upload',\n            success: function (data) {\n                $('#sourceUrl').val(data.data.fileRequestPath);\n                $('#sourceName').val(data.data.fileName);\n                $(\"input[name='suffix']\").val(data.data.suffix);\n                $(\"input[name='url']\").val(\"已经上传，不需要填写路径\");\n                $(\"input[name='url']\").attr(\"disabled\",true);\n            },\n            error: function (err) {\n                console.info(err);\n            },\n            buttonText: '上传资源',\n            chunked: false,\n            // 分片大小\n            chunkSize: 50 * 1024 * 1024,\n            //最大上传的文件数量, 总文件大小,单个文件大小(单位字节);\n            fileNumLimit: 1,\n            fileSizeLimit: 250 * 1024 * 1024,\n            fileSingleSizeLimit: 250 * 1024 * 1024,\n            accept: {\n                title: \"files\",\n                extensions: \"avi,rmvb,rm,flv,mp4,mov,pdf,wps,rtf,doc,txt,docx,ppt,xlsx,bmp,gif,jpg,pic,png,tif\"\n            },\n        });\n    </script>\n    \n    \n# 2 资源文件\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"${ctxStatic}/js/diyUpload/css/diyUpload.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"${ctxStatic}/js/diyUpload/css/webuploader.css\">\n    <script type=\"text/javascript\" src=\"${ctxStatic}/js/diyUpload/js/diyUploadmore.js\"></script>\n    <script type=\"text/javascript\" src=\"${ctxStatic}/js/diyUpload/js/webuploader.html5only.min.js\"></script>\n  \n  \n  # 3 后端\n  ## 上传到了本地磁盘路径，注意访问的时候走nginx代理访问\n  \t @ResponseBody\n      @RequestMapping(value = \"/upload\", method = RequestMethod.POST)\n      public ResultEntity uploads(@RequestParam(\"file\") MultipartFile file, HttpServletRequest request) throws Exception {\n          FileOutputStream fos = null;\n          InputStream fis = null;\n          try {\n              String fullPath = FileUtils.VFS_ROOT_PATH + FileUtils.SOURCE_ATTACH;\n              File dir = new File(fullPath);\n              if (!dir.exists()) {\n                  dir.mkdirs();\n              }\n              String suffix = file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf(\".\"));\n              String fileName = System.currentTimeMillis()  + suffix;\n              String absPath = FileUtils.VFS_ROOT_PATH + FileUtils.SOURCE_ATTACH + fileName;\n              String fileRequestPath = FileUtils.SOURCE_ATTACH + fileName;\n\n              fis = file.getInputStream();\n              File f = new File(absPath);\n              fos = new FileOutputStream(f);\n              byte[] b = new byte[1024];\n              int nRead = 0;\n              while ((nRead = fis.read(b)) != -1) {\n                  fos.write(b, 0, nRead);\n              }\n              fos.flush();\n\n              Map<String, String> pathMap = new HashMap<>();\n              pathMap.put(\"fileName\", file.getOriginalFilename());\n              pathMap.put(\"fileRequestPath\", fileRequestPath);\n              pathMap.put(\"suffix\", suffix);\n              return ResultEntity.newResultEntity(pathMap);\n          } catch (Exception e) {\n              logger.error(\"上传文件失败\", e);\n          } finally {\n              fos.close();\n              fis.close();\n          }\n          return ResultEntity.newErrEntity();\n      }\n  \n  \n  # 4 nginx配置\n  \n    server{\n       listen 8085;\n          location / {\n          #配置成本地文件路径和对应的端口nginx.conf里加这个server节点即可\n              alias C:/smartBoard/vfsroot/;\n              autoindex on;\n        }\n\n      }\n  ","slug":"java导入文件视频文件并使用nginx做静态资源代理","published":1,"updated":"2018-05-30T08:14:43.046Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eqd000mawpfh6nlg079","content":"<h2 id=\"1-前端\"><a href=\"#1-前端\" class=\"headerlink\" title=\"1 前端\"></a>1 前端</h2><pre><code>    &lt;div class=&quot;unit&quot;&gt;\n            &lt;label&gt;上传文件：&lt;/label&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;fileUrl&quot; id=&quot;sourceUrl&quot; value=&quot;&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;fileName&quot; id=&quot;sourceName&quot; value=&quot;&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;ctx&quot; value=&quot;${ctx}&quot;&gt;\n            &lt;div style=&quot;display: inline-block;vertical-align: top&quot; id=&quot;sourceUpload&quot; data-flag=&apos;schoolCulture&apos; data-flagtype=&apos;schoolculturevideo&apos; class=&quot;webuploader-container &quot;&gt;\n                &lt;div class=&quot;webuploader-pick&quot;&gt;上传资源&lt;/div&gt;\n                &lt;div style=&quot;position: absolute; top: 0px; left: 0px; width: 126px; height: 44px; overflow: hidden; bottom: auto; right: auto;&quot;&gt;\n                    &lt;input type=&quot;file&quot; name=&quot;file&quot; class=&quot;webuploader-element-invisible&quot;&gt;\n                    &lt;label style=&quot;opacity: 0; width: 100%; height: 100%; display: block; cursor: pointer; background: rgb(255, 255, 255);&quot;&gt;&lt;/label&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n       &lt;/div&gt;\n\n\n &lt;script&gt;\n    $(&apos;#sourceUpload&apos;).diyUpload({\n        url: &apos;${ctx}/file/upload&apos;,\n        success: function (data) {\n            $(&apos;#sourceUrl&apos;).val(data.data.fileRequestPath);\n            $(&apos;#sourceName&apos;).val(data.data.fileName);\n            $(&quot;input[name=&apos;suffix&apos;]&quot;).val(data.data.suffix);\n            $(&quot;input[name=&apos;url&apos;]&quot;).val(&quot;已经上传，不需要填写路径&quot;);\n            $(&quot;input[name=&apos;url&apos;]&quot;).attr(&quot;disabled&quot;,true);\n        },\n        error: function (err) {\n            console.info(err);\n        },\n        buttonText: &apos;上传资源&apos;,\n        chunked: false,\n        // 分片大小\n        chunkSize: 50 * 1024 * 1024,\n        //最大上传的文件数量, 总文件大小,单个文件大小(单位字节);\n        fileNumLimit: 1,\n        fileSizeLimit: 250 * 1024 * 1024,\n        fileSingleSizeLimit: 250 * 1024 * 1024,\n        accept: {\n            title: &quot;files&quot;,\n            extensions: &quot;avi,rmvb,rm,flv,mp4,mov,pdf,wps,rtf,doc,txt,docx,ppt,xlsx,bmp,gif,jpg,pic,png,tif&quot;\n        },\n    });\n&lt;/script&gt;\n</code></pre><h1 id=\"2-资源文件\"><a href=\"#2-资源文件\" class=\"headerlink\" title=\"2 资源文件\"></a>2 资源文件</h1><pre><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;${ctxStatic}/js/diyUpload/css/diyUpload.css&quot;&gt;\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;${ctxStatic}/js/diyUpload/css/webuploader.css&quot;&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;${ctxStatic}/js/diyUpload/js/diyUploadmore.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;${ctxStatic}/js/diyUpload/js/webuploader.html5only.min.js&quot;&gt;&lt;/script&gt;\n</code></pre><h1 id=\"3-后端\"><a href=\"#3-后端\" class=\"headerlink\" title=\"3 后端\"></a>3 后端</h1><h2 id=\"上传到了本地磁盘路径，注意访问的时候走nginx代理访问\"><a href=\"#上传到了本地磁盘路径，注意访问的时候走nginx代理访问\" class=\"headerlink\" title=\"上传到了本地磁盘路径，注意访问的时候走nginx代理访问\"></a>上传到了本地磁盘路径，注意访问的时候走nginx代理访问</h2><pre><code> @ResponseBody\n@RequestMapping(value = &quot;/upload&quot;, method = RequestMethod.POST)\npublic ResultEntity uploads(@RequestParam(&quot;file&quot;) MultipartFile file, HttpServletRequest request) throws Exception {\n    FileOutputStream fos = null;\n    InputStream fis = null;\n    try {\n        String fullPath = FileUtils.VFS_ROOT_PATH + FileUtils.SOURCE_ATTACH;\n        File dir = new File(fullPath);\n        if (!dir.exists()) {\n            dir.mkdirs();\n        }\n        String suffix = file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf(&quot;.&quot;));\n        String fileName = System.currentTimeMillis()  + suffix;\n        String absPath = FileUtils.VFS_ROOT_PATH + FileUtils.SOURCE_ATTACH + fileName;\n        String fileRequestPath = FileUtils.SOURCE_ATTACH + fileName;\n\n        fis = file.getInputStream();\n        File f = new File(absPath);\n        fos = new FileOutputStream(f);\n        byte[] b = new byte[1024];\n        int nRead = 0;\n        while ((nRead = fis.read(b)) != -1) {\n            fos.write(b, 0, nRead);\n        }\n        fos.flush();\n\n        Map&lt;String, String&gt; pathMap = new HashMap&lt;&gt;();\n        pathMap.put(&quot;fileName&quot;, file.getOriginalFilename());\n        pathMap.put(&quot;fileRequestPath&quot;, fileRequestPath);\n        pathMap.put(&quot;suffix&quot;, suffix);\n        return ResultEntity.newResultEntity(pathMap);\n    } catch (Exception e) {\n        logger.error(&quot;上传文件失败&quot;, e);\n    } finally {\n        fos.close();\n        fis.close();\n    }\n    return ResultEntity.newErrEntity();\n}\n</code></pre><h1 id=\"4-nginx配置\"><a href=\"#4-nginx配置\" class=\"headerlink\" title=\"4 nginx配置\"></a>4 nginx配置</h1><pre><code>server{\n   listen 8085;\n      location / {\n      #配置成本地文件路径和对应的端口nginx.conf里加这个server节点即可\n          alias C:/smartBoard/vfsroot/;\n          autoindex on;\n    }\n\n  }\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-前端\"><a href=\"#1-前端\" class=\"headerlink\" title=\"1 前端\"></a>1 前端</h2><pre><code>    &lt;div class=&quot;unit&quot;&gt;\n            &lt;label&gt;上传文件：&lt;/label&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;fileUrl&quot; id=&quot;sourceUrl&quot; value=&quot;&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;fileName&quot; id=&quot;sourceName&quot; value=&quot;&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;ctx&quot; value=&quot;${ctx}&quot;&gt;\n            &lt;div style=&quot;display: inline-block;vertical-align: top&quot; id=&quot;sourceUpload&quot; data-flag=&apos;schoolCulture&apos; data-flagtype=&apos;schoolculturevideo&apos; class=&quot;webuploader-container &quot;&gt;\n                &lt;div class=&quot;webuploader-pick&quot;&gt;上传资源&lt;/div&gt;\n                &lt;div style=&quot;position: absolute; top: 0px; left: 0px; width: 126px; height: 44px; overflow: hidden; bottom: auto; right: auto;&quot;&gt;\n                    &lt;input type=&quot;file&quot; name=&quot;file&quot; class=&quot;webuploader-element-invisible&quot;&gt;\n                    &lt;label style=&quot;opacity: 0; width: 100%; height: 100%; display: block; cursor: pointer; background: rgb(255, 255, 255);&quot;&gt;&lt;/label&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n       &lt;/div&gt;\n\n\n &lt;script&gt;\n    $(&apos;#sourceUpload&apos;).diyUpload({\n        url: &apos;${ctx}/file/upload&apos;,\n        success: function (data) {\n            $(&apos;#sourceUrl&apos;).val(data.data.fileRequestPath);\n            $(&apos;#sourceName&apos;).val(data.data.fileName);\n            $(&quot;input[name=&apos;suffix&apos;]&quot;).val(data.data.suffix);\n            $(&quot;input[name=&apos;url&apos;]&quot;).val(&quot;已经上传，不需要填写路径&quot;);\n            $(&quot;input[name=&apos;url&apos;]&quot;).attr(&quot;disabled&quot;,true);\n        },\n        error: function (err) {\n            console.info(err);\n        },\n        buttonText: &apos;上传资源&apos;,\n        chunked: false,\n        // 分片大小\n        chunkSize: 50 * 1024 * 1024,\n        //最大上传的文件数量, 总文件大小,单个文件大小(单位字节);\n        fileNumLimit: 1,\n        fileSizeLimit: 250 * 1024 * 1024,\n        fileSingleSizeLimit: 250 * 1024 * 1024,\n        accept: {\n            title: &quot;files&quot;,\n            extensions: &quot;avi,rmvb,rm,flv,mp4,mov,pdf,wps,rtf,doc,txt,docx,ppt,xlsx,bmp,gif,jpg,pic,png,tif&quot;\n        },\n    });\n&lt;/script&gt;\n</code></pre><h1 id=\"2-资源文件\"><a href=\"#2-资源文件\" class=\"headerlink\" title=\"2 资源文件\"></a>2 资源文件</h1><pre><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;${ctxStatic}/js/diyUpload/css/diyUpload.css&quot;&gt;\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;${ctxStatic}/js/diyUpload/css/webuploader.css&quot;&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;${ctxStatic}/js/diyUpload/js/diyUploadmore.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;${ctxStatic}/js/diyUpload/js/webuploader.html5only.min.js&quot;&gt;&lt;/script&gt;\n</code></pre><h1 id=\"3-后端\"><a href=\"#3-后端\" class=\"headerlink\" title=\"3 后端\"></a>3 后端</h1><h2 id=\"上传到了本地磁盘路径，注意访问的时候走nginx代理访问\"><a href=\"#上传到了本地磁盘路径，注意访问的时候走nginx代理访问\" class=\"headerlink\" title=\"上传到了本地磁盘路径，注意访问的时候走nginx代理访问\"></a>上传到了本地磁盘路径，注意访问的时候走nginx代理访问</h2><pre><code> @ResponseBody\n@RequestMapping(value = &quot;/upload&quot;, method = RequestMethod.POST)\npublic ResultEntity uploads(@RequestParam(&quot;file&quot;) MultipartFile file, HttpServletRequest request) throws Exception {\n    FileOutputStream fos = null;\n    InputStream fis = null;\n    try {\n        String fullPath = FileUtils.VFS_ROOT_PATH + FileUtils.SOURCE_ATTACH;\n        File dir = new File(fullPath);\n        if (!dir.exists()) {\n            dir.mkdirs();\n        }\n        String suffix = file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf(&quot;.&quot;));\n        String fileName = System.currentTimeMillis()  + suffix;\n        String absPath = FileUtils.VFS_ROOT_PATH + FileUtils.SOURCE_ATTACH + fileName;\n        String fileRequestPath = FileUtils.SOURCE_ATTACH + fileName;\n\n        fis = file.getInputStream();\n        File f = new File(absPath);\n        fos = new FileOutputStream(f);\n        byte[] b = new byte[1024];\n        int nRead = 0;\n        while ((nRead = fis.read(b)) != -1) {\n            fos.write(b, 0, nRead);\n        }\n        fos.flush();\n\n        Map&lt;String, String&gt; pathMap = new HashMap&lt;&gt;();\n        pathMap.put(&quot;fileName&quot;, file.getOriginalFilename());\n        pathMap.put(&quot;fileRequestPath&quot;, fileRequestPath);\n        pathMap.put(&quot;suffix&quot;, suffix);\n        return ResultEntity.newResultEntity(pathMap);\n    } catch (Exception e) {\n        logger.error(&quot;上传文件失败&quot;, e);\n    } finally {\n        fos.close();\n        fis.close();\n    }\n    return ResultEntity.newErrEntity();\n}\n</code></pre><h1 id=\"4-nginx配置\"><a href=\"#4-nginx配置\" class=\"headerlink\" title=\"4 nginx配置\"></a>4 nginx配置</h1><pre><code>server{\n   listen 8085;\n      location / {\n      #配置成本地文件路径和对应的端口nginx.conf里加这个server节点即可\n          alias C:/smartBoard/vfsroot/;\n          autoindex on;\n    }\n\n  }\n</code></pre>"},{"title":"ubuntu14.04 安装配置JDK1.7，更换openjdk","date":"2017-05-05T05:51:49.000Z","_content":"\n# ubuntu14.04 安装配置JDK1.7\n\n## 1,下载jdk-7u45-linux-x64.tar.gz \n```    \n\thttp://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html\n```  \n---\n## 2, 解压JDK \n```\nsudo tar zxvf jdk-7u45-linux-x64.tar.gz  -C /usr/lib/jvm   \n```\n\n---\n##  3,设置环境变量（全局） \n```\nsudo gedit  /etc/profile  \n```\n\n   打开profile文件输入\n   \n```\nexport JAVA_HOME=/usr/lib/jvm/jdk1.7.0_65  \nexport CLASSPATH=\".:$JAVA_HOME/lib:$CLASSPATH\"  \nexport PATH=\"$JAVA_HOME/bin:$PATH\"  \n``` \n##  4,设置系统默认JDK \n```\nsudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.7.0_65/bin/java 300  \nsudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.7.0_5/bin/javac 300  \nsudo update-alternatives --config java\n```\n##  5, 验证JDK\n   输入命令 \n```\njava -version  \n```\n   见到JDK的信息则表示成功。\n   \n   \n   \n   \n# 将openjdk更换为 oracle jdk\n\n## 1 下载jdk并解压，修改环境变量配置文件/etc/profile，在文件末尾加入以下几行信息：（其中JAVA_HOME=/usr/java/******，为jdk实际安装路径）\n```\nexport JAVA_HOME=/usr/java/jdk1.7.0_79\nexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin\n```\n\n## 2 修改默认的jdk。即设置java和javac的符号连接，这是把默认的openjdk1.6改成刚新装的jdk1.7。\n```\n cd /usr/bin/\n mv java  javabak_open1.6\n mv javac  javacbak_open1.6\n\n[root@localhost bin]# ln -s  /usr/java/jdk1.7.0_79/jre/bin/java\n[root@localhost bin]# ln -s  /usr/java/jdk1.7.0_79/bin/javac\n```\n\n## 3检查\n```\n[root@real-node1 bin]# java -version\njava version \"1.7.0_79\"\nJava(TM) SE Runtime Environment (build 1.7.0_79-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)   \n```","source":"_posts/jdk.md","raw":"---\ntitle: ubuntu14.04 安装配置JDK1.7，更换openjdk\ndate: 2017-05-05 13:51:49\ntags: server,linux,ubuntu\n---\n\n# ubuntu14.04 安装配置JDK1.7\n\n## 1,下载jdk-7u45-linux-x64.tar.gz \n```    \n\thttp://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html\n```  \n---\n## 2, 解压JDK \n```\nsudo tar zxvf jdk-7u45-linux-x64.tar.gz  -C /usr/lib/jvm   \n```\n\n---\n##  3,设置环境变量（全局） \n```\nsudo gedit  /etc/profile  \n```\n\n   打开profile文件输入\n   \n```\nexport JAVA_HOME=/usr/lib/jvm/jdk1.7.0_65  \nexport CLASSPATH=\".:$JAVA_HOME/lib:$CLASSPATH\"  \nexport PATH=\"$JAVA_HOME/bin:$PATH\"  \n``` \n##  4,设置系统默认JDK \n```\nsudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.7.0_65/bin/java 300  \nsudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.7.0_5/bin/javac 300  \nsudo update-alternatives --config java\n```\n##  5, 验证JDK\n   输入命令 \n```\njava -version  \n```\n   见到JDK的信息则表示成功。\n   \n   \n   \n   \n# 将openjdk更换为 oracle jdk\n\n## 1 下载jdk并解压，修改环境变量配置文件/etc/profile，在文件末尾加入以下几行信息：（其中JAVA_HOME=/usr/java/******，为jdk实际安装路径）\n```\nexport JAVA_HOME=/usr/java/jdk1.7.0_79\nexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin\n```\n\n## 2 修改默认的jdk。即设置java和javac的符号连接，这是把默认的openjdk1.6改成刚新装的jdk1.7。\n```\n cd /usr/bin/\n mv java  javabak_open1.6\n mv javac  javacbak_open1.6\n\n[root@localhost bin]# ln -s  /usr/java/jdk1.7.0_79/jre/bin/java\n[root@localhost bin]# ln -s  /usr/java/jdk1.7.0_79/bin/javac\n```\n\n## 3检查\n```\n[root@real-node1 bin]# java -version\njava version \"1.7.0_79\"\nJava(TM) SE Runtime Environment (build 1.7.0_79-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)   \n```","slug":"jdk","published":1,"updated":"2017-07-19T10:40:28.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eqf000pawpftqnu39ao","content":"<h1 id=\"ubuntu14-04-安装配置JDK1-7\"><a href=\"#ubuntu14-04-安装配置JDK1-7\" class=\"headerlink\" title=\"ubuntu14.04 安装配置JDK1.7\"></a>ubuntu14.04 安装配置JDK1.7</h1><h2 id=\"1-下载jdk-7u45-linux-x64-tar-gz\"><a href=\"#1-下载jdk-7u45-linux-x64-tar-gz\" class=\"headerlink\" title=\"1,下载jdk-7u45-linux-x64.tar.gz\"></a>1,下载jdk-7u45-linux-x64.tar.gz</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">\thttp://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html</div><div class=\"line\">```  </div><div class=\"line\">---</div><div class=\"line\">## 2, 解压JDK</div></pre></td></tr></table></figure>\n<p>sudo tar zxvf jdk-7u45-linux-x64.tar.gz  -C /usr/lib/jvm<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">---</div><div class=\"line\">##  3,设置环境变量（全局）</div></pre></td></tr></table></figure></p>\n<p>sudo gedit  /etc/profile<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">打开profile文件输入</div></pre></td></tr></table></figure></p>\n<p>export JAVA_HOME=/usr/lib/jvm/jdk1.7.0_65<br>export CLASSPATH=”.:$JAVA_HOME/lib:$CLASSPATH”<br>export PATH=”$JAVA_HOME/bin:$PATH”<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">##  4,设置系统默认JDK</div></pre></td></tr></table></figure></p>\n<p>sudo update-alternatives –install /usr/bin/java java /usr/lib/jvm/jdk1.7.0_65/bin/java 300<br>sudo update-alternatives –install /usr/bin/javac javac /usr/lib/jvm/jdk1.7.0_5/bin/javac 300<br>sudo update-alternatives –config java<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">##  5, 验证JDK</div><div class=\"line\">   输入命令</div></pre></td></tr></table></figure></p>\n<p>java -version<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">   见到JDK的信息则表示成功。</div><div class=\"line\">   </div><div class=\"line\">   </div><div class=\"line\">   </div><div class=\"line\">   </div><div class=\"line\"># 将openjdk更换为 oracle jdk</div><div class=\"line\"></div><div class=\"line\">## 1 下载jdk并解压，修改环境变量配置文件/etc/profile，在文件末尾加入以下几行信息：（其中JAVA_HOME=/usr/java/******，为jdk实际安装路径）</div></pre></td></tr></table></figure></p>\n<p>export JAVA_HOME=/usr/java/jdk1.7.0_79<br>export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar<br>export PATH=$PATH:$JAVA_HOME/bin<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">## 2 修改默认的jdk。即设置java和javac的符号连接，这是把默认的openjdk1.6改成刚新装的jdk1.7。</div></pre></td></tr></table></figure></p>\n<p> cd /usr/bin/<br> mv java  javabak_open1.6<br> mv javac  javacbak_open1.6</p>\n<p>[root@localhost bin]# ln -s  /usr/java/jdk1.7.0_79/jre/bin/java<br>[root@localhost bin]# ln -s  /usr/java/jdk1.7.0_79/bin/javac<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">## 3检查</div></pre></td></tr></table></figure></p>\n<p>[root@real-node1 bin]# java -version<br>java version “1.7.0_79”<br>Java(TM) SE Runtime Environment (build 1.7.0_79-b15)<br>Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)<br>```</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ubuntu14-04-安装配置JDK1-7\"><a href=\"#ubuntu14-04-安装配置JDK1-7\" class=\"headerlink\" title=\"ubuntu14.04 安装配置JDK1.7\"></a>ubuntu14.04 安装配置JDK1.7</h1><h2 id=\"1-下载jdk-7u45-linux-x64-tar-gz\"><a href=\"#1-下载jdk-7u45-linux-x64-tar-gz\" class=\"headerlink\" title=\"1,下载jdk-7u45-linux-x64.tar.gz\"></a>1,下载jdk-7u45-linux-x64.tar.gz</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">\thttp://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html</div><div class=\"line\">```  </div><div class=\"line\">---</div><div class=\"line\">## 2, 解压JDK</div></pre></td></tr></table></figure>\n<p>sudo tar zxvf jdk-7u45-linux-x64.tar.gz  -C /usr/lib/jvm<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">---</div><div class=\"line\">##  3,设置环境变量（全局）</div></pre></td></tr></table></figure></p>\n<p>sudo gedit  /etc/profile<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">打开profile文件输入</div></pre></td></tr></table></figure></p>\n<p>export JAVA_HOME=/usr/lib/jvm/jdk1.7.0_65<br>export CLASSPATH=”.:$JAVA_HOME/lib:$CLASSPATH”<br>export PATH=”$JAVA_HOME/bin:$PATH”<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">##  4,设置系统默认JDK</div></pre></td></tr></table></figure></p>\n<p>sudo update-alternatives –install /usr/bin/java java /usr/lib/jvm/jdk1.7.0_65/bin/java 300<br>sudo update-alternatives –install /usr/bin/javac javac /usr/lib/jvm/jdk1.7.0_5/bin/javac 300<br>sudo update-alternatives –config java<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">##  5, 验证JDK</div><div class=\"line\">   输入命令</div></pre></td></tr></table></figure></p>\n<p>java -version<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">   见到JDK的信息则表示成功。</div><div class=\"line\">   </div><div class=\"line\">   </div><div class=\"line\">   </div><div class=\"line\">   </div><div class=\"line\"># 将openjdk更换为 oracle jdk</div><div class=\"line\"></div><div class=\"line\">## 1 下载jdk并解压，修改环境变量配置文件/etc/profile，在文件末尾加入以下几行信息：（其中JAVA_HOME=/usr/java/******，为jdk实际安装路径）</div></pre></td></tr></table></figure></p>\n<p>export JAVA_HOME=/usr/java/jdk1.7.0_79<br>export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar<br>export PATH=$PATH:$JAVA_HOME/bin<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">## 2 修改默认的jdk。即设置java和javac的符号连接，这是把默认的openjdk1.6改成刚新装的jdk1.7。</div></pre></td></tr></table></figure></p>\n<p> cd /usr/bin/<br> mv java  javabak_open1.6<br> mv javac  javacbak_open1.6</p>\n<p>[root@localhost bin]# ln -s  /usr/java/jdk1.7.0_79/jre/bin/java<br>[root@localhost bin]# ln -s  /usr/java/jdk1.7.0_79/bin/javac<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">## 3检查</div></pre></td></tr></table></figure></p>\n<p>[root@real-node1 bin]# java -version<br>java version “1.7.0_79”<br>Java(TM) SE Runtime Environment (build 1.7.0_79-b15)<br>Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)<br>```</p>\n"},{"title":"jq/java下分别合并指定列单元格","author":"zjy","date":"2018-09-13T09:58:42.000Z","_content":"# 需求\n\t给定表格html字符串。需要对指定的列进行单元格合并操作\n    \n# html代码\n\t <table id=\"teamtable\" width=”450″ border=”1″ cellspacing=”0″ cellpadding=”2″ bordercolor=”#009900″>\n        <tbody>\n        <tr class='tableHead'>\n            <td colspan=3>设备类型</td>\n            <td rowspan=\"2\">核心网络机房</td>\n            <td rowspan=\"2\">信息中心北机房</td>\n            <td rowspan=\"2\">中心站机房</td>\n            <td rowspan=\"2\">信息中心南机房</td>\n            <td rowspan=\"2\">未入机房</td>\n            <td rowspan=\"2\">小计</td>\n        </tr>\n        <tr class='tableHead'>\n            <td>2级分类</td>\n            <td>3级分类</td>\n            <td>4级分类</td>\n        </tr>\n        <tr>\n            <td>其他计算机设备</td>\n            <td></td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>光纤线路</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>其他存储设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>存储用光纤交换机</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>磁带库</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>磁盘阵列</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>VPN设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>入侵检测设备</td>\n            <td></td>\n            <td>0</td>\n            <td>2</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>上网行为管理设备</td>\n            <td>0</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>代理设备</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>其他安全设备</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>其它安全网关</td>\n            <td>0</td>\n            <td>3</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>3</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>准入设备</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>堡垒机</td>\n            <td>0</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>邮件安全网关</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>密码设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>漏洞扫描设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>计算机终端安全设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>防火墙</td>\n            <td>应用防火墙</td>\n            <td>0</td>\n            <td>7</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>7</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>防火墙</td>\n            <td>网络防火墙</td>\n            <td>0</td>\n            <td>4</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>4</td>\n        </tr>\n        <tr>\n            <td>机房辅助设备</td>\n            <td>其他机房辅助设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>机房辅助设备</td>\n            <td>机房环境监控设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>机房辅助设备</td>\n            <td>机柜</td>\n            <td></td>\n            <td>4</td>\n            <td>0</td>\n            <td>23</td>\n            <td>1</td>\n            <td>12</td>\n            <td>40</td>\n        </tr>\n        <tr>\n            <td>计算机专用设备</td>\n            <td>专用终端</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机专用设备</td>\n            <td>其它计算机专用设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机专用设备</td>\n            <td>负载均衡设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>专线</td>\n            <td>企业</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>专线</td>\n            <td>总部</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>交换机</td>\n            <td></td>\n            <td>4</td>\n            <td>55</td>\n            <td>13</td>\n            <td>0</td>\n            <td>8</td>\n            <td>80</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>终端接入设备</td>\n            <td>上网卡</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>终端接入设备</td>\n            <td>其它终端接入设备</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>路由器</td>\n            <td></td>\n            <td>2</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>PC服务器</td>\n            <td></td>\n            <td>0</td>\n            <td>91</td>\n            <td>124</td>\n            <td>0</td>\n            <td>49</td>\n            <td>264</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>便携式计算机</td>\n            <td>其它便携式计算机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>便携式计算机</td>\n            <td>平板电脑</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>便携式计算机</td>\n            <td>笔记本电脑</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>其他设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>一体机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>专用台式机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>其它台式机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>普通台式机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>瘦客户机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>小型机</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>输入输出设备</td>\n            <td>打印机</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>输入输出设备</td>\n            <td>扫描仪</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td colspan=3>总计</td>\n            <td>11</td>\n            <td>164</td>\n            <td>160</td>\n            <td>1</td>\n            <td>69</td>\n            <td>405</td>\n        </tr>\n        </tbody>\n    </table>\n    \n# jq合并方法：\n\t\t\n    jQuery.fn.rowspan = function (colIdx) { //封装的一个JQuery小插件\n        return this.each(function () {\n            var that;\n            $('tr', this).each(function (row) {\n                $('td:eq(' + colIdx + ')', this).filter(':visible').each(function (col) {\n                    if (that != null && $(this).html() == $(that).html()) {\n                        rowspan = $(that).attr(\"rowSpan\");\n                        if (rowspan == undefined) {\n                            $(that).attr(\"rowSpan\", 1);\n                            rowspan = $(that).attr(\"rowSpan\");\n                        }\n                        rowspan = Number(rowspan) + 1;\n                        $(that).attr(\"rowSpan\", rowspan);\n                        $(this).hide();\n                    } else {\n                        that = this;\n                    }\n                });\n            });\n        });\n    }\n    \n    调用： \t\t\t $(\"table\").rowspan(0);\n                        $(\"table\").rowspan(1);\n                        $(\"table\").find(\"td\").each(function () {\n                            if ($(this).css('display') == 'none') {\n                                $(this).remove()\n                            }\n                        });\n                        \n                        \n                        \n# java合并方法\n\t\t\n        使用的jar\n        \t<!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->\n            <dependency>\n                <groupId>org.jsoup</groupId>\n                <artifactId>jsoup</artifactId>\n                <version>1.8.3</version>\n            </dependency>\n            \n            \n         java代码：\n         \n          import com.github.pagehelper.util.StringUtil;\n          import org.springframework.util.StringUtils;\n          import org.jsoup.nodes.Element;\n          import org.jsoup.select.Elements;\n\n          import java.io.Serializable;\n          import java.util.ArrayList;\n          import java.util.List;\n         /**\n           * @Author zhangjianyu\n           * @Description //传递table,以及列号,会自动合并1-index的列。start=1\n           * @Param\n           * @return\n           **/\n          public static Element rowSpan(Element table,int index){\n              for (int in = 1; in <=index; in++) {\n                  Elements tds = table.select(\"tr td:nth-child(\"+in+\")\");\n                  int co=1;\n                  for (int i = 0; i < tds.size(); i++) {\n                      Element td = tds.get(i);\n                      if (i<tds.size()-1){\n                          if (td.text().equals(tds.get(i+1).text())){\n                              co++;\n                          }else{\n                              if(StringUtils.isEmpty(tds.get(i+1-co).attr(\"rowspan\"))){\n                                  tds.get(i+1-co).attr(\"rowspan\",\"\"+co+\"\");\n                                  co = 1;\n                              }\n                          }\n                      }\n                  }\n                  for (Element ele : tds) {\n                      System.out.println(ele.attr(\"rowspan\"));\n                      if (!\"noMerge\".equals(ele.parent().attr(\"class\"))&&StringUtils.isEmpty(ele.attr(\"rowspan\"))){\n                          ele.attr(\"display\",\"none\");\n                      }\n                  }\n              }\n              for (Element s : table.select(\"tr\")) {\n                  for (Element d:s.select(\"td\")) {\n                      if(\"none\".equals(d.attr(\"display\"))){\n                          d.remove();\n                      }\n                  }\n              }\n              return table;\n          }\n          \n          \n          \n          \n## 效果图前后对比\n\n合并前\n![upload successful](/paste/pasted-4.png)\n\n合并后\n![upload successful](/paste/pasted-5.png)","source":"_posts/jq-java下分别合并指定列单元格.md","raw":"title: jq/java下分别合并指定列单元格\nauthor: zjy\ndate: 2018-09-13 17:58:42\ntags:\n---\n# 需求\n\t给定表格html字符串。需要对指定的列进行单元格合并操作\n    \n# html代码\n\t <table id=\"teamtable\" width=”450″ border=”1″ cellspacing=”0″ cellpadding=”2″ bordercolor=”#009900″>\n        <tbody>\n        <tr class='tableHead'>\n            <td colspan=3>设备类型</td>\n            <td rowspan=\"2\">核心网络机房</td>\n            <td rowspan=\"2\">信息中心北机房</td>\n            <td rowspan=\"2\">中心站机房</td>\n            <td rowspan=\"2\">信息中心南机房</td>\n            <td rowspan=\"2\">未入机房</td>\n            <td rowspan=\"2\">小计</td>\n        </tr>\n        <tr class='tableHead'>\n            <td>2级分类</td>\n            <td>3级分类</td>\n            <td>4级分类</td>\n        </tr>\n        <tr>\n            <td>其他计算机设备</td>\n            <td></td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>光纤线路</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>其他存储设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>存储用光纤交换机</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>磁带库</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>存储设备</td>\n            <td>磁盘阵列</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>VPN设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>入侵检测设备</td>\n            <td></td>\n            <td>0</td>\n            <td>2</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>上网行为管理设备</td>\n            <td>0</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>代理设备</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>其他安全设备</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>其它安全网关</td>\n            <td>0</td>\n            <td>3</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>3</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>准入设备</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>堡垒机</td>\n            <td>0</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>安全网关</td>\n            <td>邮件安全网关</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>密码设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>漏洞扫描设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>计算机终端安全设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>防火墙</td>\n            <td>应用防火墙</td>\n            <td>0</td>\n            <td>7</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>7</td>\n        </tr>\n        <tr>\n            <td>安全设备</td>\n            <td>防火墙</td>\n            <td>网络防火墙</td>\n            <td>0</td>\n            <td>4</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>4</td>\n        </tr>\n        <tr>\n            <td>机房辅助设备</td>\n            <td>其他机房辅助设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>机房辅助设备</td>\n            <td>机房环境监控设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>机房辅助设备</td>\n            <td>机柜</td>\n            <td></td>\n            <td>4</td>\n            <td>0</td>\n            <td>23</td>\n            <td>1</td>\n            <td>12</td>\n            <td>40</td>\n        </tr>\n        <tr>\n            <td>计算机专用设备</td>\n            <td>专用终端</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机专用设备</td>\n            <td>其它计算机专用设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机专用设备</td>\n            <td>负载均衡设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>专线</td>\n            <td>企业</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>专线</td>\n            <td>总部</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>交换机</td>\n            <td></td>\n            <td>4</td>\n            <td>55</td>\n            <td>13</td>\n            <td>0</td>\n            <td>8</td>\n            <td>80</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>终端接入设备</td>\n            <td>上网卡</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>终端接入设备</td>\n            <td>其它终端接入设备</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机网络设备</td>\n            <td>路由器</td>\n            <td></td>\n            <td>2</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>PC服务器</td>\n            <td></td>\n            <td>0</td>\n            <td>91</td>\n            <td>124</td>\n            <td>0</td>\n            <td>49</td>\n            <td>264</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>便携式计算机</td>\n            <td>其它便携式计算机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>便携式计算机</td>\n            <td>平板电脑</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>便携式计算机</td>\n            <td>笔记本电脑</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>其他设备</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>一体机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>专用台式机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>其它台式机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>普通台式机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>台式机</td>\n            <td>瘦客户机</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>计算机设备</td>\n            <td>小型机</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>输入输出设备</td>\n            <td>打印机</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>输入输出设备</td>\n            <td>扫描仪</td>\n            <td></td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td colspan=3>总计</td>\n            <td>11</td>\n            <td>164</td>\n            <td>160</td>\n            <td>1</td>\n            <td>69</td>\n            <td>405</td>\n        </tr>\n        </tbody>\n    </table>\n    \n# jq合并方法：\n\t\t\n    jQuery.fn.rowspan = function (colIdx) { //封装的一个JQuery小插件\n        return this.each(function () {\n            var that;\n            $('tr', this).each(function (row) {\n                $('td:eq(' + colIdx + ')', this).filter(':visible').each(function (col) {\n                    if (that != null && $(this).html() == $(that).html()) {\n                        rowspan = $(that).attr(\"rowSpan\");\n                        if (rowspan == undefined) {\n                            $(that).attr(\"rowSpan\", 1);\n                            rowspan = $(that).attr(\"rowSpan\");\n                        }\n                        rowspan = Number(rowspan) + 1;\n                        $(that).attr(\"rowSpan\", rowspan);\n                        $(this).hide();\n                    } else {\n                        that = this;\n                    }\n                });\n            });\n        });\n    }\n    \n    调用： \t\t\t $(\"table\").rowspan(0);\n                        $(\"table\").rowspan(1);\n                        $(\"table\").find(\"td\").each(function () {\n                            if ($(this).css('display') == 'none') {\n                                $(this).remove()\n                            }\n                        });\n                        \n                        \n                        \n# java合并方法\n\t\t\n        使用的jar\n        \t<!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->\n            <dependency>\n                <groupId>org.jsoup</groupId>\n                <artifactId>jsoup</artifactId>\n                <version>1.8.3</version>\n            </dependency>\n            \n            \n         java代码：\n         \n          import com.github.pagehelper.util.StringUtil;\n          import org.springframework.util.StringUtils;\n          import org.jsoup.nodes.Element;\n          import org.jsoup.select.Elements;\n\n          import java.io.Serializable;\n          import java.util.ArrayList;\n          import java.util.List;\n         /**\n           * @Author zhangjianyu\n           * @Description //传递table,以及列号,会自动合并1-index的列。start=1\n           * @Param\n           * @return\n           **/\n          public static Element rowSpan(Element table,int index){\n              for (int in = 1; in <=index; in++) {\n                  Elements tds = table.select(\"tr td:nth-child(\"+in+\")\");\n                  int co=1;\n                  for (int i = 0; i < tds.size(); i++) {\n                      Element td = tds.get(i);\n                      if (i<tds.size()-1){\n                          if (td.text().equals(tds.get(i+1).text())){\n                              co++;\n                          }else{\n                              if(StringUtils.isEmpty(tds.get(i+1-co).attr(\"rowspan\"))){\n                                  tds.get(i+1-co).attr(\"rowspan\",\"\"+co+\"\");\n                                  co = 1;\n                              }\n                          }\n                      }\n                  }\n                  for (Element ele : tds) {\n                      System.out.println(ele.attr(\"rowspan\"));\n                      if (!\"noMerge\".equals(ele.parent().attr(\"class\"))&&StringUtils.isEmpty(ele.attr(\"rowspan\"))){\n                          ele.attr(\"display\",\"none\");\n                      }\n                  }\n              }\n              for (Element s : table.select(\"tr\")) {\n                  for (Element d:s.select(\"td\")) {\n                      if(\"none\".equals(d.attr(\"display\"))){\n                          d.remove();\n                      }\n                  }\n              }\n              return table;\n          }\n          \n          \n          \n          \n## 效果图前后对比\n\n合并前\n![upload successful](/paste/pasted-4.png)\n\n合并后\n![upload successful](/paste/pasted-5.png)","slug":"jq-java下分别合并指定列单元格","published":1,"updated":"2018-09-19T07:03:53.549Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eqh000rawpfixakbl2c","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><pre><code>给定表格html字符串。需要对指定的列进行单元格合并操作\n</code></pre><h1 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h1><pre><code> &lt;table id=&quot;teamtable&quot; width=”450″ border=”1″ cellspacing=”0″ cellpadding=”2″ bordercolor=”#009900″&gt;\n    &lt;tbody&gt;\n    &lt;tr class=&apos;tableHead&apos;&gt;\n        &lt;td colspan=3&gt;设备类型&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;核心网络机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;信息中心北机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;中心站机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;信息中心南机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;未入机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;小计&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=&apos;tableHead&apos;&gt;\n        &lt;td&gt;2级分类&lt;/td&gt;\n        &lt;td&gt;3级分类&lt;/td&gt;\n        &lt;td&gt;4级分类&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;其他计算机设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;光纤线路&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;其他存储设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;存储用光纤交换机&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;磁带库&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;磁盘阵列&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;VPN设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;入侵检测设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;2&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;2&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;上网行为管理设备&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;代理设备&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;其他安全设备&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;其它安全网关&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;3&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;3&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;准入设备&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;堡垒机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;邮件安全网关&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;密码设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;漏洞扫描设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;计算机终端安全设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;防火墙&lt;/td&gt;\n        &lt;td&gt;应用防火墙&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;7&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;7&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;防火墙&lt;/td&gt;\n        &lt;td&gt;网络防火墙&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;4&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;4&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;机房辅助设备&lt;/td&gt;\n        &lt;td&gt;其他机房辅助设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;机房辅助设备&lt;/td&gt;\n        &lt;td&gt;机房环境监控设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;机房辅助设备&lt;/td&gt;\n        &lt;td&gt;机柜&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;4&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;23&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;12&lt;/td&gt;\n        &lt;td&gt;40&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机专用设备&lt;/td&gt;\n        &lt;td&gt;专用终端&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机专用设备&lt;/td&gt;\n        &lt;td&gt;其它计算机专用设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机专用设备&lt;/td&gt;\n        &lt;td&gt;负载均衡设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;专线&lt;/td&gt;\n        &lt;td&gt;企业&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;专线&lt;/td&gt;\n        &lt;td&gt;总部&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;交换机&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;4&lt;/td&gt;\n        &lt;td&gt;55&lt;/td&gt;\n        &lt;td&gt;13&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;8&lt;/td&gt;\n        &lt;td&gt;80&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;终端接入设备&lt;/td&gt;\n        &lt;td&gt;上网卡&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;终端接入设备&lt;/td&gt;\n        &lt;td&gt;其它终端接入设备&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;路由器&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;2&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;2&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;PC服务器&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;91&lt;/td&gt;\n        &lt;td&gt;124&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;49&lt;/td&gt;\n        &lt;td&gt;264&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;便携式计算机&lt;/td&gt;\n        &lt;td&gt;其它便携式计算机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;便携式计算机&lt;/td&gt;\n        &lt;td&gt;平板电脑&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;便携式计算机&lt;/td&gt;\n        &lt;td&gt;笔记本电脑&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;其他设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;一体机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;专用台式机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;其它台式机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;普通台式机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;瘦客户机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;小型机&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;输入输出设备&lt;/td&gt;\n        &lt;td&gt;打印机&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;输入输出设备&lt;/td&gt;\n        &lt;td&gt;扫描仪&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=3&gt;总计&lt;/td&gt;\n        &lt;td&gt;11&lt;/td&gt;\n        &lt;td&gt;164&lt;/td&gt;\n        &lt;td&gt;160&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;69&lt;/td&gt;\n        &lt;td&gt;405&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre><h1 id=\"jq合并方法：\"><a href=\"#jq合并方法：\" class=\"headerlink\" title=\"jq合并方法：\"></a>jq合并方法：</h1><pre><code>jQuery.fn.rowspan = function (colIdx) { //封装的一个JQuery小插件\n    return this.each(function () {\n        var that;\n        $(&apos;tr&apos;, this).each(function (row) {\n            $(&apos;td:eq(&apos; + colIdx + &apos;)&apos;, this).filter(&apos;:visible&apos;).each(function (col) {\n                if (that != null &amp;&amp; $(this).html() == $(that).html()) {\n                    rowspan = $(that).attr(&quot;rowSpan&quot;);\n                    if (rowspan == undefined) {\n                        $(that).attr(&quot;rowSpan&quot;, 1);\n                        rowspan = $(that).attr(&quot;rowSpan&quot;);\n                    }\n                    rowspan = Number(rowspan) + 1;\n                    $(that).attr(&quot;rowSpan&quot;, rowspan);\n                    $(this).hide();\n                } else {\n                    that = this;\n                }\n            });\n        });\n    });\n}\n\n调用：              $(&quot;table&quot;).rowspan(0);\n                    $(&quot;table&quot;).rowspan(1);\n                    $(&quot;table&quot;).find(&quot;td&quot;).each(function () {\n                        if ($(this).css(&apos;display&apos;) == &apos;none&apos;) {\n                            $(this).remove()\n                        }\n                    });\n</code></pre><h1 id=\"java合并方法\"><a href=\"#java合并方法\" class=\"headerlink\" title=\"java合并方法\"></a>java合并方法</h1><pre><code>使用的jar\n    &lt;!-- https://mvnrepository.com/artifact/org.jsoup/jsoup --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.jsoup&lt;/groupId&gt;\n        &lt;artifactId&gt;jsoup&lt;/artifactId&gt;\n        &lt;version&gt;1.8.3&lt;/version&gt;\n    &lt;/dependency&gt;\n\n\n java代码：\n\n  import com.github.pagehelper.util.StringUtil;\n  import org.springframework.util.StringUtils;\n  import org.jsoup.nodes.Element;\n  import org.jsoup.select.Elements;\n\n  import java.io.Serializable;\n  import java.util.ArrayList;\n  import java.util.List;\n /**\n   * @Author zhangjianyu\n   * @Description //传递table,以及列号,会自动合并1-index的列。start=1\n   * @Param\n   * @return\n   **/\n  public static Element rowSpan(Element table,int index){\n      for (int in = 1; in &lt;=index; in++) {\n          Elements tds = table.select(&quot;tr td:nth-child(&quot;+in+&quot;)&quot;);\n          int co=1;\n          for (int i = 0; i &lt; tds.size(); i++) {\n              Element td = tds.get(i);\n              if (i&lt;tds.size()-1){\n                  if (td.text().equals(tds.get(i+1).text())){\n                      co++;\n                  }else{\n                      if(StringUtils.isEmpty(tds.get(i+1-co).attr(&quot;rowspan&quot;))){\n                          tds.get(i+1-co).attr(&quot;rowspan&quot;,&quot;&quot;+co+&quot;&quot;);\n                          co = 1;\n                      }\n                  }\n              }\n          }\n          for (Element ele : tds) {\n              System.out.println(ele.attr(&quot;rowspan&quot;));\n              if (!&quot;noMerge&quot;.equals(ele.parent().attr(&quot;class&quot;))&amp;&amp;StringUtils.isEmpty(ele.attr(&quot;rowspan&quot;))){\n                  ele.attr(&quot;display&quot;,&quot;none&quot;);\n              }\n          }\n      }\n      for (Element s : table.select(&quot;tr&quot;)) {\n          for (Element d:s.select(&quot;td&quot;)) {\n              if(&quot;none&quot;.equals(d.attr(&quot;display&quot;))){\n                  d.remove();\n              }\n          }\n      }\n      return table;\n  }\n</code></pre><h2 id=\"效果图前后对比\"><a href=\"#效果图前后对比\" class=\"headerlink\" title=\"效果图前后对比\"></a>效果图前后对比</h2><p>合并前<br><img src=\"/paste/pasted-4.png\" alt=\"upload successful\"></p>\n<p>合并后<br><img src=\"/paste/pasted-5.png\" alt=\"upload successful\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><pre><code>给定表格html字符串。需要对指定的列进行单元格合并操作\n</code></pre><h1 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h1><pre><code> &lt;table id=&quot;teamtable&quot; width=”450″ border=”1″ cellspacing=”0″ cellpadding=”2″ bordercolor=”#009900″&gt;\n    &lt;tbody&gt;\n    &lt;tr class=&apos;tableHead&apos;&gt;\n        &lt;td colspan=3&gt;设备类型&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;核心网络机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;信息中心北机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;中心站机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;信息中心南机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;未入机房&lt;/td&gt;\n        &lt;td rowspan=&quot;2&quot;&gt;小计&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=&apos;tableHead&apos;&gt;\n        &lt;td&gt;2级分类&lt;/td&gt;\n        &lt;td&gt;3级分类&lt;/td&gt;\n        &lt;td&gt;4级分类&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;其他计算机设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;光纤线路&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;其他存储设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;存储用光纤交换机&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;磁带库&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;存储设备&lt;/td&gt;\n        &lt;td&gt;磁盘阵列&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;VPN设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;入侵检测设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;2&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;2&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;上网行为管理设备&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;代理设备&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;其他安全设备&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;其它安全网关&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;3&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;3&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;准入设备&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;堡垒机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;安全网关&lt;/td&gt;\n        &lt;td&gt;邮件安全网关&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;密码设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;漏洞扫描设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;计算机终端安全设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;防火墙&lt;/td&gt;\n        &lt;td&gt;应用防火墙&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;7&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;7&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;安全设备&lt;/td&gt;\n        &lt;td&gt;防火墙&lt;/td&gt;\n        &lt;td&gt;网络防火墙&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;4&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;4&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;机房辅助设备&lt;/td&gt;\n        &lt;td&gt;其他机房辅助设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;机房辅助设备&lt;/td&gt;\n        &lt;td&gt;机房环境监控设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;机房辅助设备&lt;/td&gt;\n        &lt;td&gt;机柜&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;4&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;23&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;12&lt;/td&gt;\n        &lt;td&gt;40&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机专用设备&lt;/td&gt;\n        &lt;td&gt;专用终端&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机专用设备&lt;/td&gt;\n        &lt;td&gt;其它计算机专用设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机专用设备&lt;/td&gt;\n        &lt;td&gt;负载均衡设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;专线&lt;/td&gt;\n        &lt;td&gt;企业&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;专线&lt;/td&gt;\n        &lt;td&gt;总部&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;交换机&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;4&lt;/td&gt;\n        &lt;td&gt;55&lt;/td&gt;\n        &lt;td&gt;13&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;8&lt;/td&gt;\n        &lt;td&gt;80&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;终端接入设备&lt;/td&gt;\n        &lt;td&gt;上网卡&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;终端接入设备&lt;/td&gt;\n        &lt;td&gt;其它终端接入设备&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机网络设备&lt;/td&gt;\n        &lt;td&gt;路由器&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;2&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;2&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;PC服务器&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;91&lt;/td&gt;\n        &lt;td&gt;124&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;49&lt;/td&gt;\n        &lt;td&gt;264&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;便携式计算机&lt;/td&gt;\n        &lt;td&gt;其它便携式计算机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;便携式计算机&lt;/td&gt;\n        &lt;td&gt;平板电脑&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;便携式计算机&lt;/td&gt;\n        &lt;td&gt;笔记本电脑&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;其他设备&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;一体机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;专用台式机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;其它台式机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;普通台式机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;台式机&lt;/td&gt;\n        &lt;td&gt;瘦客户机&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;计算机设备&lt;/td&gt;\n        &lt;td&gt;小型机&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;输入输出设备&lt;/td&gt;\n        &lt;td&gt;打印机&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;输入输出设备&lt;/td&gt;\n        &lt;td&gt;扫描仪&lt;/td&gt;\n        &lt;td&gt;&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n        &lt;td&gt;0&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=3&gt;总计&lt;/td&gt;\n        &lt;td&gt;11&lt;/td&gt;\n        &lt;td&gt;164&lt;/td&gt;\n        &lt;td&gt;160&lt;/td&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;69&lt;/td&gt;\n        &lt;td&gt;405&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre><h1 id=\"jq合并方法：\"><a href=\"#jq合并方法：\" class=\"headerlink\" title=\"jq合并方法：\"></a>jq合并方法：</h1><pre><code>jQuery.fn.rowspan = function (colIdx) { //封装的一个JQuery小插件\n    return this.each(function () {\n        var that;\n        $(&apos;tr&apos;, this).each(function (row) {\n            $(&apos;td:eq(&apos; + colIdx + &apos;)&apos;, this).filter(&apos;:visible&apos;).each(function (col) {\n                if (that != null &amp;&amp; $(this).html() == $(that).html()) {\n                    rowspan = $(that).attr(&quot;rowSpan&quot;);\n                    if (rowspan == undefined) {\n                        $(that).attr(&quot;rowSpan&quot;, 1);\n                        rowspan = $(that).attr(&quot;rowSpan&quot;);\n                    }\n                    rowspan = Number(rowspan) + 1;\n                    $(that).attr(&quot;rowSpan&quot;, rowspan);\n                    $(this).hide();\n                } else {\n                    that = this;\n                }\n            });\n        });\n    });\n}\n\n调用：              $(&quot;table&quot;).rowspan(0);\n                    $(&quot;table&quot;).rowspan(1);\n                    $(&quot;table&quot;).find(&quot;td&quot;).each(function () {\n                        if ($(this).css(&apos;display&apos;) == &apos;none&apos;) {\n                            $(this).remove()\n                        }\n                    });\n</code></pre><h1 id=\"java合并方法\"><a href=\"#java合并方法\" class=\"headerlink\" title=\"java合并方法\"></a>java合并方法</h1><pre><code>使用的jar\n    &lt;!-- https://mvnrepository.com/artifact/org.jsoup/jsoup --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.jsoup&lt;/groupId&gt;\n        &lt;artifactId&gt;jsoup&lt;/artifactId&gt;\n        &lt;version&gt;1.8.3&lt;/version&gt;\n    &lt;/dependency&gt;\n\n\n java代码：\n\n  import com.github.pagehelper.util.StringUtil;\n  import org.springframework.util.StringUtils;\n  import org.jsoup.nodes.Element;\n  import org.jsoup.select.Elements;\n\n  import java.io.Serializable;\n  import java.util.ArrayList;\n  import java.util.List;\n /**\n   * @Author zhangjianyu\n   * @Description //传递table,以及列号,会自动合并1-index的列。start=1\n   * @Param\n   * @return\n   **/\n  public static Element rowSpan(Element table,int index){\n      for (int in = 1; in &lt;=index; in++) {\n          Elements tds = table.select(&quot;tr td:nth-child(&quot;+in+&quot;)&quot;);\n          int co=1;\n          for (int i = 0; i &lt; tds.size(); i++) {\n              Element td = tds.get(i);\n              if (i&lt;tds.size()-1){\n                  if (td.text().equals(tds.get(i+1).text())){\n                      co++;\n                  }else{\n                      if(StringUtils.isEmpty(tds.get(i+1-co).attr(&quot;rowspan&quot;))){\n                          tds.get(i+1-co).attr(&quot;rowspan&quot;,&quot;&quot;+co+&quot;&quot;);\n                          co = 1;\n                      }\n                  }\n              }\n          }\n          for (Element ele : tds) {\n              System.out.println(ele.attr(&quot;rowspan&quot;));\n              if (!&quot;noMerge&quot;.equals(ele.parent().attr(&quot;class&quot;))&amp;&amp;StringUtils.isEmpty(ele.attr(&quot;rowspan&quot;))){\n                  ele.attr(&quot;display&quot;,&quot;none&quot;);\n              }\n          }\n      }\n      for (Element s : table.select(&quot;tr&quot;)) {\n          for (Element d:s.select(&quot;td&quot;)) {\n              if(&quot;none&quot;.equals(d.attr(&quot;display&quot;))){\n                  d.remove();\n              }\n          }\n      }\n      return table;\n  }\n</code></pre><h2 id=\"效果图前后对比\"><a href=\"#效果图前后对比\" class=\"headerlink\" title=\"效果图前后对比\"></a>效果图前后对比</h2><p>合并前<br><img src=\"/paste/pasted-4.png\" alt=\"upload successful\"></p>\n<p>合并后<br><img src=\"/paste/pasted-5.png\" alt=\"upload successful\"></p>\n"},{"title":"jvm调试- tomcat假死-优化tomcat配置","author":"zjy","date":"2017-09-15T08:34:00.000Z","_content":"## 查看111某id相关的子线程\n\tps -Lf 29295|wc -l\n   \n## 查看 jvm线程情况\n\tjstack pid \n    jstack pid >1.txt (输出到文件)\n    \n通过以上命令，发现，大多数线程处于  time_wating状态的线程占了 90%  .分析发现是程序代码有问题，对异常链接没有显示释放关闭等操作，才导致一旦出错，这个线程就一直不释放，线程数量一直增加。  \n    \n## 查看tcp ip 线程链接情况\nnetstat -np | grep tcp\n统计\nnetstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}' \n\n## 删除docker某个镜像的相关容器\n\tsudo docker ps -a | awk '{ print $1,$2 }' | grep  这里是镜像的名称/或者id| awk '{print $1 }' | xargs -I {} sudo docker rm {}\n    \n\n\n## 问题\n\t\t线上tomcat总是假死：所谓假死，就是tomcat进程并没有关闭，并且也没有异常日志，一切看似正常，但是tomcat就是访问不到，不是找不到地址，而是响应超时超时超时!\n        通过 \n        ps -ef|grep tomcat\n\t\tps -Lf pid|wc -l \n\t\t查看到tomcat的当前正在访问的子线程数量大于 server.xml里配置的最大线程数量。这才导致了项目访问不到，因为前面有线程一直在等待，并没有关闭，tomcat不会为新来的链接分配资源，导致新来的客户端访问得不到响应，才是超时。试想如果tomcat真的挂了，也不会是超时，而是地址错误等提示了。\n\n### 分析一下 server.xml（以下是修改后的server.xml）\n\n\t<?xml version='1.0' encoding='utf-8'?> \n    <Server port=\"8003\" shutdown=\"SHUTDOWN\">\n      <Listener className=\"org.apache.catalina.startup.VersionLoggerListener\" /> \n      <Listener className=\"org.apache.catalina.core.AprLifecycleListener\" SSLEngine=\"on\" /> \n      <Listener className=\"org.apache.catalina.core.JasperListener\" /> \n      <Listener className=\"org.apache.catalina.core.JreMemoryLeakPreventionListener\" />\n      <Listener className=\"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener\" />\n      <Listener className=\"org.apache.catalina.core.ThreadLocalLeakPreventionListener\" />\n\n      <GlobalNamingResources> \n        <Resource name=\"UserDatabase\" auth=\"Container\"\n                  type=\"org.apache.catalina.UserDatabase\"\n                  description=\"User database that can be updated and saved\"\n                  factory=\"org.apache.catalina.users.MemoryUserDatabaseFactory\"\n                  pathname=\"conf/tomcat-users.xml\" />\n      </GlobalNamingResources> \n      <Service name=\"Catalina\"> \n      \n      // 这个节点是打开tomcat线程池，接下来的connector里面应用它\n          <Executor name=\"tomcatThreadPool\" namePrefix=\"catalina-exec-\"  \n          maxThreads=\"1000\" minSpareThreads=\"50\" maxIdleTime=\"600000\"/> \n\n\t//这里主要除了应用executor，还得注意一下protocol\n        <Connector port=\"10003\" connectionTimeout=\"20000\"\n                   redirectPort=\"8443\" maxThreads=\"3000\" acceptCount=\"3000\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\" executor=\"tomcatThreadPool\" />\n\n        <Connector port=\"8030\" protocol=\"AJP/1.3\" redirectPort=\"8443\" />\n\n\n        <Engine name=\"Catalina\" defaultHost=\"localhost\">\n\n\n          <Realm className=\"org.apache.catalina.realm.LockOutRealm\">\n\n            <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"\n                   resourceName=\"UserDatabase\"/>\n          </Realm>\n\n          <Host name=\"localhost\"  appBase=\"webapps\"\n                unpackWARs=\"true\" autoDeploy=\"true\">\n\n            <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n                   prefix=\"localhost_access_log.\" suffix=\".txt\"\n                   pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n\n          </Host>\n        </Engine>\n      </Service>\n    </Server>\n    \n    \n ### 对tomcat简单分析\n \n### tomcat线程配置\n\n1 打开/conf/server.xml文件，在Connector之前配置一个线程池：\n \n\t<Executor name=\"tomcatThreadPool\"   \n        namePrefix=\"tomcatThreadPool-\"   \n        maxThreads=\"1000\"   \n        maxIdleTime=\"300000\"  \n        minSpareThreads=\"200\"/>  \n        \n        \n    重要参数说明：\n        name：共享线程池的名字。这是Connector为了共享线程池要引用的名字，该名字必须唯一。默认值：None；\n\n        namePrefix:在JVM上，每个运行线程都可以有一个name 字符串。这一属性为线程池中每个线程的name字符串设置了一个前缀，Tomcat将把线程号追加到这一前缀的后面。默认值：tomcat-exec-；\n\n        maxThreads：该线程池可以容纳的最大线程数。默认值：200；\n\n        maxIdleTime：在Tomcat关闭一个空闲线程之前，允许空闲线程持续的时间(以毫秒为单位)。只有当前活跃的线程数大于minSpareThread的值，才会关闭空闲线程。默认值：60000(一分钟)。\n\n        minSpareThreads：Tomcat应该始终打开的最小不活跃线程数。默认值：25。\n\n\n2：配置Connector\n\n    <Connector executor=\"tomcatThreadPool\"  \n               port=\"8080\" protocol=\"HTTP/1.1\"  \n                   connectionTimeout=\"20000\"  \n                   redirectPort=\"8443\"   \n               minProcessors=\"5\"  \n               maxProcessors=\"75\"  \n               acceptCount=\"1000\"/>  \n\n\n\t重要参数说明：\n          executor：表示使用该参数值对应的线程池；\n\n          minProcessors：服务器启动时创建的处理请求的线程数；\n\n          maxProcessors：最大可以创建的处理请求的线程数；\n\n          acceptCount：指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理。\n          \n\n #### Tomcat Connector(连接器)有三种运行模式：bio   nio    apr\n \n \n 1 、bio(blocking I/O)\n\n\t\t 配置方式：protocol=\"HTTP/1.1\"\n         \n\t\t即阻塞式I/O操作，表示Tomcat使用的是传统的Java I/O操作(即java.io包及其子包)。是基于JAVA的HTTP/1.1连接器，Tomcat7以下版本在默认情况下是以bio模式运行的。一般而言，bio模式是三种运行模式中性能最低的一种。我们可以通过Tomcat Manager来查看服务器的当前状态。（Tomcat7 或以下，在 Linux 系统中默认使用这种方式）\n\n\t\t一个线程处理一个请求，缺点：并发量高时，线程数较多，浪费资源\n        \n        \n2、nio(new I/O)\n\n\t\t配置方式：protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n        是Java SE 1.4及后续版本提供的一种新的I/O操作方式(即java.nio包及其子包)。Java nio是一个基于缓冲区、并能提供非阻塞I/O操作的Java API，因此nio也被看成是non-blocking I/O的缩写。它拥有比传统I/O操作(bio)更好的并发运行性能。要让Tomcat以nio模式来运行只需要在Tomcat安装目录/conf/server.xml 中将对应的中protocol的属性值改为 org.apache.coyote.http11.Http11NioProtocol即可\n\t\t利用 Java 的异步请求 IO 处理，可以通过少量的线程处理大量的请求\n\t\t注意： Tomcat8 以上版本在 Linux 系统中，默认使用的就是NIO模式，不需要额外修改 ，Tomcat7必须修改Connector配置来启动\n    \n    \n3、apr(Apache Portable Runtime/Apache可移植运行时) （ 安装配置过程相对复杂）\n\n\t\tTomcat将以JNI的形式调用Apache HTTP服务器的核心动态链接库来处理文件读取或网络传输操作，从而大大地提高Tomcat对静态文件的处理性能。Tomcat apr也是在Tomcat上运行高并发应用的首选模式。从操作系统级别来解决异步的IO问题\n\n\t\tAPR是使用原生C语言编写的非堵塞I/O，利用了操作系统的网络连接功能，速度很快。 \n\t\t但是需先安装apr和native，若直接启动就支持apr，能大幅度提升性能，不亚于魔兽开局爆高科技兵种，威力强大\n\t\tTomcat apr的配置需要以下三个组件的支持：\n\n   \t1 APR library\n    \n   \t2 JNI wrappers for APR used by Tomcat(libtcnative)[简单地说，就是自带的tomcat-native]\n\n   \t3 OpenSSL libraries \n    \n\t\t与配置nio运行模式一样，也需要将对应Connector的protocol属性值改为 org.apache.coyote.http11.Http11AprProtocol\n\n\t\tserver.xml 文件中的配置\n\n            <Connector port=\"8080\" protocol=\"org.apache.coyote.http11.Http11AprProtocol\"\n            URIEncoding=\"UTF-8\"\n            maxConnections=\"10000\"\n            maxThreads=\"2000\"\n            acceptCount=\"2000\"\n            minSpareThreads=\"100\"\n            compression=\"on\"\n            compressionMinSize=\"2048\"\n            compressableMimeType=\"text/html,text/xml,text/javascript,text/css,text/plain\"\n            enableLookups=\"false\"\n            disableUploadTimeout=\"true\"\n            connectionTimeout=\"20000\"\n            redirectPort=\"8443\" />\n\n    \n    \n   3.1\n    \t配置之前首先安装APR以及与 Tomcat-native 整合（之前先安装依赖）\n      APR及APR依赖的下载\n\n\t\tAPR下载：http://apr.apache.org/download.cgi\n        \n\n        \n①安装apr\n\n      1 在目录/opt/apr/apr-1.5.2 下执行\n       ./configure --prefix=/usr/local/apr\n\n      2 make\n\n      3 make install\n② 安装 apr-iconv\n\n     1  /opt/apr/apr-iconv-1.2.1\n       ./configure --prefix=/usr/local/apr-iconv --with-apr=/usr/local/apr\n\n    2 make\n\n    3 make install\n③ 安装apr-util\n\n    1 ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr --with-apr-iconv=/usr/local/apr-iconv/bin/apriconv\n\n    2 make\n\n    3 make install\n    \n ④安装tomcat-native \n \n \t不需要下载，tomcat自带 在bin下面 tomcat-native.tar.gz这个文件\n \t\n    1 tar -zxvf tomcat-native.tar.gz\n    2 cd tomcat-native-1.1.33-src/jni/native\n    3 ./configure --with-apr = /usr/local/apr\n    4 make\n    5 make install\n    \n    \n ⑤ 配置APR的环境变量\n\n    vim /opt/tomcat7/bin/catalina.sh\n\n    编辑添加如下内容\n\n    以下内容粘在开头（表示一启动就执行）\n\n    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/apr/lib export LD_LIBRARY_PATH\n","source":"_posts/jvm调试.md","raw":"title: jvm调试- tomcat假死-优化tomcat配置\nauthor: zjy\ntags: [a]\ncategories: [a]\ndate: 2017-09-15 16:34:00\n---\n## 查看111某id相关的子线程\n\tps -Lf 29295|wc -l\n   \n## 查看 jvm线程情况\n\tjstack pid \n    jstack pid >1.txt (输出到文件)\n    \n通过以上命令，发现，大多数线程处于  time_wating状态的线程占了 90%  .分析发现是程序代码有问题，对异常链接没有显示释放关闭等操作，才导致一旦出错，这个线程就一直不释放，线程数量一直增加。  \n    \n## 查看tcp ip 线程链接情况\nnetstat -np | grep tcp\n统计\nnetstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}' \n\n## 删除docker某个镜像的相关容器\n\tsudo docker ps -a | awk '{ print $1,$2 }' | grep  这里是镜像的名称/或者id| awk '{print $1 }' | xargs -I {} sudo docker rm {}\n    \n\n\n## 问题\n\t\t线上tomcat总是假死：所谓假死，就是tomcat进程并没有关闭，并且也没有异常日志，一切看似正常，但是tomcat就是访问不到，不是找不到地址，而是响应超时超时超时!\n        通过 \n        ps -ef|grep tomcat\n\t\tps -Lf pid|wc -l \n\t\t查看到tomcat的当前正在访问的子线程数量大于 server.xml里配置的最大线程数量。这才导致了项目访问不到，因为前面有线程一直在等待，并没有关闭，tomcat不会为新来的链接分配资源，导致新来的客户端访问得不到响应，才是超时。试想如果tomcat真的挂了，也不会是超时，而是地址错误等提示了。\n\n### 分析一下 server.xml（以下是修改后的server.xml）\n\n\t<?xml version='1.0' encoding='utf-8'?> \n    <Server port=\"8003\" shutdown=\"SHUTDOWN\">\n      <Listener className=\"org.apache.catalina.startup.VersionLoggerListener\" /> \n      <Listener className=\"org.apache.catalina.core.AprLifecycleListener\" SSLEngine=\"on\" /> \n      <Listener className=\"org.apache.catalina.core.JasperListener\" /> \n      <Listener className=\"org.apache.catalina.core.JreMemoryLeakPreventionListener\" />\n      <Listener className=\"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener\" />\n      <Listener className=\"org.apache.catalina.core.ThreadLocalLeakPreventionListener\" />\n\n      <GlobalNamingResources> \n        <Resource name=\"UserDatabase\" auth=\"Container\"\n                  type=\"org.apache.catalina.UserDatabase\"\n                  description=\"User database that can be updated and saved\"\n                  factory=\"org.apache.catalina.users.MemoryUserDatabaseFactory\"\n                  pathname=\"conf/tomcat-users.xml\" />\n      </GlobalNamingResources> \n      <Service name=\"Catalina\"> \n      \n      // 这个节点是打开tomcat线程池，接下来的connector里面应用它\n          <Executor name=\"tomcatThreadPool\" namePrefix=\"catalina-exec-\"  \n          maxThreads=\"1000\" minSpareThreads=\"50\" maxIdleTime=\"600000\"/> \n\n\t//这里主要除了应用executor，还得注意一下protocol\n        <Connector port=\"10003\" connectionTimeout=\"20000\"\n                   redirectPort=\"8443\" maxThreads=\"3000\" acceptCount=\"3000\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\" executor=\"tomcatThreadPool\" />\n\n        <Connector port=\"8030\" protocol=\"AJP/1.3\" redirectPort=\"8443\" />\n\n\n        <Engine name=\"Catalina\" defaultHost=\"localhost\">\n\n\n          <Realm className=\"org.apache.catalina.realm.LockOutRealm\">\n\n            <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"\n                   resourceName=\"UserDatabase\"/>\n          </Realm>\n\n          <Host name=\"localhost\"  appBase=\"webapps\"\n                unpackWARs=\"true\" autoDeploy=\"true\">\n\n            <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n                   prefix=\"localhost_access_log.\" suffix=\".txt\"\n                   pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n\n          </Host>\n        </Engine>\n      </Service>\n    </Server>\n    \n    \n ### 对tomcat简单分析\n \n### tomcat线程配置\n\n1 打开/conf/server.xml文件，在Connector之前配置一个线程池：\n \n\t<Executor name=\"tomcatThreadPool\"   \n        namePrefix=\"tomcatThreadPool-\"   \n        maxThreads=\"1000\"   \n        maxIdleTime=\"300000\"  \n        minSpareThreads=\"200\"/>  \n        \n        \n    重要参数说明：\n        name：共享线程池的名字。这是Connector为了共享线程池要引用的名字，该名字必须唯一。默认值：None；\n\n        namePrefix:在JVM上，每个运行线程都可以有一个name 字符串。这一属性为线程池中每个线程的name字符串设置了一个前缀，Tomcat将把线程号追加到这一前缀的后面。默认值：tomcat-exec-；\n\n        maxThreads：该线程池可以容纳的最大线程数。默认值：200；\n\n        maxIdleTime：在Tomcat关闭一个空闲线程之前，允许空闲线程持续的时间(以毫秒为单位)。只有当前活跃的线程数大于minSpareThread的值，才会关闭空闲线程。默认值：60000(一分钟)。\n\n        minSpareThreads：Tomcat应该始终打开的最小不活跃线程数。默认值：25。\n\n\n2：配置Connector\n\n    <Connector executor=\"tomcatThreadPool\"  \n               port=\"8080\" protocol=\"HTTP/1.1\"  \n                   connectionTimeout=\"20000\"  \n                   redirectPort=\"8443\"   \n               minProcessors=\"5\"  \n               maxProcessors=\"75\"  \n               acceptCount=\"1000\"/>  \n\n\n\t重要参数说明：\n          executor：表示使用该参数值对应的线程池；\n\n          minProcessors：服务器启动时创建的处理请求的线程数；\n\n          maxProcessors：最大可以创建的处理请求的线程数；\n\n          acceptCount：指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理。\n          \n\n #### Tomcat Connector(连接器)有三种运行模式：bio   nio    apr\n \n \n 1 、bio(blocking I/O)\n\n\t\t 配置方式：protocol=\"HTTP/1.1\"\n         \n\t\t即阻塞式I/O操作，表示Tomcat使用的是传统的Java I/O操作(即java.io包及其子包)。是基于JAVA的HTTP/1.1连接器，Tomcat7以下版本在默认情况下是以bio模式运行的。一般而言，bio模式是三种运行模式中性能最低的一种。我们可以通过Tomcat Manager来查看服务器的当前状态。（Tomcat7 或以下，在 Linux 系统中默认使用这种方式）\n\n\t\t一个线程处理一个请求，缺点：并发量高时，线程数较多，浪费资源\n        \n        \n2、nio(new I/O)\n\n\t\t配置方式：protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n        是Java SE 1.4及后续版本提供的一种新的I/O操作方式(即java.nio包及其子包)。Java nio是一个基于缓冲区、并能提供非阻塞I/O操作的Java API，因此nio也被看成是non-blocking I/O的缩写。它拥有比传统I/O操作(bio)更好的并发运行性能。要让Tomcat以nio模式来运行只需要在Tomcat安装目录/conf/server.xml 中将对应的中protocol的属性值改为 org.apache.coyote.http11.Http11NioProtocol即可\n\t\t利用 Java 的异步请求 IO 处理，可以通过少量的线程处理大量的请求\n\t\t注意： Tomcat8 以上版本在 Linux 系统中，默认使用的就是NIO模式，不需要额外修改 ，Tomcat7必须修改Connector配置来启动\n    \n    \n3、apr(Apache Portable Runtime/Apache可移植运行时) （ 安装配置过程相对复杂）\n\n\t\tTomcat将以JNI的形式调用Apache HTTP服务器的核心动态链接库来处理文件读取或网络传输操作，从而大大地提高Tomcat对静态文件的处理性能。Tomcat apr也是在Tomcat上运行高并发应用的首选模式。从操作系统级别来解决异步的IO问题\n\n\t\tAPR是使用原生C语言编写的非堵塞I/O，利用了操作系统的网络连接功能，速度很快。 \n\t\t但是需先安装apr和native，若直接启动就支持apr，能大幅度提升性能，不亚于魔兽开局爆高科技兵种，威力强大\n\t\tTomcat apr的配置需要以下三个组件的支持：\n\n   \t1 APR library\n    \n   \t2 JNI wrappers for APR used by Tomcat(libtcnative)[简单地说，就是自带的tomcat-native]\n\n   \t3 OpenSSL libraries \n    \n\t\t与配置nio运行模式一样，也需要将对应Connector的protocol属性值改为 org.apache.coyote.http11.Http11AprProtocol\n\n\t\tserver.xml 文件中的配置\n\n            <Connector port=\"8080\" protocol=\"org.apache.coyote.http11.Http11AprProtocol\"\n            URIEncoding=\"UTF-8\"\n            maxConnections=\"10000\"\n            maxThreads=\"2000\"\n            acceptCount=\"2000\"\n            minSpareThreads=\"100\"\n            compression=\"on\"\n            compressionMinSize=\"2048\"\n            compressableMimeType=\"text/html,text/xml,text/javascript,text/css,text/plain\"\n            enableLookups=\"false\"\n            disableUploadTimeout=\"true\"\n            connectionTimeout=\"20000\"\n            redirectPort=\"8443\" />\n\n    \n    \n   3.1\n    \t配置之前首先安装APR以及与 Tomcat-native 整合（之前先安装依赖）\n      APR及APR依赖的下载\n\n\t\tAPR下载：http://apr.apache.org/download.cgi\n        \n\n        \n①安装apr\n\n      1 在目录/opt/apr/apr-1.5.2 下执行\n       ./configure --prefix=/usr/local/apr\n\n      2 make\n\n      3 make install\n② 安装 apr-iconv\n\n     1  /opt/apr/apr-iconv-1.2.1\n       ./configure --prefix=/usr/local/apr-iconv --with-apr=/usr/local/apr\n\n    2 make\n\n    3 make install\n③ 安装apr-util\n\n    1 ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr --with-apr-iconv=/usr/local/apr-iconv/bin/apriconv\n\n    2 make\n\n    3 make install\n    \n ④安装tomcat-native \n \n \t不需要下载，tomcat自带 在bin下面 tomcat-native.tar.gz这个文件\n \t\n    1 tar -zxvf tomcat-native.tar.gz\n    2 cd tomcat-native-1.1.33-src/jni/native\n    3 ./configure --with-apr = /usr/local/apr\n    4 make\n    5 make install\n    \n    \n ⑤ 配置APR的环境变量\n\n    vim /opt/tomcat7/bin/catalina.sh\n\n    编辑添加如下内容\n\n    以下内容粘在开头（表示一启动就执行）\n\n    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/apr/lib export LD_LIBRARY_PATH\n","slug":"jvm调试","published":1,"updated":"2017-12-26T03:02:56.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eqj000tawpfs28uodjm","content":"<h2 id=\"查看111某id相关的子线程\"><a href=\"#查看111某id相关的子线程\" class=\"headerlink\" title=\"查看111某id相关的子线程\"></a>查看111某id相关的子线程</h2><pre><code>ps -Lf 29295|wc -l\n</code></pre><h2 id=\"查看-jvm线程情况\"><a href=\"#查看-jvm线程情况\" class=\"headerlink\" title=\"查看 jvm线程情况\"></a>查看 jvm线程情况</h2><pre><code>jstack pid \njstack pid &gt;1.txt (输出到文件)\n</code></pre><p>通过以上命令，发现，大多数线程处于  time_wating状态的线程占了 90%  .分析发现是程序代码有问题，对异常链接没有显示释放关闭等操作，才导致一旦出错，这个线程就一直不释放，线程数量一直增加。  </p>\n<h2 id=\"查看tcp-ip-线程链接情况\"><a href=\"#查看tcp-ip-线程链接情况\" class=\"headerlink\" title=\"查看tcp ip 线程链接情况\"></a>查看tcp ip 线程链接情况</h2><p>netstat -np | grep tcp<br>统计<br>netstat -n | awk ‘/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}’ </p>\n<h2 id=\"删除docker某个镜像的相关容器\"><a href=\"#删除docker某个镜像的相关容器\" class=\"headerlink\" title=\"删除docker某个镜像的相关容器\"></a>删除docker某个镜像的相关容器</h2><pre><code>sudo docker ps -a | awk &apos;{ print $1,$2 }&apos; | grep  这里是镜像的名称/或者id| awk &apos;{print $1 }&apos; | xargs -I {} sudo docker rm {}\n</code></pre><h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><pre><code>线上tomcat总是假死：所谓假死，就是tomcat进程并没有关闭，并且也没有异常日志，一切看似正常，但是tomcat就是访问不到，不是找不到地址，而是响应超时超时超时!\n通过 \nps -ef|grep tomcat\nps -Lf pid|wc -l \n查看到tomcat的当前正在访问的子线程数量大于 server.xml里配置的最大线程数量。这才导致了项目访问不到，因为前面有线程一直在等待，并没有关闭，tomcat不会为新来的链接分配资源，导致新来的客户端访问得不到响应，才是超时。试想如果tomcat真的挂了，也不会是超时，而是地址错误等提示了。\n</code></pre><h3 id=\"分析一下-server-xml（以下是修改后的server-xml）\"><a href=\"#分析一下-server-xml（以下是修改后的server-xml）\" class=\"headerlink\" title=\"分析一下 server.xml（以下是修改后的server.xml）\"></a>分析一下 server.xml（以下是修改后的server.xml）</h3><pre><code>&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt; \n&lt;Server port=&quot;8003&quot; shutdown=&quot;SHUTDOWN&quot;&gt;\n  &lt;Listener className=&quot;org.apache.catalina.startup.VersionLoggerListener&quot; /&gt; \n  &lt;Listener className=&quot;org.apache.catalina.core.AprLifecycleListener&quot; SSLEngine=&quot;on&quot; /&gt; \n  &lt;Listener className=&quot;org.apache.catalina.core.JasperListener&quot; /&gt; \n  &lt;Listener className=&quot;org.apache.catalina.core.JreMemoryLeakPreventionListener&quot; /&gt;\n  &lt;Listener className=&quot;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&quot; /&gt;\n  &lt;Listener className=&quot;org.apache.catalina.core.ThreadLocalLeakPreventionListener&quot; /&gt;\n\n  &lt;GlobalNamingResources&gt; \n    &lt;Resource name=&quot;UserDatabase&quot; auth=&quot;Container&quot;\n              type=&quot;org.apache.catalina.UserDatabase&quot;\n              description=&quot;User database that can be updated and saved&quot;\n              factory=&quot;org.apache.catalina.users.MemoryUserDatabaseFactory&quot;\n              pathname=&quot;conf/tomcat-users.xml&quot; /&gt;\n  &lt;/GlobalNamingResources&gt; \n  &lt;Service name=&quot;Catalina&quot;&gt; \n\n  // 这个节点是打开tomcat线程池，接下来的connector里面应用它\n      &lt;Executor name=&quot;tomcatThreadPool&quot; namePrefix=&quot;catalina-exec-&quot;  \n      maxThreads=&quot;1000&quot; minSpareThreads=&quot;50&quot; maxIdleTime=&quot;600000&quot;/&gt; \n\n//这里主要除了应用executor，还得注意一下protocol\n    &lt;Connector port=&quot;10003&quot; connectionTimeout=&quot;20000&quot;\n               redirectPort=&quot;8443&quot; maxThreads=&quot;3000&quot; acceptCount=&quot;3000&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot; executor=&quot;tomcatThreadPool&quot; /&gt;\n\n    &lt;Connector port=&quot;8030&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;\n\n\n    &lt;Engine name=&quot;Catalina&quot; defaultHost=&quot;localhost&quot;&gt;\n\n\n      &lt;Realm className=&quot;org.apache.catalina.realm.LockOutRealm&quot;&gt;\n\n        &lt;Realm className=&quot;org.apache.catalina.realm.UserDatabaseRealm&quot;\n               resourceName=&quot;UserDatabase&quot;/&gt;\n      &lt;/Realm&gt;\n\n      &lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps&quot;\n            unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;\n\n        &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;\n               prefix=&quot;localhost_access_log.&quot; suffix=&quot;.txt&quot;\n               pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;\n\n      &lt;/Host&gt;\n    &lt;/Engine&gt;\n  &lt;/Service&gt;\n&lt;/Server&gt;\n</code></pre><h3 id=\"对tomcat简单分析\"><a href=\"#对tomcat简单分析\" class=\"headerlink\" title=\"对tomcat简单分析\"></a>对tomcat简单分析</h3><h3 id=\"tomcat线程配置\"><a href=\"#tomcat线程配置\" class=\"headerlink\" title=\"tomcat线程配置\"></a>tomcat线程配置</h3><p>1 打开/conf/server.xml文件，在Connector之前配置一个线程池：</p>\n<pre><code>&lt;Executor name=&quot;tomcatThreadPool&quot;   \n    namePrefix=&quot;tomcatThreadPool-&quot;   \n    maxThreads=&quot;1000&quot;   \n    maxIdleTime=&quot;300000&quot;  \n    minSpareThreads=&quot;200&quot;/&gt;  \n\n\n重要参数说明：\n    name：共享线程池的名字。这是Connector为了共享线程池要引用的名字，该名字必须唯一。默认值：None；\n\n    namePrefix:在JVM上，每个运行线程都可以有一个name 字符串。这一属性为线程池中每个线程的name字符串设置了一个前缀，Tomcat将把线程号追加到这一前缀的后面。默认值：tomcat-exec-；\n\n    maxThreads：该线程池可以容纳的最大线程数。默认值：200；\n\n    maxIdleTime：在Tomcat关闭一个空闲线程之前，允许空闲线程持续的时间(以毫秒为单位)。只有当前活跃的线程数大于minSpareThread的值，才会关闭空闲线程。默认值：60000(一分钟)。\n\n    minSpareThreads：Tomcat应该始终打开的最小不活跃线程数。默认值：25。\n</code></pre><p>2：配置Connector</p>\n<pre><code>&lt;Connector executor=&quot;tomcatThreadPool&quot;  \n           port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;  \n               connectionTimeout=&quot;20000&quot;  \n               redirectPort=&quot;8443&quot;   \n           minProcessors=&quot;5&quot;  \n           maxProcessors=&quot;75&quot;  \n           acceptCount=&quot;1000&quot;/&gt;  \n\n\n重要参数说明：\n      executor：表示使用该参数值对应的线程池；\n\n      minProcessors：服务器启动时创建的处理请求的线程数；\n\n      maxProcessors：最大可以创建的处理请求的线程数；\n\n      acceptCount：指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理。\n</code></pre><h4 id=\"Tomcat-Connector-连接器-有三种运行模式：bio-nio-apr\"><a href=\"#Tomcat-Connector-连接器-有三种运行模式：bio-nio-apr\" class=\"headerlink\" title=\"Tomcat Connector(连接器)有三种运行模式：bio   nio    apr\"></a>Tomcat Connector(连接器)有三种运行模式：bio   nio    apr</h4><p> 1 、bio(blocking I/O)</p>\n<pre><code> 配置方式：protocol=&quot;HTTP/1.1&quot;\n\n即阻塞式I/O操作，表示Tomcat使用的是传统的Java I/O操作(即java.io包及其子包)。是基于JAVA的HTTP/1.1连接器，Tomcat7以下版本在默认情况下是以bio模式运行的。一般而言，bio模式是三种运行模式中性能最低的一种。我们可以通过Tomcat Manager来查看服务器的当前状态。（Tomcat7 或以下，在 Linux 系统中默认使用这种方式）\n\n一个线程处理一个请求，缺点：并发量高时，线程数较多，浪费资源\n</code></pre><p>2、nio(new I/O)</p>\n<pre><code>配置方式：protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;\n是Java SE 1.4及后续版本提供的一种新的I/O操作方式(即java.nio包及其子包)。Java nio是一个基于缓冲区、并能提供非阻塞I/O操作的Java API，因此nio也被看成是non-blocking I/O的缩写。它拥有比传统I/O操作(bio)更好的并发运行性能。要让Tomcat以nio模式来运行只需要在Tomcat安装目录/conf/server.xml 中将对应的中protocol的属性值改为 org.apache.coyote.http11.Http11NioProtocol即可\n利用 Java 的异步请求 IO 处理，可以通过少量的线程处理大量的请求\n注意： Tomcat8 以上版本在 Linux 系统中，默认使用的就是NIO模式，不需要额外修改 ，Tomcat7必须修改Connector配置来启动\n</code></pre><p>3、apr(Apache Portable Runtime/Apache可移植运行时) （ 安装配置过程相对复杂）</p>\n<pre><code> Tomcat将以JNI的形式调用Apache HTTP服务器的核心动态链接库来处理文件读取或网络传输操作，从而大大地提高Tomcat对静态文件的处理性能。Tomcat apr也是在Tomcat上运行高并发应用的首选模式。从操作系统级别来解决异步的IO问题\n\n APR是使用原生C语言编写的非堵塞I/O，利用了操作系统的网络连接功能，速度很快。 \n 但是需先安装apr和native，若直接启动就支持apr，能大幅度提升性能，不亚于魔兽开局爆高科技兵种，威力强大\n Tomcat apr的配置需要以下三个组件的支持：\n\n1 APR library\n\n2 JNI wrappers for APR used by Tomcat(libtcnative)[简单地说，就是自带的tomcat-native]\n\n3 OpenSSL libraries \n\n 与配置nio运行模式一样，也需要将对应Connector的protocol属性值改为 org.apache.coyote.http11.Http11AprProtocol\n\n server.xml 文件中的配置\n\n     &lt;Connector port=&quot;8080&quot; protocol=&quot;org.apache.coyote.http11.Http11AprProtocol&quot;\n     URIEncoding=&quot;UTF-8&quot;\n     maxConnections=&quot;10000&quot;\n     maxThreads=&quot;2000&quot;\n     acceptCount=&quot;2000&quot;\n     minSpareThreads=&quot;100&quot;\n     compression=&quot;on&quot;\n     compressionMinSize=&quot;2048&quot;\n     compressableMimeType=&quot;text/html,text/xml,text/javascript,text/css,text/plain&quot;\n     enableLookups=&quot;false&quot;\n     disableUploadTimeout=&quot;true&quot;\n     connectionTimeout=&quot;20000&quot;\n     redirectPort=&quot;8443&quot; /&gt;\n</code></pre><p>   3.1<br>        配置之前首先安装APR以及与 Tomcat-native 整合（之前先安装依赖）<br>      APR及APR依赖的下载</p>\n<pre><code>APR下载：http://apr.apache.org/download.cgi\n</code></pre><p>①安装apr</p>\n<pre><code>1 在目录/opt/apr/apr-1.5.2 下执行\n ./configure --prefix=/usr/local/apr\n\n2 make\n\n3 make install\n</code></pre><p>② 安装 apr-iconv</p>\n<pre><code> 1  /opt/apr/apr-iconv-1.2.1\n   ./configure --prefix=/usr/local/apr-iconv --with-apr=/usr/local/apr\n\n2 make\n\n3 make install\n</code></pre><p>③ 安装apr-util</p>\n<pre><code>1 ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr --with-apr-iconv=/usr/local/apr-iconv/bin/apriconv\n\n2 make\n\n3 make install\n</code></pre><p> ④安装tomcat-native </p>\n<pre><code> 不需要下载，tomcat自带 在bin下面 tomcat-native.tar.gz这个文件\n\n1 tar -zxvf tomcat-native.tar.gz\n2 cd tomcat-native-1.1.33-src/jni/native\n3 ./configure --with-apr = /usr/local/apr\n4 make\n5 make install\n</code></pre><p> ⑤ 配置APR的环境变量</p>\n<pre><code>vim /opt/tomcat7/bin/catalina.sh\n\n编辑添加如下内容\n\n以下内容粘在开头（表示一启动就执行）\n\nLD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/apr/lib export LD_LIBRARY_PATH\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"查看111某id相关的子线程\"><a href=\"#查看111某id相关的子线程\" class=\"headerlink\" title=\"查看111某id相关的子线程\"></a>查看111某id相关的子线程</h2><pre><code>ps -Lf 29295|wc -l\n</code></pre><h2 id=\"查看-jvm线程情况\"><a href=\"#查看-jvm线程情况\" class=\"headerlink\" title=\"查看 jvm线程情况\"></a>查看 jvm线程情况</h2><pre><code>jstack pid \njstack pid &gt;1.txt (输出到文件)\n</code></pre><p>通过以上命令，发现，大多数线程处于  time_wating状态的线程占了 90%  .分析发现是程序代码有问题，对异常链接没有显示释放关闭等操作，才导致一旦出错，这个线程就一直不释放，线程数量一直增加。  </p>\n<h2 id=\"查看tcp-ip-线程链接情况\"><a href=\"#查看tcp-ip-线程链接情况\" class=\"headerlink\" title=\"查看tcp ip 线程链接情况\"></a>查看tcp ip 线程链接情况</h2><p>netstat -np | grep tcp<br>统计<br>netstat -n | awk ‘/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}’ </p>\n<h2 id=\"删除docker某个镜像的相关容器\"><a href=\"#删除docker某个镜像的相关容器\" class=\"headerlink\" title=\"删除docker某个镜像的相关容器\"></a>删除docker某个镜像的相关容器</h2><pre><code>sudo docker ps -a | awk &apos;{ print $1,$2 }&apos; | grep  这里是镜像的名称/或者id| awk &apos;{print $1 }&apos; | xargs -I {} sudo docker rm {}\n</code></pre><h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><pre><code>线上tomcat总是假死：所谓假死，就是tomcat进程并没有关闭，并且也没有异常日志，一切看似正常，但是tomcat就是访问不到，不是找不到地址，而是响应超时超时超时!\n通过 \nps -ef|grep tomcat\nps -Lf pid|wc -l \n查看到tomcat的当前正在访问的子线程数量大于 server.xml里配置的最大线程数量。这才导致了项目访问不到，因为前面有线程一直在等待，并没有关闭，tomcat不会为新来的链接分配资源，导致新来的客户端访问得不到响应，才是超时。试想如果tomcat真的挂了，也不会是超时，而是地址错误等提示了。\n</code></pre><h3 id=\"分析一下-server-xml（以下是修改后的server-xml）\"><a href=\"#分析一下-server-xml（以下是修改后的server-xml）\" class=\"headerlink\" title=\"分析一下 server.xml（以下是修改后的server.xml）\"></a>分析一下 server.xml（以下是修改后的server.xml）</h3><pre><code>&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt; \n&lt;Server port=&quot;8003&quot; shutdown=&quot;SHUTDOWN&quot;&gt;\n  &lt;Listener className=&quot;org.apache.catalina.startup.VersionLoggerListener&quot; /&gt; \n  &lt;Listener className=&quot;org.apache.catalina.core.AprLifecycleListener&quot; SSLEngine=&quot;on&quot; /&gt; \n  &lt;Listener className=&quot;org.apache.catalina.core.JasperListener&quot; /&gt; \n  &lt;Listener className=&quot;org.apache.catalina.core.JreMemoryLeakPreventionListener&quot; /&gt;\n  &lt;Listener className=&quot;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&quot; /&gt;\n  &lt;Listener className=&quot;org.apache.catalina.core.ThreadLocalLeakPreventionListener&quot; /&gt;\n\n  &lt;GlobalNamingResources&gt; \n    &lt;Resource name=&quot;UserDatabase&quot; auth=&quot;Container&quot;\n              type=&quot;org.apache.catalina.UserDatabase&quot;\n              description=&quot;User database that can be updated and saved&quot;\n              factory=&quot;org.apache.catalina.users.MemoryUserDatabaseFactory&quot;\n              pathname=&quot;conf/tomcat-users.xml&quot; /&gt;\n  &lt;/GlobalNamingResources&gt; \n  &lt;Service name=&quot;Catalina&quot;&gt; \n\n  // 这个节点是打开tomcat线程池，接下来的connector里面应用它\n      &lt;Executor name=&quot;tomcatThreadPool&quot; namePrefix=&quot;catalina-exec-&quot;  \n      maxThreads=&quot;1000&quot; minSpareThreads=&quot;50&quot; maxIdleTime=&quot;600000&quot;/&gt; \n\n//这里主要除了应用executor，还得注意一下protocol\n    &lt;Connector port=&quot;10003&quot; connectionTimeout=&quot;20000&quot;\n               redirectPort=&quot;8443&quot; maxThreads=&quot;3000&quot; acceptCount=&quot;3000&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot; executor=&quot;tomcatThreadPool&quot; /&gt;\n\n    &lt;Connector port=&quot;8030&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;\n\n\n    &lt;Engine name=&quot;Catalina&quot; defaultHost=&quot;localhost&quot;&gt;\n\n\n      &lt;Realm className=&quot;org.apache.catalina.realm.LockOutRealm&quot;&gt;\n\n        &lt;Realm className=&quot;org.apache.catalina.realm.UserDatabaseRealm&quot;\n               resourceName=&quot;UserDatabase&quot;/&gt;\n      &lt;/Realm&gt;\n\n      &lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps&quot;\n            unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;\n\n        &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;\n               prefix=&quot;localhost_access_log.&quot; suffix=&quot;.txt&quot;\n               pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;\n\n      &lt;/Host&gt;\n    &lt;/Engine&gt;\n  &lt;/Service&gt;\n&lt;/Server&gt;\n</code></pre><h3 id=\"对tomcat简单分析\"><a href=\"#对tomcat简单分析\" class=\"headerlink\" title=\"对tomcat简单分析\"></a>对tomcat简单分析</h3><h3 id=\"tomcat线程配置\"><a href=\"#tomcat线程配置\" class=\"headerlink\" title=\"tomcat线程配置\"></a>tomcat线程配置</h3><p>1 打开/conf/server.xml文件，在Connector之前配置一个线程池：</p>\n<pre><code>&lt;Executor name=&quot;tomcatThreadPool&quot;   \n    namePrefix=&quot;tomcatThreadPool-&quot;   \n    maxThreads=&quot;1000&quot;   \n    maxIdleTime=&quot;300000&quot;  \n    minSpareThreads=&quot;200&quot;/&gt;  \n\n\n重要参数说明：\n    name：共享线程池的名字。这是Connector为了共享线程池要引用的名字，该名字必须唯一。默认值：None；\n\n    namePrefix:在JVM上，每个运行线程都可以有一个name 字符串。这一属性为线程池中每个线程的name字符串设置了一个前缀，Tomcat将把线程号追加到这一前缀的后面。默认值：tomcat-exec-；\n\n    maxThreads：该线程池可以容纳的最大线程数。默认值：200；\n\n    maxIdleTime：在Tomcat关闭一个空闲线程之前，允许空闲线程持续的时间(以毫秒为单位)。只有当前活跃的线程数大于minSpareThread的值，才会关闭空闲线程。默认值：60000(一分钟)。\n\n    minSpareThreads：Tomcat应该始终打开的最小不活跃线程数。默认值：25。\n</code></pre><p>2：配置Connector</p>\n<pre><code>&lt;Connector executor=&quot;tomcatThreadPool&quot;  \n           port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;  \n               connectionTimeout=&quot;20000&quot;  \n               redirectPort=&quot;8443&quot;   \n           minProcessors=&quot;5&quot;  \n           maxProcessors=&quot;75&quot;  \n           acceptCount=&quot;1000&quot;/&gt;  \n\n\n重要参数说明：\n      executor：表示使用该参数值对应的线程池；\n\n      minProcessors：服务器启动时创建的处理请求的线程数；\n\n      maxProcessors：最大可以创建的处理请求的线程数；\n\n      acceptCount：指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理。\n</code></pre><h4 id=\"Tomcat-Connector-连接器-有三种运行模式：bio-nio-apr\"><a href=\"#Tomcat-Connector-连接器-有三种运行模式：bio-nio-apr\" class=\"headerlink\" title=\"Tomcat Connector(连接器)有三种运行模式：bio   nio    apr\"></a>Tomcat Connector(连接器)有三种运行模式：bio   nio    apr</h4><p> 1 、bio(blocking I/O)</p>\n<pre><code> 配置方式：protocol=&quot;HTTP/1.1&quot;\n\n即阻塞式I/O操作，表示Tomcat使用的是传统的Java I/O操作(即java.io包及其子包)。是基于JAVA的HTTP/1.1连接器，Tomcat7以下版本在默认情况下是以bio模式运行的。一般而言，bio模式是三种运行模式中性能最低的一种。我们可以通过Tomcat Manager来查看服务器的当前状态。（Tomcat7 或以下，在 Linux 系统中默认使用这种方式）\n\n一个线程处理一个请求，缺点：并发量高时，线程数较多，浪费资源\n</code></pre><p>2、nio(new I/O)</p>\n<pre><code>配置方式：protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;\n是Java SE 1.4及后续版本提供的一种新的I/O操作方式(即java.nio包及其子包)。Java nio是一个基于缓冲区、并能提供非阻塞I/O操作的Java API，因此nio也被看成是non-blocking I/O的缩写。它拥有比传统I/O操作(bio)更好的并发运行性能。要让Tomcat以nio模式来运行只需要在Tomcat安装目录/conf/server.xml 中将对应的中protocol的属性值改为 org.apache.coyote.http11.Http11NioProtocol即可\n利用 Java 的异步请求 IO 处理，可以通过少量的线程处理大量的请求\n注意： Tomcat8 以上版本在 Linux 系统中，默认使用的就是NIO模式，不需要额外修改 ，Tomcat7必须修改Connector配置来启动\n</code></pre><p>3、apr(Apache Portable Runtime/Apache可移植运行时) （ 安装配置过程相对复杂）</p>\n<pre><code> Tomcat将以JNI的形式调用Apache HTTP服务器的核心动态链接库来处理文件读取或网络传输操作，从而大大地提高Tomcat对静态文件的处理性能。Tomcat apr也是在Tomcat上运行高并发应用的首选模式。从操作系统级别来解决异步的IO问题\n\n APR是使用原生C语言编写的非堵塞I/O，利用了操作系统的网络连接功能，速度很快。 \n 但是需先安装apr和native，若直接启动就支持apr，能大幅度提升性能，不亚于魔兽开局爆高科技兵种，威力强大\n Tomcat apr的配置需要以下三个组件的支持：\n\n1 APR library\n\n2 JNI wrappers for APR used by Tomcat(libtcnative)[简单地说，就是自带的tomcat-native]\n\n3 OpenSSL libraries \n\n 与配置nio运行模式一样，也需要将对应Connector的protocol属性值改为 org.apache.coyote.http11.Http11AprProtocol\n\n server.xml 文件中的配置\n\n     &lt;Connector port=&quot;8080&quot; protocol=&quot;org.apache.coyote.http11.Http11AprProtocol&quot;\n     URIEncoding=&quot;UTF-8&quot;\n     maxConnections=&quot;10000&quot;\n     maxThreads=&quot;2000&quot;\n     acceptCount=&quot;2000&quot;\n     minSpareThreads=&quot;100&quot;\n     compression=&quot;on&quot;\n     compressionMinSize=&quot;2048&quot;\n     compressableMimeType=&quot;text/html,text/xml,text/javascript,text/css,text/plain&quot;\n     enableLookups=&quot;false&quot;\n     disableUploadTimeout=&quot;true&quot;\n     connectionTimeout=&quot;20000&quot;\n     redirectPort=&quot;8443&quot; /&gt;\n</code></pre><p>   3.1<br>        配置之前首先安装APR以及与 Tomcat-native 整合（之前先安装依赖）<br>      APR及APR依赖的下载</p>\n<pre><code>APR下载：http://apr.apache.org/download.cgi\n</code></pre><p>①安装apr</p>\n<pre><code>1 在目录/opt/apr/apr-1.5.2 下执行\n ./configure --prefix=/usr/local/apr\n\n2 make\n\n3 make install\n</code></pre><p>② 安装 apr-iconv</p>\n<pre><code> 1  /opt/apr/apr-iconv-1.2.1\n   ./configure --prefix=/usr/local/apr-iconv --with-apr=/usr/local/apr\n\n2 make\n\n3 make install\n</code></pre><p>③ 安装apr-util</p>\n<pre><code>1 ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr --with-apr-iconv=/usr/local/apr-iconv/bin/apriconv\n\n2 make\n\n3 make install\n</code></pre><p> ④安装tomcat-native </p>\n<pre><code> 不需要下载，tomcat自带 在bin下面 tomcat-native.tar.gz这个文件\n\n1 tar -zxvf tomcat-native.tar.gz\n2 cd tomcat-native-1.1.33-src/jni/native\n3 ./configure --with-apr = /usr/local/apr\n4 make\n5 make install\n</code></pre><p> ⑤ 配置APR的环境变量</p>\n<pre><code>vim /opt/tomcat7/bin/catalina.sh\n\n编辑添加如下内容\n\n以下内容粘在开头（表示一启动就执行）\n\nLD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/apr/lib export LD_LIBRARY_PATH\n</code></pre>"},{"title":"mybatis-generator 源码浅析与修改","author":"zjy","date":"2017-12-15T06:42:59.000Z","_content":"# mybatis-generator 简介\n\t\tMybatis属于半自动ORM，在使用这个框架中，工作量最大的就是书写Mapping的映射文件，由于手动书写很容易出错，我们可以利用Mybatis-Generator来帮我们自动生成文件。项目中常用的：\n         StudentExample example = new StudentExample();\n         StudentExample.Criteria criteria = example.createCriteria();\n         deleteByExample\n         insert\n         insertSelective\t\n         selectByExample ..等等诸如此类的方法，均是通过mybatis-genenrator可以自动生成的 使得开发起来很方便。\n         mybatis-generator 生成的sql xml几乎涵盖了单表的所有增删改查方法。很方便\n         \n# mybatis-generator 问题\n（mybatis-generator默认合并指的是 123 ， 234 合并完 是 123234，而我们需要的结果是1234）\n\t\t\n       1  生成一次 CourseMapper.java,CourseMapper.xml等文件。\n       2  现在需要加个批量插入方法，在CouseMapper.java里加  \n           public int batchInsert(List<Course> list);\n           在CourseMapper.xml里加\n             <insert id=\"batchInsert\" parameterType=\"cc.gukeer.smartBoard.persistence.entity.Course\">\n                your sql\n             </insert>\n       3  现在数据库加了个字段a，需要对文件再次生成  我们发现，xml里面，updateByPrimaryKey 这样的方法再次生成了一次，而且CourseMapper.java里 的batchInsert 这个方法已经没有了。之前写的代码也就被覆盖了或者出现了问题。我们必须得回滚。。\n           \n       4 为了解决这个问题，我们不得不扩展 CourseMapper.xml \n       写 A_CourseMapper.xml 对应 CourseMapper.xml \n       写 A_CourseMapper.xml 对应 CourseMapper.xml\n       并把我们的批量方法写到A_***里面，这样再次生成就不会被覆盖了。那么问题来了：\n       \n![logo](common/images/mybatis_mapper.png)\n\t\t\t\n       从图中可以看到，这无疑使得我们的文件更繁多，维护更加复杂。\n       \n       \n# 问题解决-xml合并\n    出现这个问题的原因，我们主要来看一下generator的源码：\n    org.mybatis.generator.api.MyBatisGenerator 的generate方法，是生成文件的一个入口。\n    \n    \n    for (GeneratedXmlFile gxf : this.generatedXmlFiles){\n      this.projects.add(gxf.getTargetProject());\n      File targetFile;\n      String source;\n      try{\n        File directory = this.shellCallback.getDirectory(gxf.getTargetProject(), gxf.getTargetPackage());\n        targetFile = new File(directory, gxf.getFileName());\n        if (targetFile.exists()){\n          String source;\n          if (gxf.isMergeable()){\n            source = XmlFileMergerJaxp.getMergedSource(gxf, targetFile);\n          }else if (this.shellCallback.isOverwriteEnabled()){\n            String source = gxf.getFormattedContent();\n            this.warnings.add(Messages.getString(\"Warning.11\", targetFile.getAbsolutePath()));\n          }else{\n          String source = gxf.getFormattedContent();\n            targetFile = getUniqueFileName(directory, gxf.getFileName());\n            this.warnings.add(Messages.getString(\"Warning.2\", targetFile.getAbsolutePath()));\n          }\n        }\n        \n        \n  其中 有对gxf（GeneratedXmlFile） 是否合并判断，如果合并true，将新旧xml通过这个方法合并取合并得到的结果字符串，写到新的文件中。 XmlFileMergerJaxp.getMergedSource \n        \n XmlFileMergerJaxp.getMergedSource 部分代码如下：\n \n        DocumentType newDocType = newDocument.getDoctype();\n        ...\n        List<Node> nodesToDelete = new ArrayList();\n        NodeList children = existingRootElement.getChildNodes();\n        int length = children.getLength();\n        for (int i = 0; i < length; i++)\n      {\n        Node node = children.item(i);\n        if (isGeneratedNode(node)) {\n          nodesToDelete.add(node);\n        } else if ((isWhiteSpace(node)) && (isGeneratedNode(children.item(i + 1)))) {\n          nodesToDelete.add(node);\n        }\n      }\n      for (Node node : nodesToDelete) {\n        existingRootElement.removeChild(node);\n      }\n这里采用的是org.w3c.dom.* 来解析的新旧xml文件。我们发现，这里有对旧文件遍历，判断这个节点方法是否已经生成过。如果是已经生成 isGeneratedNode的节点，那么加入到 nodesToDelete里面，最后把它给移除。那么问题就出在这个 isGeneratedNode判断方法上\n\n\t\tprivate static boolean isGeneratedNode(Node node)\n    {\n      boolean rc = false;\n      if ((node != null) && (node.getNodeType() == 1))\n      {\n        Element element = (Element)node;\n        String id = element.getAttribute(\"id\");\n        if (id != null) {\n          for (String prefix : MergeConstants.OLD_XML_ELEMENT_PREFIXES) {\n            if (id.startsWith(prefix))\n            {\n              rc = true;\n              break;\n            }\n          }\n        }\n        if (!rc)\n        {\n          NodeList children = node.getChildNodes();\n          int length = children.getLength();\n          for (int i = 0; i < length; i++)\n          {\n            Node childNode = children.item(i);\n            if (!isWhiteSpace(childNode))\n            {\n              if (childNode.getNodeType() != 8) {\n                break;\n              }\n              Comment comment = (Comment)childNode;\n              String commentData = comment.getData();\n              for (String tag : MergeConstants.OLD_ELEMENT_TAGS) {\n                if (commentData.contains(tag))\n                {\n                  rc = true;\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      return rc;\n    }\n        \n其实我们的需求是，之前有个<insert id=\"insertSelective\">方法,又生成了<insert id=\"insertSelective\">\n,我们当然想用新的覆盖旧的，但是这里的判断显然不是根据这个id来判断的，所以这个方法返回false，<insert id=\"insertSelective\">这个方法又会追加生成一次。\n\t\n说到这里，我们只需要这样稍微修改一下即可：将新生成的节点列表保存为一个集合a。判断旧节点的id是否包含在这个集合a里面，如果在，那么旧的节点就删除。\n\n具体代码如下：\n        \n        //获取新生成的所有xml，所有element的id列表，删除之前同名的结点\n        NodeList newMethods = newRootElement.getChildNodes();\n          List<String> methods = new ArrayList<String>();\n          for (int i = 0; i < newMethods.getLength(); i++) {\n              Node node = newMethods.item(i);\n              try {\n                  if (node instanceof DeferredTextImpl) {\n                      continue;\n                  }\n                  Element ele = (Element) node;\n                  methods.add(ele.getAttribute(\"id\"));\n              } catch (Exception e) {\n                  //#text节点转换会异常\n                  continue;\n              }\n              if (i == newMethods.getLength() - 1) {\n                  if (isWhiteSpace(node)) {\n                      break;\n                  }\n              }\n          }\n          \n          \t\n    private static boolean isGeneratedNode(Node node, List<String> methods) {\n        boolean rc = false;\n\n        if (node != null && node.getNodeType() == Node.ELEMENT_NODE) {\n            Element element = (Element) node;\n            String id = element.getAttribute(\"id\"); //$NON-NLS-1$\n            if (methods.contains(id)) {\n                return true;\n            }\n\n            if (id != null) {\n                for (String prefix : MergeConstants.OLD_XML_ELEMENT_PREFIXES) {\n                    if (id.startsWith(prefix)) {\n                        rc = true;\n                        break;\n                    }\n                }\n            }\n\t\t\t\n          \n         这样我们就能实现 xml新的覆盖旧的，并且保留旧的文件里自己写的方法，达到合并的效果。\n          \n\n# 问题解决-java合并\n\n\n\t//和xml类似，这个是java代码合并判断代码\n       for (GeneratedJavaFile gjf : this.generatedJavaFiles)\n      {\n        this.projects.add(gjf.getTargetProject());\n        try\n        {\n          File directory = this.shellCallback.getDirectory(gjf.getTargetProject(), gjf.getTargetPackage());\n\n          File targetFile = new File(directory, gjf.getFileName());\n          String source;\n          if (targetFile.exists()) {\n            String source;\n            if (this.shellCallback.isMergeSupported()){\n              source = this.shellCallback.mergeJavaFile(gjf.getFormattedContent(), targetFile.getAbsolutePath(), MergeConstants.OLD_ELEMENT_TAGS, gjf.getFileEncoding());\n            }else if (this.shellCallback.isOverwriteEnabled()){\n              String source = gjf.getFormattedContent();\n              this.warnings.add(Messages.getString(\"Warning.11\", targetFile.getAbsolutePath()));\n            } else{\n            String source = gjf.getFormattedContent();\n              targetFile = getUniqueFileName(directory, gjf.getFileName());\n\n              this.warnings.add(Messages.getString(\"Warning.2\", targetFile.getAbsolutePath()));\n            }\n          }\n    \n我们来看看java代码合并的实现：this.shellCallback.mergeJavaFile\n\n\tpublic String mergeJavaFile(String newFileSource, String existingFileFullPath, String[] javadocTags, String fileEncoding)\n        throws ShellException\n      {\n        throw new UnsupportedOperationException();\n      }\n很遗憾，它并不支持java合并。我们需要自己实现java合并。此处参考：http://blog.csdn.net/w980994974/article/details/76904587\n   直接上代码：\n   \n\n    package org.mybatis.generator.internal;\n\n    import com.github.javaparser.JavaParser;\n    import com.github.javaparser.ast.CompilationUnit;\n    import com.github.javaparser.ast.ImportDeclaration;\n    import com.github.javaparser.ast.Node;\n    import com.github.javaparser.ast.NodeList;\n    import com.github.javaparser.ast.body.FieldDeclaration;\n    import com.github.javaparser.ast.body.MethodDeclaration;\n    import com.github.javaparser.ast.body.TypeDeclaration;\n    import org.mybatis.generator.config.MergeConstants;\n\n    import java.io.File;\n    import java.io.FileNotFoundException;\n    import java.util.ArrayList;\n    import java.util.HashSet;\n    import java.util.List;\n    import java.util.Set;\n\n    import static org.mybatis.generator.api.dom.OutputUtilities.newLine;\n\n    public class JavaFileMergerJaxp {\n        public String getNewJavaFile(String newFileSource, String existingFileFullPath) throws FileNotFoundException {\n            CompilationUnit newCompilationUnit = JavaParser.parse(newFileSource);\n            CompilationUnit existingCompilationUnit = JavaParser.parse(new File(existingFileFullPath));\n            return mergerFile(newCompilationUnit, existingCompilationUnit);\n        }\n\n        public String mergerFile(CompilationUnit newCompilationUnit, CompilationUnit existingCompilationUnit) {\n\n            System.out.println(\"合并java代码\");\n            StringBuilder sb = new StringBuilder(newCompilationUnit.getPackageDeclaration().get().toString());\n            newCompilationUnit.removePackageDeclaration();\n\n            //合并imports\n            NodeList<ImportDeclaration> imports = newCompilationUnit.getImports();\n            imports.addAll(existingCompilationUnit.getImports());\n            Set importSet = new HashSet<ImportDeclaration>();\n            importSet.addAll(imports);\n\n            NodeList<ImportDeclaration> newImports = new NodeList<ImportDeclaration>();\n            newImports.addAll(importSet);\n            newCompilationUnit.setImports(newImports);\n            for (ImportDeclaration i : newCompilationUnit.getImports()) {\n                sb.append(i.toString());\n            }\n            newLine(sb);\n            NodeList<TypeDeclaration<?>> types = newCompilationUnit.getTypes();\n            NodeList<TypeDeclaration<?>> oldTypes = existingCompilationUnit.getTypes();\n\n            for (int i = 0; i < types.size(); i++) {\n                //截取Class\n                String classNameInfo = types.get(i).toString().substring(0, types.get(i).toString().indexOf(\"{\") + 1);\n                sb.append(classNameInfo);\n                newLine(sb);\n                newLine(sb);\n                //合并fields\n                List<FieldDeclaration> fields = types.get(i).getFields();\n                List<FieldDeclaration> oldFields = oldTypes.get(i).getFields();\n                List<FieldDeclaration> newFields = new ArrayList<FieldDeclaration>();\n                HashSet<FieldDeclaration> fieldDeclarations = new HashSet<FieldDeclaration>();\n                fieldDeclarations.addAll(fields);\n                fieldDeclarations.addAll(oldFields);\n                newFields.addAll(fieldDeclarations);\n                for (FieldDeclaration f : newFields) {\n                    sb.append(\"\\t\" + f.toString());\n                    newLine(sb);\n                    newLine(sb);\n                }\n\n                //合并methods\n                List<MethodDeclaration> methods = types.get(i).getMethods();\n                List<MethodDeclaration> existingMethods = oldTypes.get(i).getMethods();\n\n                for (MethodDeclaration f : methods) {\n                    String res = f.toString().replaceAll(\"\\r\\n\", \"\\r\\n\\t\");\n                    sb.append(\"\\t\" + res);\n                    newLine(sb);\n                    newLine(sb);\n                }\n\n                List<String> methodList = new ArrayList<String>();\n                for (MethodDeclaration m : methods) {\n                    methodList.add(m.getName().toString());\n                }\n                methodList.add(\"toString\");\n                methodList.add(\"hashCode\");\n                methodList.add(\"equals\");\n\n                for (MethodDeclaration m : existingMethods) {\n                    if (methodList.contains(m.getName().toString())) {\n                        continue;\n                    }\n\n                    boolean flag = true;\n                    for (String tag : MergeConstants.OLD_ELEMENT_TAGS) {\n                        if (m.toString().contains(tag)) {\n                            flag = false;\n                            break;\n                        }\n                    }\n                    if (flag) {\n                        String res = m.toString().replaceAll(\"\\r\\n\", \"\\r\\n\\t\");\n                        sb.append(\"\\t\" + res);\n                        newLine(sb);\n                        newLine(sb);\n                    }\n                }\n\n                //判断是否有内部类\n                types.get(i).getChildNodes();\n                for (Node n : types.get(i).getChildNodes()) {\n                    if (n.toString().contains(\"static class\")) {\n                        String res = n.toString().replaceAll(\"\\r\\n\", \"\\r\\n\\t\");\n                        sb.append(\"\\t\" + res);\n                    }\n                }\n\n            }\n\n            return sb.append(System.getProperty(\"line.separator\") + \"}\").toString();\n        }\n\n    }\n\n    \n   参考 上面网址得到的代码稍微加了一些新旧方法的判断，逻辑和xml合并类似。不再赘述。\n   \n   ps：其中java，xml是覆盖模式，还是合并模式，通过配置实现，\n   \n      <context id=\"MySQLTables\" targetRuntime=\"MyBatis3\">\n       <!--true为合并，false为覆盖，新生成的文件会完全覆盖旧文件-->\n        <property name=\"xmlMergeable\" value=\"true\" />\n        <property name=\"javaMergeable\" value=\"true\" />\n        \n   \n   # 总结\n    \n源码修改好了之后，jar包下载地址：\n    http://download.csdn.net/download/zjy1211079133/10159514\n    \n    \n## 使用方法：（下载jar包，替换你本地的pom使用的jar包 mybatis-generator-core-version.jar）\n    \npom.xml配置：\n\n \t\t\t <plugin>\n  \t\t\t<groupId>org.mybatis.generator</groupId>\n                  <artifactId>mybatis-generator-maven-plugin</artifactId>\n                  <version>1.3.2</version>\n                  <configuration>\n                      <configurationFile>src/main/resources/mybatis-generator.xml</configurationFile>\n                      <verbose>true</verbose>\n                      <overwrite>true</overwrite>\n                  </configuration>\n              </plugin>\n              \n mybatis-generator.xml 配置：（其他公用配置自行百度）\n \n \t\t\n         <context id=\"MySQLTables\" targetRuntime=\"MyBatis3\">\n       <!--true为合并，false为覆盖，新生成的文件会完全覆盖旧文件-->\n        <property name=\"xmlMergeable\" value=\"true\" />\n        <property name=\"javaMergeable\" value=\"true\" />\n\n\n\n生成即可。具体参照：http://blog.csdn.net/isea533/article/details/42102297 使用","source":"_posts/mybatis-generator-源码浅析与修改.md","raw":"title: mybatis-generator 源码浅析与修改\nauthor: zjy\ndate: 2017-12-15 14:42:59\ntags:\n---\n# mybatis-generator 简介\n\t\tMybatis属于半自动ORM，在使用这个框架中，工作量最大的就是书写Mapping的映射文件，由于手动书写很容易出错，我们可以利用Mybatis-Generator来帮我们自动生成文件。项目中常用的：\n         StudentExample example = new StudentExample();\n         StudentExample.Criteria criteria = example.createCriteria();\n         deleteByExample\n         insert\n         insertSelective\t\n         selectByExample ..等等诸如此类的方法，均是通过mybatis-genenrator可以自动生成的 使得开发起来很方便。\n         mybatis-generator 生成的sql xml几乎涵盖了单表的所有增删改查方法。很方便\n         \n# mybatis-generator 问题\n（mybatis-generator默认合并指的是 123 ， 234 合并完 是 123234，而我们需要的结果是1234）\n\t\t\n       1  生成一次 CourseMapper.java,CourseMapper.xml等文件。\n       2  现在需要加个批量插入方法，在CouseMapper.java里加  \n           public int batchInsert(List<Course> list);\n           在CourseMapper.xml里加\n             <insert id=\"batchInsert\" parameterType=\"cc.gukeer.smartBoard.persistence.entity.Course\">\n                your sql\n             </insert>\n       3  现在数据库加了个字段a，需要对文件再次生成  我们发现，xml里面，updateByPrimaryKey 这样的方法再次生成了一次，而且CourseMapper.java里 的batchInsert 这个方法已经没有了。之前写的代码也就被覆盖了或者出现了问题。我们必须得回滚。。\n           \n       4 为了解决这个问题，我们不得不扩展 CourseMapper.xml \n       写 A_CourseMapper.xml 对应 CourseMapper.xml \n       写 A_CourseMapper.xml 对应 CourseMapper.xml\n       并把我们的批量方法写到A_***里面，这样再次生成就不会被覆盖了。那么问题来了：\n       \n![logo](common/images/mybatis_mapper.png)\n\t\t\t\n       从图中可以看到，这无疑使得我们的文件更繁多，维护更加复杂。\n       \n       \n# 问题解决-xml合并\n    出现这个问题的原因，我们主要来看一下generator的源码：\n    org.mybatis.generator.api.MyBatisGenerator 的generate方法，是生成文件的一个入口。\n    \n    \n    for (GeneratedXmlFile gxf : this.generatedXmlFiles){\n      this.projects.add(gxf.getTargetProject());\n      File targetFile;\n      String source;\n      try{\n        File directory = this.shellCallback.getDirectory(gxf.getTargetProject(), gxf.getTargetPackage());\n        targetFile = new File(directory, gxf.getFileName());\n        if (targetFile.exists()){\n          String source;\n          if (gxf.isMergeable()){\n            source = XmlFileMergerJaxp.getMergedSource(gxf, targetFile);\n          }else if (this.shellCallback.isOverwriteEnabled()){\n            String source = gxf.getFormattedContent();\n            this.warnings.add(Messages.getString(\"Warning.11\", targetFile.getAbsolutePath()));\n          }else{\n          String source = gxf.getFormattedContent();\n            targetFile = getUniqueFileName(directory, gxf.getFileName());\n            this.warnings.add(Messages.getString(\"Warning.2\", targetFile.getAbsolutePath()));\n          }\n        }\n        \n        \n  其中 有对gxf（GeneratedXmlFile） 是否合并判断，如果合并true，将新旧xml通过这个方法合并取合并得到的结果字符串，写到新的文件中。 XmlFileMergerJaxp.getMergedSource \n        \n XmlFileMergerJaxp.getMergedSource 部分代码如下：\n \n        DocumentType newDocType = newDocument.getDoctype();\n        ...\n        List<Node> nodesToDelete = new ArrayList();\n        NodeList children = existingRootElement.getChildNodes();\n        int length = children.getLength();\n        for (int i = 0; i < length; i++)\n      {\n        Node node = children.item(i);\n        if (isGeneratedNode(node)) {\n          nodesToDelete.add(node);\n        } else if ((isWhiteSpace(node)) && (isGeneratedNode(children.item(i + 1)))) {\n          nodesToDelete.add(node);\n        }\n      }\n      for (Node node : nodesToDelete) {\n        existingRootElement.removeChild(node);\n      }\n这里采用的是org.w3c.dom.* 来解析的新旧xml文件。我们发现，这里有对旧文件遍历，判断这个节点方法是否已经生成过。如果是已经生成 isGeneratedNode的节点，那么加入到 nodesToDelete里面，最后把它给移除。那么问题就出在这个 isGeneratedNode判断方法上\n\n\t\tprivate static boolean isGeneratedNode(Node node)\n    {\n      boolean rc = false;\n      if ((node != null) && (node.getNodeType() == 1))\n      {\n        Element element = (Element)node;\n        String id = element.getAttribute(\"id\");\n        if (id != null) {\n          for (String prefix : MergeConstants.OLD_XML_ELEMENT_PREFIXES) {\n            if (id.startsWith(prefix))\n            {\n              rc = true;\n              break;\n            }\n          }\n        }\n        if (!rc)\n        {\n          NodeList children = node.getChildNodes();\n          int length = children.getLength();\n          for (int i = 0; i < length; i++)\n          {\n            Node childNode = children.item(i);\n            if (!isWhiteSpace(childNode))\n            {\n              if (childNode.getNodeType() != 8) {\n                break;\n              }\n              Comment comment = (Comment)childNode;\n              String commentData = comment.getData();\n              for (String tag : MergeConstants.OLD_ELEMENT_TAGS) {\n                if (commentData.contains(tag))\n                {\n                  rc = true;\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      return rc;\n    }\n        \n其实我们的需求是，之前有个<insert id=\"insertSelective\">方法,又生成了<insert id=\"insertSelective\">\n,我们当然想用新的覆盖旧的，但是这里的判断显然不是根据这个id来判断的，所以这个方法返回false，<insert id=\"insertSelective\">这个方法又会追加生成一次。\n\t\n说到这里，我们只需要这样稍微修改一下即可：将新生成的节点列表保存为一个集合a。判断旧节点的id是否包含在这个集合a里面，如果在，那么旧的节点就删除。\n\n具体代码如下：\n        \n        //获取新生成的所有xml，所有element的id列表，删除之前同名的结点\n        NodeList newMethods = newRootElement.getChildNodes();\n          List<String> methods = new ArrayList<String>();\n          for (int i = 0; i < newMethods.getLength(); i++) {\n              Node node = newMethods.item(i);\n              try {\n                  if (node instanceof DeferredTextImpl) {\n                      continue;\n                  }\n                  Element ele = (Element) node;\n                  methods.add(ele.getAttribute(\"id\"));\n              } catch (Exception e) {\n                  //#text节点转换会异常\n                  continue;\n              }\n              if (i == newMethods.getLength() - 1) {\n                  if (isWhiteSpace(node)) {\n                      break;\n                  }\n              }\n          }\n          \n          \t\n    private static boolean isGeneratedNode(Node node, List<String> methods) {\n        boolean rc = false;\n\n        if (node != null && node.getNodeType() == Node.ELEMENT_NODE) {\n            Element element = (Element) node;\n            String id = element.getAttribute(\"id\"); //$NON-NLS-1$\n            if (methods.contains(id)) {\n                return true;\n            }\n\n            if (id != null) {\n                for (String prefix : MergeConstants.OLD_XML_ELEMENT_PREFIXES) {\n                    if (id.startsWith(prefix)) {\n                        rc = true;\n                        break;\n                    }\n                }\n            }\n\t\t\t\n          \n         这样我们就能实现 xml新的覆盖旧的，并且保留旧的文件里自己写的方法，达到合并的效果。\n          \n\n# 问题解决-java合并\n\n\n\t//和xml类似，这个是java代码合并判断代码\n       for (GeneratedJavaFile gjf : this.generatedJavaFiles)\n      {\n        this.projects.add(gjf.getTargetProject());\n        try\n        {\n          File directory = this.shellCallback.getDirectory(gjf.getTargetProject(), gjf.getTargetPackage());\n\n          File targetFile = new File(directory, gjf.getFileName());\n          String source;\n          if (targetFile.exists()) {\n            String source;\n            if (this.shellCallback.isMergeSupported()){\n              source = this.shellCallback.mergeJavaFile(gjf.getFormattedContent(), targetFile.getAbsolutePath(), MergeConstants.OLD_ELEMENT_TAGS, gjf.getFileEncoding());\n            }else if (this.shellCallback.isOverwriteEnabled()){\n              String source = gjf.getFormattedContent();\n              this.warnings.add(Messages.getString(\"Warning.11\", targetFile.getAbsolutePath()));\n            } else{\n            String source = gjf.getFormattedContent();\n              targetFile = getUniqueFileName(directory, gjf.getFileName());\n\n              this.warnings.add(Messages.getString(\"Warning.2\", targetFile.getAbsolutePath()));\n            }\n          }\n    \n我们来看看java代码合并的实现：this.shellCallback.mergeJavaFile\n\n\tpublic String mergeJavaFile(String newFileSource, String existingFileFullPath, String[] javadocTags, String fileEncoding)\n        throws ShellException\n      {\n        throw new UnsupportedOperationException();\n      }\n很遗憾，它并不支持java合并。我们需要自己实现java合并。此处参考：http://blog.csdn.net/w980994974/article/details/76904587\n   直接上代码：\n   \n\n    package org.mybatis.generator.internal;\n\n    import com.github.javaparser.JavaParser;\n    import com.github.javaparser.ast.CompilationUnit;\n    import com.github.javaparser.ast.ImportDeclaration;\n    import com.github.javaparser.ast.Node;\n    import com.github.javaparser.ast.NodeList;\n    import com.github.javaparser.ast.body.FieldDeclaration;\n    import com.github.javaparser.ast.body.MethodDeclaration;\n    import com.github.javaparser.ast.body.TypeDeclaration;\n    import org.mybatis.generator.config.MergeConstants;\n\n    import java.io.File;\n    import java.io.FileNotFoundException;\n    import java.util.ArrayList;\n    import java.util.HashSet;\n    import java.util.List;\n    import java.util.Set;\n\n    import static org.mybatis.generator.api.dom.OutputUtilities.newLine;\n\n    public class JavaFileMergerJaxp {\n        public String getNewJavaFile(String newFileSource, String existingFileFullPath) throws FileNotFoundException {\n            CompilationUnit newCompilationUnit = JavaParser.parse(newFileSource);\n            CompilationUnit existingCompilationUnit = JavaParser.parse(new File(existingFileFullPath));\n            return mergerFile(newCompilationUnit, existingCompilationUnit);\n        }\n\n        public String mergerFile(CompilationUnit newCompilationUnit, CompilationUnit existingCompilationUnit) {\n\n            System.out.println(\"合并java代码\");\n            StringBuilder sb = new StringBuilder(newCompilationUnit.getPackageDeclaration().get().toString());\n            newCompilationUnit.removePackageDeclaration();\n\n            //合并imports\n            NodeList<ImportDeclaration> imports = newCompilationUnit.getImports();\n            imports.addAll(existingCompilationUnit.getImports());\n            Set importSet = new HashSet<ImportDeclaration>();\n            importSet.addAll(imports);\n\n            NodeList<ImportDeclaration> newImports = new NodeList<ImportDeclaration>();\n            newImports.addAll(importSet);\n            newCompilationUnit.setImports(newImports);\n            for (ImportDeclaration i : newCompilationUnit.getImports()) {\n                sb.append(i.toString());\n            }\n            newLine(sb);\n            NodeList<TypeDeclaration<?>> types = newCompilationUnit.getTypes();\n            NodeList<TypeDeclaration<?>> oldTypes = existingCompilationUnit.getTypes();\n\n            for (int i = 0; i < types.size(); i++) {\n                //截取Class\n                String classNameInfo = types.get(i).toString().substring(0, types.get(i).toString().indexOf(\"{\") + 1);\n                sb.append(classNameInfo);\n                newLine(sb);\n                newLine(sb);\n                //合并fields\n                List<FieldDeclaration> fields = types.get(i).getFields();\n                List<FieldDeclaration> oldFields = oldTypes.get(i).getFields();\n                List<FieldDeclaration> newFields = new ArrayList<FieldDeclaration>();\n                HashSet<FieldDeclaration> fieldDeclarations = new HashSet<FieldDeclaration>();\n                fieldDeclarations.addAll(fields);\n                fieldDeclarations.addAll(oldFields);\n                newFields.addAll(fieldDeclarations);\n                for (FieldDeclaration f : newFields) {\n                    sb.append(\"\\t\" + f.toString());\n                    newLine(sb);\n                    newLine(sb);\n                }\n\n                //合并methods\n                List<MethodDeclaration> methods = types.get(i).getMethods();\n                List<MethodDeclaration> existingMethods = oldTypes.get(i).getMethods();\n\n                for (MethodDeclaration f : methods) {\n                    String res = f.toString().replaceAll(\"\\r\\n\", \"\\r\\n\\t\");\n                    sb.append(\"\\t\" + res);\n                    newLine(sb);\n                    newLine(sb);\n                }\n\n                List<String> methodList = new ArrayList<String>();\n                for (MethodDeclaration m : methods) {\n                    methodList.add(m.getName().toString());\n                }\n                methodList.add(\"toString\");\n                methodList.add(\"hashCode\");\n                methodList.add(\"equals\");\n\n                for (MethodDeclaration m : existingMethods) {\n                    if (methodList.contains(m.getName().toString())) {\n                        continue;\n                    }\n\n                    boolean flag = true;\n                    for (String tag : MergeConstants.OLD_ELEMENT_TAGS) {\n                        if (m.toString().contains(tag)) {\n                            flag = false;\n                            break;\n                        }\n                    }\n                    if (flag) {\n                        String res = m.toString().replaceAll(\"\\r\\n\", \"\\r\\n\\t\");\n                        sb.append(\"\\t\" + res);\n                        newLine(sb);\n                        newLine(sb);\n                    }\n                }\n\n                //判断是否有内部类\n                types.get(i).getChildNodes();\n                for (Node n : types.get(i).getChildNodes()) {\n                    if (n.toString().contains(\"static class\")) {\n                        String res = n.toString().replaceAll(\"\\r\\n\", \"\\r\\n\\t\");\n                        sb.append(\"\\t\" + res);\n                    }\n                }\n\n            }\n\n            return sb.append(System.getProperty(\"line.separator\") + \"}\").toString();\n        }\n\n    }\n\n    \n   参考 上面网址得到的代码稍微加了一些新旧方法的判断，逻辑和xml合并类似。不再赘述。\n   \n   ps：其中java，xml是覆盖模式，还是合并模式，通过配置实现，\n   \n      <context id=\"MySQLTables\" targetRuntime=\"MyBatis3\">\n       <!--true为合并，false为覆盖，新生成的文件会完全覆盖旧文件-->\n        <property name=\"xmlMergeable\" value=\"true\" />\n        <property name=\"javaMergeable\" value=\"true\" />\n        \n   \n   # 总结\n    \n源码修改好了之后，jar包下载地址：\n    http://download.csdn.net/download/zjy1211079133/10159514\n    \n    \n## 使用方法：（下载jar包，替换你本地的pom使用的jar包 mybatis-generator-core-version.jar）\n    \npom.xml配置：\n\n \t\t\t <plugin>\n  \t\t\t<groupId>org.mybatis.generator</groupId>\n                  <artifactId>mybatis-generator-maven-plugin</artifactId>\n                  <version>1.3.2</version>\n                  <configuration>\n                      <configurationFile>src/main/resources/mybatis-generator.xml</configurationFile>\n                      <verbose>true</verbose>\n                      <overwrite>true</overwrite>\n                  </configuration>\n              </plugin>\n              \n mybatis-generator.xml 配置：（其他公用配置自行百度）\n \n \t\t\n         <context id=\"MySQLTables\" targetRuntime=\"MyBatis3\">\n       <!--true为合并，false为覆盖，新生成的文件会完全覆盖旧文件-->\n        <property name=\"xmlMergeable\" value=\"true\" />\n        <property name=\"javaMergeable\" value=\"true\" />\n\n\n\n生成即可。具体参照：http://blog.csdn.net/isea533/article/details/42102297 使用","slug":"mybatis-generator-源码浅析与修改","published":1,"updated":"2018-05-09T01:39:40.181Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eqm000vawpfhrbi0n4z","content":"<h1 id=\"mybatis-generator-简介\"><a href=\"#mybatis-generator-简介\" class=\"headerlink\" title=\"mybatis-generator 简介\"></a>mybatis-generator 简介</h1><pre><code>Mybatis属于半自动ORM，在使用这个框架中，工作量最大的就是书写Mapping的映射文件，由于手动书写很容易出错，我们可以利用Mybatis-Generator来帮我们自动生成文件。项目中常用的：\n StudentExample example = new StudentExample();\n StudentExample.Criteria criteria = example.createCriteria();\n deleteByExample\n insert\n insertSelective    \n selectByExample ..等等诸如此类的方法，均是通过mybatis-genenrator可以自动生成的 使得开发起来很方便。\n mybatis-generator 生成的sql xml几乎涵盖了单表的所有增删改查方法。很方便\n</code></pre><h1 id=\"mybatis-generator-问题\"><a href=\"#mybatis-generator-问题\" class=\"headerlink\" title=\"mybatis-generator 问题\"></a>mybatis-generator 问题</h1><p>（mybatis-generator默认合并指的是 123 ， 234 合并完 是 123234，而我们需要的结果是1234）</p>\n<pre><code>1  生成一次 CourseMapper.java,CourseMapper.xml等文件。\n2  现在需要加个批量插入方法，在CouseMapper.java里加  \n    public int batchInsert(List&lt;Course&gt; list);\n    在CourseMapper.xml里加\n      &lt;insert id=&quot;batchInsert&quot; parameterType=&quot;cc.gukeer.smartBoard.persistence.entity.Course&quot;&gt;\n         your sql\n      &lt;/insert&gt;\n3  现在数据库加了个字段a，需要对文件再次生成  我们发现，xml里面，updateByPrimaryKey 这样的方法再次生成了一次，而且CourseMapper.java里 的batchInsert 这个方法已经没有了。之前写的代码也就被覆盖了或者出现了问题。我们必须得回滚。。\n\n4 为了解决这个问题，我们不得不扩展 CourseMapper.xml \n写 A_CourseMapper.xml 对应 CourseMapper.xml \n写 A_CourseMapper.xml 对应 CourseMapper.xml\n并把我们的批量方法写到A_***里面，这样再次生成就不会被覆盖了。那么问题来了：\n</code></pre><p><img src=\"/2017/12/15/mybatis-generator-源码浅析与修改/images/mybatis_mapper.png\" alt=\"logo\"></p>\n<pre><code>从图中可以看到，这无疑使得我们的文件更繁多，维护更加复杂。\n</code></pre><h1 id=\"问题解决-xml合并\"><a href=\"#问题解决-xml合并\" class=\"headerlink\" title=\"问题解决-xml合并\"></a>问题解决-xml合并</h1><pre><code>出现这个问题的原因，我们主要来看一下generator的源码：\norg.mybatis.generator.api.MyBatisGenerator 的generate方法，是生成文件的一个入口。\n\n\nfor (GeneratedXmlFile gxf : this.generatedXmlFiles){\n  this.projects.add(gxf.getTargetProject());\n  File targetFile;\n  String source;\n  try{\n    File directory = this.shellCallback.getDirectory(gxf.getTargetProject(), gxf.getTargetPackage());\n    targetFile = new File(directory, gxf.getFileName());\n    if (targetFile.exists()){\n      String source;\n      if (gxf.isMergeable()){\n        source = XmlFileMergerJaxp.getMergedSource(gxf, targetFile);\n      }else if (this.shellCallback.isOverwriteEnabled()){\n        String source = gxf.getFormattedContent();\n        this.warnings.add(Messages.getString(&quot;Warning.11&quot;, targetFile.getAbsolutePath()));\n      }else{\n      String source = gxf.getFormattedContent();\n        targetFile = getUniqueFileName(directory, gxf.getFileName());\n        this.warnings.add(Messages.getString(&quot;Warning.2&quot;, targetFile.getAbsolutePath()));\n      }\n    }\n</code></pre><p>  其中 有对gxf（GeneratedXmlFile） 是否合并判断，如果合并true，将新旧xml通过这个方法合并取合并得到的结果字符串，写到新的文件中。 XmlFileMergerJaxp.getMergedSource </p>\n<p> XmlFileMergerJaxp.getMergedSource 部分代码如下：</p>\n<pre><code>  DocumentType newDocType = newDocument.getDoctype();\n  ...\n  List&lt;Node&gt; nodesToDelete = new ArrayList();\n  NodeList children = existingRootElement.getChildNodes();\n  int length = children.getLength();\n  for (int i = 0; i &lt; length; i++)\n{\n  Node node = children.item(i);\n  if (isGeneratedNode(node)) {\n    nodesToDelete.add(node);\n  } else if ((isWhiteSpace(node)) &amp;&amp; (isGeneratedNode(children.item(i + 1)))) {\n    nodesToDelete.add(node);\n  }\n}\nfor (Node node : nodesToDelete) {\n  existingRootElement.removeChild(node);\n}\n</code></pre><p>这里采用的是org.w3c.dom.* 来解析的新旧xml文件。我们发现，这里有对旧文件遍历，判断这个节点方法是否已经生成过。如果是已经生成 isGeneratedNode的节点，那么加入到 nodesToDelete里面，最后把它给移除。那么问题就出在这个 isGeneratedNode判断方法上</p>\n<pre><code>    private static boolean isGeneratedNode(Node node)\n{\n  boolean rc = false;\n  if ((node != null) &amp;&amp; (node.getNodeType() == 1))\n  {\n    Element element = (Element)node;\n    String id = element.getAttribute(&quot;id&quot;);\n    if (id != null) {\n      for (String prefix : MergeConstants.OLD_XML_ELEMENT_PREFIXES) {\n        if (id.startsWith(prefix))\n        {\n          rc = true;\n          break;\n        }\n      }\n    }\n    if (!rc)\n    {\n      NodeList children = node.getChildNodes();\n      int length = children.getLength();\n      for (int i = 0; i &lt; length; i++)\n      {\n        Node childNode = children.item(i);\n        if (!isWhiteSpace(childNode))\n        {\n          if (childNode.getNodeType() != 8) {\n            break;\n          }\n          Comment comment = (Comment)childNode;\n          String commentData = comment.getData();\n          for (String tag : MergeConstants.OLD_ELEMENT_TAGS) {\n            if (commentData.contains(tag))\n            {\n              rc = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  return rc;\n}\n</code></pre><p>其实我们的需求是，之前有个<insert id=\"insertSelective\">方法,又生成了<insert id=\"insertSelective\"><br>,我们当然想用新的覆盖旧的，但是这里的判断显然不是根据这个id来判断的，所以这个方法返回false，<insert id=\"insertSelective\">这个方法又会追加生成一次。</insert></insert></insert></p>\n<p>说到这里，我们只需要这样稍微修改一下即可：将新生成的节点列表保存为一个集合a。判断旧节点的id是否包含在这个集合a里面，如果在，那么旧的节点就删除。</p>\n<p>具体代码如下：</p>\n<pre><code>    //获取新生成的所有xml，所有element的id列表，删除之前同名的结点\n    NodeList newMethods = newRootElement.getChildNodes();\n      List&lt;String&gt; methods = new ArrayList&lt;String&gt;();\n      for (int i = 0; i &lt; newMethods.getLength(); i++) {\n          Node node = newMethods.item(i);\n          try {\n              if (node instanceof DeferredTextImpl) {\n                  continue;\n              }\n              Element ele = (Element) node;\n              methods.add(ele.getAttribute(&quot;id&quot;));\n          } catch (Exception e) {\n              //#text节点转换会异常\n              continue;\n          }\n          if (i == newMethods.getLength() - 1) {\n              if (isWhiteSpace(node)) {\n                  break;\n              }\n          }\n      }\n\n\nprivate static boolean isGeneratedNode(Node node, List&lt;String&gt; methods) {\n    boolean rc = false;\n\n    if (node != null &amp;&amp; node.getNodeType() == Node.ELEMENT_NODE) {\n        Element element = (Element) node;\n        String id = element.getAttribute(&quot;id&quot;); //$NON-NLS-1$\n        if (methods.contains(id)) {\n            return true;\n        }\n\n        if (id != null) {\n            for (String prefix : MergeConstants.OLD_XML_ELEMENT_PREFIXES) {\n                if (id.startsWith(prefix)) {\n                    rc = true;\n                    break;\n                }\n            }\n        }\n\n\n     这样我们就能实现 xml新的覆盖旧的，并且保留旧的文件里自己写的方法，达到合并的效果。\n</code></pre><h1 id=\"问题解决-java合并\"><a href=\"#问题解决-java合并\" class=\"headerlink\" title=\"问题解决-java合并\"></a>问题解决-java合并</h1><pre><code>//和xml类似，这个是java代码合并判断代码\n   for (GeneratedJavaFile gjf : this.generatedJavaFiles)\n  {\n    this.projects.add(gjf.getTargetProject());\n    try\n    {\n      File directory = this.shellCallback.getDirectory(gjf.getTargetProject(), gjf.getTargetPackage());\n\n      File targetFile = new File(directory, gjf.getFileName());\n      String source;\n      if (targetFile.exists()) {\n        String source;\n        if (this.shellCallback.isMergeSupported()){\n          source = this.shellCallback.mergeJavaFile(gjf.getFormattedContent(), targetFile.getAbsolutePath(), MergeConstants.OLD_ELEMENT_TAGS, gjf.getFileEncoding());\n        }else if (this.shellCallback.isOverwriteEnabled()){\n          String source = gjf.getFormattedContent();\n          this.warnings.add(Messages.getString(&quot;Warning.11&quot;, targetFile.getAbsolutePath()));\n        } else{\n        String source = gjf.getFormattedContent();\n          targetFile = getUniqueFileName(directory, gjf.getFileName());\n\n          this.warnings.add(Messages.getString(&quot;Warning.2&quot;, targetFile.getAbsolutePath()));\n        }\n      }\n</code></pre><p>我们来看看java代码合并的实现：this.shellCallback.mergeJavaFile</p>\n<pre><code>public String mergeJavaFile(String newFileSource, String existingFileFullPath, String[] javadocTags, String fileEncoding)\n    throws ShellException\n  {\n    throw new UnsupportedOperationException();\n  }\n</code></pre><p>很遗憾，它并不支持java合并。我们需要自己实现java合并。此处参考：<a href=\"http://blog.csdn.net/w980994974/article/details/76904587\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/w980994974/article/details/76904587</a><br>   直接上代码：</p>\n<pre><code>package org.mybatis.generator.internal;\n\nimport com.github.javaparser.JavaParser;\nimport com.github.javaparser.ast.CompilationUnit;\nimport com.github.javaparser.ast.ImportDeclaration;\nimport com.github.javaparser.ast.Node;\nimport com.github.javaparser.ast.NodeList;\nimport com.github.javaparser.ast.body.FieldDeclaration;\nimport com.github.javaparser.ast.body.MethodDeclaration;\nimport com.github.javaparser.ast.body.TypeDeclaration;\nimport org.mybatis.generator.config.MergeConstants;\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport static org.mybatis.generator.api.dom.OutputUtilities.newLine;\n\npublic class JavaFileMergerJaxp {\n    public String getNewJavaFile(String newFileSource, String existingFileFullPath) throws FileNotFoundException {\n        CompilationUnit newCompilationUnit = JavaParser.parse(newFileSource);\n        CompilationUnit existingCompilationUnit = JavaParser.parse(new File(existingFileFullPath));\n        return mergerFile(newCompilationUnit, existingCompilationUnit);\n    }\n\n    public String mergerFile(CompilationUnit newCompilationUnit, CompilationUnit existingCompilationUnit) {\n\n        System.out.println(&quot;合并java代码&quot;);\n        StringBuilder sb = new StringBuilder(newCompilationUnit.getPackageDeclaration().get().toString());\n        newCompilationUnit.removePackageDeclaration();\n\n        //合并imports\n        NodeList&lt;ImportDeclaration&gt; imports = newCompilationUnit.getImports();\n        imports.addAll(existingCompilationUnit.getImports());\n        Set importSet = new HashSet&lt;ImportDeclaration&gt;();\n        importSet.addAll(imports);\n\n        NodeList&lt;ImportDeclaration&gt; newImports = new NodeList&lt;ImportDeclaration&gt;();\n        newImports.addAll(importSet);\n        newCompilationUnit.setImports(newImports);\n        for (ImportDeclaration i : newCompilationUnit.getImports()) {\n            sb.append(i.toString());\n        }\n        newLine(sb);\n        NodeList&lt;TypeDeclaration&lt;?&gt;&gt; types = newCompilationUnit.getTypes();\n        NodeList&lt;TypeDeclaration&lt;?&gt;&gt; oldTypes = existingCompilationUnit.getTypes();\n\n        for (int i = 0; i &lt; types.size(); i++) {\n            //截取Class\n            String classNameInfo = types.get(i).toString().substring(0, types.get(i).toString().indexOf(&quot;{&quot;) + 1);\n            sb.append(classNameInfo);\n            newLine(sb);\n            newLine(sb);\n            //合并fields\n            List&lt;FieldDeclaration&gt; fields = types.get(i).getFields();\n            List&lt;FieldDeclaration&gt; oldFields = oldTypes.get(i).getFields();\n            List&lt;FieldDeclaration&gt; newFields = new ArrayList&lt;FieldDeclaration&gt;();\n            HashSet&lt;FieldDeclaration&gt; fieldDeclarations = new HashSet&lt;FieldDeclaration&gt;();\n            fieldDeclarations.addAll(fields);\n            fieldDeclarations.addAll(oldFields);\n            newFields.addAll(fieldDeclarations);\n            for (FieldDeclaration f : newFields) {\n                sb.append(&quot;\\t&quot; + f.toString());\n                newLine(sb);\n                newLine(sb);\n            }\n\n            //合并methods\n            List&lt;MethodDeclaration&gt; methods = types.get(i).getMethods();\n            List&lt;MethodDeclaration&gt; existingMethods = oldTypes.get(i).getMethods();\n\n            for (MethodDeclaration f : methods) {\n                String res = f.toString().replaceAll(&quot;\\r\\n&quot;, &quot;\\r\\n\\t&quot;);\n                sb.append(&quot;\\t&quot; + res);\n                newLine(sb);\n                newLine(sb);\n            }\n\n            List&lt;String&gt; methodList = new ArrayList&lt;String&gt;();\n            for (MethodDeclaration m : methods) {\n                methodList.add(m.getName().toString());\n            }\n            methodList.add(&quot;toString&quot;);\n            methodList.add(&quot;hashCode&quot;);\n            methodList.add(&quot;equals&quot;);\n\n            for (MethodDeclaration m : existingMethods) {\n                if (methodList.contains(m.getName().toString())) {\n                    continue;\n                }\n\n                boolean flag = true;\n                for (String tag : MergeConstants.OLD_ELEMENT_TAGS) {\n                    if (m.toString().contains(tag)) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    String res = m.toString().replaceAll(&quot;\\r\\n&quot;, &quot;\\r\\n\\t&quot;);\n                    sb.append(&quot;\\t&quot; + res);\n                    newLine(sb);\n                    newLine(sb);\n                }\n            }\n\n            //判断是否有内部类\n            types.get(i).getChildNodes();\n            for (Node n : types.get(i).getChildNodes()) {\n                if (n.toString().contains(&quot;static class&quot;)) {\n                    String res = n.toString().replaceAll(&quot;\\r\\n&quot;, &quot;\\r\\n\\t&quot;);\n                    sb.append(&quot;\\t&quot; + res);\n                }\n            }\n\n        }\n\n        return sb.append(System.getProperty(&quot;line.separator&quot;) + &quot;}&quot;).toString();\n    }\n\n}\n</code></pre><p>   参考 上面网址得到的代码稍微加了一些新旧方法的判断，逻辑和xml合并类似。不再赘述。</p>\n<p>   ps：其中java，xml是覆盖模式，还是合并模式，通过配置实现，</p>\n<pre><code>&lt;context id=&quot;MySQLTables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;\n &lt;!--true为合并，false为覆盖，新生成的文件会完全覆盖旧文件--&gt;\n  &lt;property name=&quot;xmlMergeable&quot; value=&quot;true&quot; /&gt;\n  &lt;property name=&quot;javaMergeable&quot; value=&quot;true&quot; /&gt;\n</code></pre><h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>源码修改好了之后，jar包下载地址：<br>    <a href=\"http://download.csdn.net/download/zjy1211079133/10159514\" target=\"_blank\" rel=\"external\">http://download.csdn.net/download/zjy1211079133/10159514</a></p>\n<h2 id=\"使用方法：（下载jar包，替换你本地的pom使用的jar包-mybatis-generator-core-version-jar）\"><a href=\"#使用方法：（下载jar包，替换你本地的pom使用的jar包-mybatis-generator-core-version-jar）\" class=\"headerlink\" title=\"使用方法：（下载jar包，替换你本地的pom使用的jar包 mybatis-generator-core-version.jar）\"></a>使用方法：（下载jar包，替换你本地的pom使用的jar包 mybatis-generator-core-version.jar）</h2><p>pom.xml配置：</p>\n<pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;\n    &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;\n    &lt;version&gt;1.3.2&lt;/version&gt;\n    &lt;configuration&gt;\n        &lt;configurationFile&gt;src/main/resources/mybatis-generator.xml&lt;/configurationFile&gt;\n        &lt;verbose&gt;true&lt;/verbose&gt;\n        &lt;overwrite&gt;true&lt;/overwrite&gt;\n    &lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre><p> mybatis-generator.xml 配置：（其他公用配置自行百度）</p>\n<pre><code>  &lt;context id=&quot;MySQLTables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;\n&lt;!--true为合并，false为覆盖，新生成的文件会完全覆盖旧文件--&gt;\n &lt;property name=&quot;xmlMergeable&quot; value=&quot;true&quot; /&gt;\n &lt;property name=&quot;javaMergeable&quot; value=&quot;true&quot; /&gt;\n</code></pre><p>生成即可。具体参照：<a href=\"http://blog.csdn.net/isea533/article/details/42102297\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/isea533/article/details/42102297</a> 使用</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mybatis-generator-简介\"><a href=\"#mybatis-generator-简介\" class=\"headerlink\" title=\"mybatis-generator 简介\"></a>mybatis-generator 简介</h1><pre><code>Mybatis属于半自动ORM，在使用这个框架中，工作量最大的就是书写Mapping的映射文件，由于手动书写很容易出错，我们可以利用Mybatis-Generator来帮我们自动生成文件。项目中常用的：\n StudentExample example = new StudentExample();\n StudentExample.Criteria criteria = example.createCriteria();\n deleteByExample\n insert\n insertSelective    \n selectByExample ..等等诸如此类的方法，均是通过mybatis-genenrator可以自动生成的 使得开发起来很方便。\n mybatis-generator 生成的sql xml几乎涵盖了单表的所有增删改查方法。很方便\n</code></pre><h1 id=\"mybatis-generator-问题\"><a href=\"#mybatis-generator-问题\" class=\"headerlink\" title=\"mybatis-generator 问题\"></a>mybatis-generator 问题</h1><p>（mybatis-generator默认合并指的是 123 ， 234 合并完 是 123234，而我们需要的结果是1234）</p>\n<pre><code>1  生成一次 CourseMapper.java,CourseMapper.xml等文件。\n2  现在需要加个批量插入方法，在CouseMapper.java里加  \n    public int batchInsert(List&lt;Course&gt; list);\n    在CourseMapper.xml里加\n      &lt;insert id=&quot;batchInsert&quot; parameterType=&quot;cc.gukeer.smartBoard.persistence.entity.Course&quot;&gt;\n         your sql\n      &lt;/insert&gt;\n3  现在数据库加了个字段a，需要对文件再次生成  我们发现，xml里面，updateByPrimaryKey 这样的方法再次生成了一次，而且CourseMapper.java里 的batchInsert 这个方法已经没有了。之前写的代码也就被覆盖了或者出现了问题。我们必须得回滚。。\n\n4 为了解决这个问题，我们不得不扩展 CourseMapper.xml \n写 A_CourseMapper.xml 对应 CourseMapper.xml \n写 A_CourseMapper.xml 对应 CourseMapper.xml\n并把我们的批量方法写到A_***里面，这样再次生成就不会被覆盖了。那么问题来了：\n</code></pre><p><img src=\"/2017/12/15/mybatis-generator-源码浅析与修改/images/mybatis_mapper.png\" alt=\"logo\"></p>\n<pre><code>从图中可以看到，这无疑使得我们的文件更繁多，维护更加复杂。\n</code></pre><h1 id=\"问题解决-xml合并\"><a href=\"#问题解决-xml合并\" class=\"headerlink\" title=\"问题解决-xml合并\"></a>问题解决-xml合并</h1><pre><code>出现这个问题的原因，我们主要来看一下generator的源码：\norg.mybatis.generator.api.MyBatisGenerator 的generate方法，是生成文件的一个入口。\n\n\nfor (GeneratedXmlFile gxf : this.generatedXmlFiles){\n  this.projects.add(gxf.getTargetProject());\n  File targetFile;\n  String source;\n  try{\n    File directory = this.shellCallback.getDirectory(gxf.getTargetProject(), gxf.getTargetPackage());\n    targetFile = new File(directory, gxf.getFileName());\n    if (targetFile.exists()){\n      String source;\n      if (gxf.isMergeable()){\n        source = XmlFileMergerJaxp.getMergedSource(gxf, targetFile);\n      }else if (this.shellCallback.isOverwriteEnabled()){\n        String source = gxf.getFormattedContent();\n        this.warnings.add(Messages.getString(&quot;Warning.11&quot;, targetFile.getAbsolutePath()));\n      }else{\n      String source = gxf.getFormattedContent();\n        targetFile = getUniqueFileName(directory, gxf.getFileName());\n        this.warnings.add(Messages.getString(&quot;Warning.2&quot;, targetFile.getAbsolutePath()));\n      }\n    }\n</code></pre><p>  其中 有对gxf（GeneratedXmlFile） 是否合并判断，如果合并true，将新旧xml通过这个方法合并取合并得到的结果字符串，写到新的文件中。 XmlFileMergerJaxp.getMergedSource </p>\n<p> XmlFileMergerJaxp.getMergedSource 部分代码如下：</p>\n<pre><code>  DocumentType newDocType = newDocument.getDoctype();\n  ...\n  List&lt;Node&gt; nodesToDelete = new ArrayList();\n  NodeList children = existingRootElement.getChildNodes();\n  int length = children.getLength();\n  for (int i = 0; i &lt; length; i++)\n{\n  Node node = children.item(i);\n  if (isGeneratedNode(node)) {\n    nodesToDelete.add(node);\n  } else if ((isWhiteSpace(node)) &amp;&amp; (isGeneratedNode(children.item(i + 1)))) {\n    nodesToDelete.add(node);\n  }\n}\nfor (Node node : nodesToDelete) {\n  existingRootElement.removeChild(node);\n}\n</code></pre><p>这里采用的是org.w3c.dom.* 来解析的新旧xml文件。我们发现，这里有对旧文件遍历，判断这个节点方法是否已经生成过。如果是已经生成 isGeneratedNode的节点，那么加入到 nodesToDelete里面，最后把它给移除。那么问题就出在这个 isGeneratedNode判断方法上</p>\n<pre><code>    private static boolean isGeneratedNode(Node node)\n{\n  boolean rc = false;\n  if ((node != null) &amp;&amp; (node.getNodeType() == 1))\n  {\n    Element element = (Element)node;\n    String id = element.getAttribute(&quot;id&quot;);\n    if (id != null) {\n      for (String prefix : MergeConstants.OLD_XML_ELEMENT_PREFIXES) {\n        if (id.startsWith(prefix))\n        {\n          rc = true;\n          break;\n        }\n      }\n    }\n    if (!rc)\n    {\n      NodeList children = node.getChildNodes();\n      int length = children.getLength();\n      for (int i = 0; i &lt; length; i++)\n      {\n        Node childNode = children.item(i);\n        if (!isWhiteSpace(childNode))\n        {\n          if (childNode.getNodeType() != 8) {\n            break;\n          }\n          Comment comment = (Comment)childNode;\n          String commentData = comment.getData();\n          for (String tag : MergeConstants.OLD_ELEMENT_TAGS) {\n            if (commentData.contains(tag))\n            {\n              rc = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  return rc;\n}\n</code></pre><p>其实我们的需求是，之前有个<insert id=\"insertSelective\">方法,又生成了<insert id=\"insertSelective\"><br>,我们当然想用新的覆盖旧的，但是这里的判断显然不是根据这个id来判断的，所以这个方法返回false，<insert id=\"insertSelective\">这个方法又会追加生成一次。</insert></insert></insert></p>\n<p>说到这里，我们只需要这样稍微修改一下即可：将新生成的节点列表保存为一个集合a。判断旧节点的id是否包含在这个集合a里面，如果在，那么旧的节点就删除。</p>\n<p>具体代码如下：</p>\n<pre><code>    //获取新生成的所有xml，所有element的id列表，删除之前同名的结点\n    NodeList newMethods = newRootElement.getChildNodes();\n      List&lt;String&gt; methods = new ArrayList&lt;String&gt;();\n      for (int i = 0; i &lt; newMethods.getLength(); i++) {\n          Node node = newMethods.item(i);\n          try {\n              if (node instanceof DeferredTextImpl) {\n                  continue;\n              }\n              Element ele = (Element) node;\n              methods.add(ele.getAttribute(&quot;id&quot;));\n          } catch (Exception e) {\n              //#text节点转换会异常\n              continue;\n          }\n          if (i == newMethods.getLength() - 1) {\n              if (isWhiteSpace(node)) {\n                  break;\n              }\n          }\n      }\n\n\nprivate static boolean isGeneratedNode(Node node, List&lt;String&gt; methods) {\n    boolean rc = false;\n\n    if (node != null &amp;&amp; node.getNodeType() == Node.ELEMENT_NODE) {\n        Element element = (Element) node;\n        String id = element.getAttribute(&quot;id&quot;); //$NON-NLS-1$\n        if (methods.contains(id)) {\n            return true;\n        }\n\n        if (id != null) {\n            for (String prefix : MergeConstants.OLD_XML_ELEMENT_PREFIXES) {\n                if (id.startsWith(prefix)) {\n                    rc = true;\n                    break;\n                }\n            }\n        }\n\n\n     这样我们就能实现 xml新的覆盖旧的，并且保留旧的文件里自己写的方法，达到合并的效果。\n</code></pre><h1 id=\"问题解决-java合并\"><a href=\"#问题解决-java合并\" class=\"headerlink\" title=\"问题解决-java合并\"></a>问题解决-java合并</h1><pre><code>//和xml类似，这个是java代码合并判断代码\n   for (GeneratedJavaFile gjf : this.generatedJavaFiles)\n  {\n    this.projects.add(gjf.getTargetProject());\n    try\n    {\n      File directory = this.shellCallback.getDirectory(gjf.getTargetProject(), gjf.getTargetPackage());\n\n      File targetFile = new File(directory, gjf.getFileName());\n      String source;\n      if (targetFile.exists()) {\n        String source;\n        if (this.shellCallback.isMergeSupported()){\n          source = this.shellCallback.mergeJavaFile(gjf.getFormattedContent(), targetFile.getAbsolutePath(), MergeConstants.OLD_ELEMENT_TAGS, gjf.getFileEncoding());\n        }else if (this.shellCallback.isOverwriteEnabled()){\n          String source = gjf.getFormattedContent();\n          this.warnings.add(Messages.getString(&quot;Warning.11&quot;, targetFile.getAbsolutePath()));\n        } else{\n        String source = gjf.getFormattedContent();\n          targetFile = getUniqueFileName(directory, gjf.getFileName());\n\n          this.warnings.add(Messages.getString(&quot;Warning.2&quot;, targetFile.getAbsolutePath()));\n        }\n      }\n</code></pre><p>我们来看看java代码合并的实现：this.shellCallback.mergeJavaFile</p>\n<pre><code>public String mergeJavaFile(String newFileSource, String existingFileFullPath, String[] javadocTags, String fileEncoding)\n    throws ShellException\n  {\n    throw new UnsupportedOperationException();\n  }\n</code></pre><p>很遗憾，它并不支持java合并。我们需要自己实现java合并。此处参考：<a href=\"http://blog.csdn.net/w980994974/article/details/76904587\">http://blog.csdn.net/w980994974/article/details/76904587</a><br>   直接上代码：</p>\n<pre><code>package org.mybatis.generator.internal;\n\nimport com.github.javaparser.JavaParser;\nimport com.github.javaparser.ast.CompilationUnit;\nimport com.github.javaparser.ast.ImportDeclaration;\nimport com.github.javaparser.ast.Node;\nimport com.github.javaparser.ast.NodeList;\nimport com.github.javaparser.ast.body.FieldDeclaration;\nimport com.github.javaparser.ast.body.MethodDeclaration;\nimport com.github.javaparser.ast.body.TypeDeclaration;\nimport org.mybatis.generator.config.MergeConstants;\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport static org.mybatis.generator.api.dom.OutputUtilities.newLine;\n\npublic class JavaFileMergerJaxp {\n    public String getNewJavaFile(String newFileSource, String existingFileFullPath) throws FileNotFoundException {\n        CompilationUnit newCompilationUnit = JavaParser.parse(newFileSource);\n        CompilationUnit existingCompilationUnit = JavaParser.parse(new File(existingFileFullPath));\n        return mergerFile(newCompilationUnit, existingCompilationUnit);\n    }\n\n    public String mergerFile(CompilationUnit newCompilationUnit, CompilationUnit existingCompilationUnit) {\n\n        System.out.println(&quot;合并java代码&quot;);\n        StringBuilder sb = new StringBuilder(newCompilationUnit.getPackageDeclaration().get().toString());\n        newCompilationUnit.removePackageDeclaration();\n\n        //合并imports\n        NodeList&lt;ImportDeclaration&gt; imports = newCompilationUnit.getImports();\n        imports.addAll(existingCompilationUnit.getImports());\n        Set importSet = new HashSet&lt;ImportDeclaration&gt;();\n        importSet.addAll(imports);\n\n        NodeList&lt;ImportDeclaration&gt; newImports = new NodeList&lt;ImportDeclaration&gt;();\n        newImports.addAll(importSet);\n        newCompilationUnit.setImports(newImports);\n        for (ImportDeclaration i : newCompilationUnit.getImports()) {\n            sb.append(i.toString());\n        }\n        newLine(sb);\n        NodeList&lt;TypeDeclaration&lt;?&gt;&gt; types = newCompilationUnit.getTypes();\n        NodeList&lt;TypeDeclaration&lt;?&gt;&gt; oldTypes = existingCompilationUnit.getTypes();\n\n        for (int i = 0; i &lt; types.size(); i++) {\n            //截取Class\n            String classNameInfo = types.get(i).toString().substring(0, types.get(i).toString().indexOf(&quot;{&quot;) + 1);\n            sb.append(classNameInfo);\n            newLine(sb);\n            newLine(sb);\n            //合并fields\n            List&lt;FieldDeclaration&gt; fields = types.get(i).getFields();\n            List&lt;FieldDeclaration&gt; oldFields = oldTypes.get(i).getFields();\n            List&lt;FieldDeclaration&gt; newFields = new ArrayList&lt;FieldDeclaration&gt;();\n            HashSet&lt;FieldDeclaration&gt; fieldDeclarations = new HashSet&lt;FieldDeclaration&gt;();\n            fieldDeclarations.addAll(fields);\n            fieldDeclarations.addAll(oldFields);\n            newFields.addAll(fieldDeclarations);\n            for (FieldDeclaration f : newFields) {\n                sb.append(&quot;\\t&quot; + f.toString());\n                newLine(sb);\n                newLine(sb);\n            }\n\n            //合并methods\n            List&lt;MethodDeclaration&gt; methods = types.get(i).getMethods();\n            List&lt;MethodDeclaration&gt; existingMethods = oldTypes.get(i).getMethods();\n\n            for (MethodDeclaration f : methods) {\n                String res = f.toString().replaceAll(&quot;\\r\\n&quot;, &quot;\\r\\n\\t&quot;);\n                sb.append(&quot;\\t&quot; + res);\n                newLine(sb);\n                newLine(sb);\n            }\n\n            List&lt;String&gt; methodList = new ArrayList&lt;String&gt;();\n            for (MethodDeclaration m : methods) {\n                methodList.add(m.getName().toString());\n            }\n            methodList.add(&quot;toString&quot;);\n            methodList.add(&quot;hashCode&quot;);\n            methodList.add(&quot;equals&quot;);\n\n            for (MethodDeclaration m : existingMethods) {\n                if (methodList.contains(m.getName().toString())) {\n                    continue;\n                }\n\n                boolean flag = true;\n                for (String tag : MergeConstants.OLD_ELEMENT_TAGS) {\n                    if (m.toString().contains(tag)) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    String res = m.toString().replaceAll(&quot;\\r\\n&quot;, &quot;\\r\\n\\t&quot;);\n                    sb.append(&quot;\\t&quot; + res);\n                    newLine(sb);\n                    newLine(sb);\n                }\n            }\n\n            //判断是否有内部类\n            types.get(i).getChildNodes();\n            for (Node n : types.get(i).getChildNodes()) {\n                if (n.toString().contains(&quot;static class&quot;)) {\n                    String res = n.toString().replaceAll(&quot;\\r\\n&quot;, &quot;\\r\\n\\t&quot;);\n                    sb.append(&quot;\\t&quot; + res);\n                }\n            }\n\n        }\n\n        return sb.append(System.getProperty(&quot;line.separator&quot;) + &quot;}&quot;).toString();\n    }\n\n}\n</code></pre><p>   参考 上面网址得到的代码稍微加了一些新旧方法的判断，逻辑和xml合并类似。不再赘述。</p>\n<p>   ps：其中java，xml是覆盖模式，还是合并模式，通过配置实现，</p>\n<pre><code>&lt;context id=&quot;MySQLTables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;\n &lt;!--true为合并，false为覆盖，新生成的文件会完全覆盖旧文件--&gt;\n  &lt;property name=&quot;xmlMergeable&quot; value=&quot;true&quot; /&gt;\n  &lt;property name=&quot;javaMergeable&quot; value=&quot;true&quot; /&gt;\n</code></pre><h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>源码修改好了之后，jar包下载地址：<br>    <a href=\"http://download.csdn.net/download/zjy1211079133/10159514\">http://download.csdn.net/download/zjy1211079133/10159514</a></p>\n<h2 id=\"使用方法：（下载jar包，替换你本地的pom使用的jar包-mybatis-generator-core-version-jar）\"><a href=\"#使用方法：（下载jar包，替换你本地的pom使用的jar包-mybatis-generator-core-version-jar）\" class=\"headerlink\" title=\"使用方法：（下载jar包，替换你本地的pom使用的jar包 mybatis-generator-core-version.jar）\"></a>使用方法：（下载jar包，替换你本地的pom使用的jar包 mybatis-generator-core-version.jar）</h2><p>pom.xml配置：</p>\n<pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;\n    &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;\n    &lt;version&gt;1.3.2&lt;/version&gt;\n    &lt;configuration&gt;\n        &lt;configurationFile&gt;src/main/resources/mybatis-generator.xml&lt;/configurationFile&gt;\n        &lt;verbose&gt;true&lt;/verbose&gt;\n        &lt;overwrite&gt;true&lt;/overwrite&gt;\n    &lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre><p> mybatis-generator.xml 配置：（其他公用配置自行百度）</p>\n<pre><code>  &lt;context id=&quot;MySQLTables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;\n&lt;!--true为合并，false为覆盖，新生成的文件会完全覆盖旧文件--&gt;\n &lt;property name=&quot;xmlMergeable&quot; value=&quot;true&quot; /&gt;\n &lt;property name=&quot;javaMergeable&quot; value=&quot;true&quot; /&gt;\n</code></pre><p>生成即可。具体参照：<a href=\"http://blog.csdn.net/isea533/article/details/42102297\">http://blog.csdn.net/isea533/article/details/42102297</a> 使用</p>\n"},{"title":"mybatis-genrator的自定义注释和修改生成文件名字","author":"zjy","date":"2018-05-29T05:11:40.000Z","_content":"# 需求：将数据库的comment字段生成到代码的注释里面\n\n\n## 1 pom.xml添加如下\n\t\n    \t\t\t\t<dependency>\n                        <groupId>org.mybatis.generator</groupId>\n                        <artifactId>mybatis-generator-core</artifactId>\n                        <version>1.3.4</version>\n                    </dependency>\n                    \n## 2 mybatis-generator.xml\n\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <!DOCTYPE generatorConfiguration\n            PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"\n            \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">\n\n    <generatorConfiguration>\n        <!-- 配置文件路径 -->\n        <properties resource=\"db.properties\"/>\n\n        <!-- 数据库驱动包路径 -->\n        <classPathEntry location=\"${drive.class.path}\"/>\n\n        <context id=\"MySQLTables\" targetRuntime=\"MyBatis3\">\n            <!-- 抑制警告 -->\n            <property name=\"suppressTypeWarnings\" value=\"true\" />\n\n            <!-- generate entity时，生成hashcode和equals方法 -->\n            <plugin type=\"org.mybatis.generator.plugins.EqualsHashCodePlugin\" />\n            <!-- generate entity时，生成serialVersionUID -->\n            <plugin type=\"org.mybatis.generator.plugins.SerializablePlugin\" />\n            <!-- 这个插件只会增加字符串字段映射到一个JDBC字符的方法 -->\n            <plugin type=\"org.mybatis.generator.plugins.CaseInsensitiveLikePlugin\" />\n            <!-- genenat entity时,生成toString -->\n            <plugin type=\"org.mybatis.generator.plugins.ToStringPlugin\" />\n\n            <!-- 抑制生成代码的注释 -->\n            <!--<commentGenerator>\n                &lt;!&ndash;<property name=\"suppressAllComments\" value=\"true\" />&ndash;&gt;\n            </commentGenerator>-->\n            \n            <!-- 这里采用mybatis自定义的注释生成器 -->\n            <commentGenerator type=\"cc.ligu.mvc.common.MyCommentGenerator\">\n            </commentGenerator>\n\n            <!-- 数据库连接信息 -->\n            <jdbcConnection driverClass=\"${jdbc.driver}\" connectionURL=\"${jdbc.url}\" userId=\"${jdbc.username}\"\n                            password=\"${jdbc.password}\">\n            </jdbcConnection>\n\n            <!-- 生成的model 包路径 -->\n            <javaModelGenerator targetPackage=\"${model.package}\" targetProject=\"${target.project}\">\n                <property name=\"enableSubPackages\" value=\"ture\"/>\n                <property name=\"trimStrings\" value=\"true\"/>\n            </javaModelGenerator>\n\n            <!-- 生成xml mapper文件 路径 -->\n            <sqlMapGenerator targetPackage=\"${xml.mapper.package}\" targetProject=\"${target.project}\">\n                <property name=\"enableSubPackages\" value=\"ture\"/>\n            </sqlMapGenerator>\n\n            <!-- 生成的Dao接口 的包路径 -->\n            <javaClientGenerator type=\"XMLMAPPER\" targetPackage=\"${dao.package}\" targetProject=\"${target.project}\">\n                <property name=\"enableSubPackages\" value=\"ture\"/>\n            </javaClientGenerator>    \n\n            <!-- 文档库[doc_source 用户] 注意这里的mapperName属性在 generator.1.3.4以后才有，是生成的Mapper文件的名称-->\n            <table schema=\"ligu\" tableName=\"setCallCenter\" domainObjectName=\"CallCenter\" mapperName=\"CallCenterDao\"\n                   enableCountByExample=\"false\"\n                   enableUpdateByExample=\"true\"\n                   enableDeleteByExample=\"true\"\n                   enableSelectByExample=\"true\"\n                   selectByExampleQueryId=\"true\">\n                <property name=\"useActualColumnNames\" value=\"false\"/>\n            </table>\n\n        </context>\n    </generatorConfiguration>\n    \n    \n    \n## 3 db.properties\n\t#db config\n    jdbc.script=filesystem:D:/codes/git/smartBoard/src/main/resources/db/migrations\n    jdbc.driver=com.mysql.jdbc.Driver\n    jdbc.url=jdbc:mysql://47.94.98.20:3308/ligu?useUnicode=true&characterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false\n    jdbc.username=root\n    jdbc.password=123\n\n  \n    # 数据库驱动jar 路径\n    drive.class.path=D:\\\\zjywork\\\\mysql-connector-java-5.1.25.jar\n\n    target.project=C:\\\\Users\\\\shenyy\\\\Desktop\n    # 包路径配置\n    model.package=cc.ligu.mvc.persistence.entity\n    dao.package=cc.ligu.mvc.persistence.dao\n    xml.mapper.package=cc.ligu.mvc.persistence.mapping\n    \n## 4 MyCommentGenerator\n\tpackage cc.ligu.mvc.common;\n    import org.mybatis.generator.api.CommentGenerator;\n    import org.mybatis.generator.api.IntrospectedColumn;\n    import org.mybatis.generator.api.IntrospectedTable;\n    import org.mybatis.generator.api.dom.java.*;\n    import org.mybatis.generator.api.dom.xml.XmlElement;\n    import org.mybatis.generator.config.MergeConstants;\n    import org.mybatis.generator.config.PropertyRegistry;\n    import java.text.SimpleDateFormat;\n    import java.util.Date;\n    import java.util.Properties;\n    import static org.mybatis.generator.internal.util.StringUtility.isTrue;\n\n    /**\n     * mybatis generator 自定义comment生成器.\n     * 基于MBG 1.3.2. \n     *\n     */\n    public class MyCommentGenerator implements CommentGenerator {\n\n        private Properties properties;\n        private Properties systemPro;\n        private boolean suppressDate;\n        private boolean suppressAllComments;\n        private String currentDateStr;\n\n        public MyCommentGenerator() {\n            super();\n            properties = new Properties();\n            systemPro = System.getProperties();\n            suppressDate = false;\n            suppressAllComments = false;\n            currentDateStr = (new SimpleDateFormat(\"yyyy-MM-dd\")).format(new Date());\n        }\n\n        public void addJavaFileComment(CompilationUnit compilationUnit) {\n            // add no file level comments by default\n            return;\n        }\n\n        /**\n         * Adds a suitable comment to warn users that the element was generated, and\n         * when it was generated.\n         */\n        public void addComment(XmlElement xmlElement) {\n            return;\n        }\n\n        public void addRootComment(XmlElement rootElement) {\n            // add no document level comments by default\n            return;\n        }\n\n        public void addConfigurationProperties(Properties properties) {\n            this.properties.putAll(properties);\n\n            suppressDate = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_DATE));\n\n            suppressAllComments = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_ALL_COMMENTS));\n        }\n\n        /**\n         * This method adds the custom javadoc tag for. You may do nothing if you do\n         * not wish to include the Javadoc tag - however, if you do not include the\n         * Javadoc tag then the Java merge capability of the eclipse plugin will\n         * break.\n         *\n         * @param javaElement the java element\n         */\n        protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) {\n            javaElement.addJavaDocLine(\" *\");\n            StringBuilder sb = new StringBuilder();\n            sb.append(\" * \");\n            sb.append(MergeConstants.NEW_ELEMENT_TAG);\n            if (markAsDoNotDelete) {\n                sb.append(\" do_not_delete_during_merge\");\n            }\n            String s = getDateString();\n            if (s != null) {\n                sb.append(' ');\n                sb.append(s);\n            }\n            javaElement.addJavaDocLine(sb.toString());\n        }\n\n        /**\n         * This method returns a formated date string to include in the Javadoc tag\n         * and XML comments. You may return null if you do not want the date in\n         * these documentation elements.\n         *\n         * @return a string representing the current timestamp, or null\n         */\n        protected String getDateString() {\n            String result = null;\n            if (!suppressDate) {\n                result = currentDateStr;\n            }\n            return result;\n        }\n\n        public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {\n            if (suppressAllComments) {\n                return;\n            }\n            StringBuilder sb = new StringBuilder();\n            innerClass.addJavaDocLine(\"/**\");\n            sb.append(\" * \");\n            sb.append(introspectedTable.getFullyQualifiedTable());\n            sb.append(\" \");\n            sb.append(getDateString());\n            innerClass.addJavaDocLine(sb.toString());\n            innerClass.addJavaDocLine(\" */\");\n        }\n\n        public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            StringBuilder sb = new StringBuilder();\n\n            innerEnum.addJavaDocLine(\"/**\");\n            //      addJavadocTag(innerEnum, false);\n            sb.append(\" * \");\n            sb.append(introspectedTable.getFullyQualifiedTable());\n            innerEnum.addJavaDocLine(sb.toString());\n            innerEnum.addJavaDocLine(\" */\");\n        }\n\n        public void addFieldComment(Field field, IntrospectedTable introspectedTable,\n                                    IntrospectedColumn introspectedColumn) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            StringBuilder sb = new StringBuilder();\n\n            field.addJavaDocLine(\"/**\");\n            sb.append(\" * \");\n            //这里就是数据库的注释\n            sb.append(introspectedColumn.getRemarks());\n            field.addJavaDocLine(sb.toString());\n\n            //      addJavadocTag(field, false);\n\n            field.addJavaDocLine(\" */\");\n        }\n\n        public void addFieldComment(Field field, IntrospectedTable introspectedTable) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            StringBuilder sb = new StringBuilder();\n\n            field.addJavaDocLine(\"/**\");\n            sb.append(\" * \");\n            sb.append(introspectedTable.getFullyQualifiedTable());\n            field.addJavaDocLine(sb.toString());\n            field.addJavaDocLine(\" */\");\n        }\n\n        @Override\n        public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {\n\n        }\n\n        public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {\n            if (suppressAllComments) {\n                return;\n            }\n            //      method.addJavaDocLine(\"/**\");\n            //      addJavadocTag(method, false);\n            //      method.addJavaDocLine(\" */\");\n        }\n\n        public void addGetterComment(Method method, IntrospectedTable introspectedTable,\n                                     IntrospectedColumn introspectedColumn) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            method.addJavaDocLine(\"/**\");\n\n            StringBuilder sb = new StringBuilder();\n            sb.append(\" * 获取\");\n            sb.append(introspectedColumn.getRemarks());\n            method.addJavaDocLine(sb.toString());\n\n            sb.setLength(0);\n            sb.append(\" * @return \");\n            sb.append(introspectedColumn.getActualColumnName());\n            sb.append(\" \");\n            sb.append(introspectedColumn.getRemarks());\n            method.addJavaDocLine(sb.toString());\n\n            //      addJavadocTag(method, false);\n\n            method.addJavaDocLine(\" */\");\n        }\n\n        public void addSetterComment(Method method, IntrospectedTable introspectedTable,\n                                     IntrospectedColumn introspectedColumn) {\n            if (suppressAllComments) {\n                return;\n            }\n\n\n            method.addJavaDocLine(\"/**\");\n            StringBuilder sb = new StringBuilder();\n            sb.append(\" * 设置\");\n            sb.append(introspectedColumn.getRemarks());\n            method.addJavaDocLine(sb.toString());\n\n            Parameter parm = method.getParameters().get(0);\n            sb.setLength(0);\n            sb.append(\" * @param \");\n            sb.append(parm.getName());\n            sb.append(\" \");\n            sb.append(introspectedColumn.getRemarks());\n            method.addJavaDocLine(sb.toString());\n\n            //      addJavadocTag(method, false);\n\n            method.addJavaDocLine(\" */\");\n        }\n\n        public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            StringBuilder sb = new StringBuilder();\n\n            innerClass.addJavaDocLine(\"/**\");\n            sb.append(\" * \");\n            sb.append(introspectedTable.getFullyQualifiedTable());\n            innerClass.addJavaDocLine(sb.toString());\n\n            sb.setLength(0);\n            sb.append(\" * @author \");\n            sb.append(systemPro.getProperty(\"user.name\"));\n            sb.append(\" \");\n            sb.append(currentDateStr);\n\n            //      addJavadocTag(innerClass, markAsDoNotDelete);\n\n            innerClass.addJavaDocLine(\" */\");\n        }\n    }\n\n## 5 生成\n\tpackage cc.ligu.mvc.common;\n\n    import org.mybatis.generator.api.MyBatisGenerator;\n    import org.mybatis.generator.config.Configuration;\n    import org.mybatis.generator.config.xml.ConfigurationParser;\n    import org.mybatis.generator.exception.InvalidConfigurationException;\n    import org.mybatis.generator.exception.XMLParserException;\n    import org.mybatis.generator.internal.DefaultShellCallback;\n\n    import java.io.File;\n    import java.io.IOException;\n    import java.io.InputStream;\n    import java.net.URISyntaxException;\n    import java.sql.SQLException;\n    import java.util.ArrayList;\n    import java.util.List;\n\n    /**\n     * 描述：使用Java方式运行MBG\n     */\n    public class GeneratorStartUp {\n        public static void main(String[] args) throws URISyntaxException {\n            try {\n                List<String> warnings = new ArrayList<String>();\n                boolean overwrite = true;\n                File configFile = new File(\"D:\\\\zjywork\\\\ligu\\\\src\\\\main\\\\resources\\\\mybatis-generator.xml\");\n                ConfigurationParser cp = new ConfigurationParser(warnings);\n                Configuration config = cp.parseConfiguration(configFile);\n                DefaultShellCallback callback = new DefaultShellCallback(overwrite);\n                MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);\n                myBatisGenerator.generate(null);\n            } catch (SQLException e) {\n                e.printStackTrace();\n            } catch (IOException e) {\n                e.printStackTrace();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            } catch (InvalidConfigurationException e) {\n                e.printStackTrace();\n            } catch (XMLParserException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","source":"_posts/mybatis-genrator的自定义注释和修改生成文件名字.md","raw":"title: mybatis-genrator的自定义注释和修改生成文件名字\nauthor: zjy\ndate: 2018-05-29 13:11:40\ntags:\n---\n# 需求：将数据库的comment字段生成到代码的注释里面\n\n\n## 1 pom.xml添加如下\n\t\n    \t\t\t\t<dependency>\n                        <groupId>org.mybatis.generator</groupId>\n                        <artifactId>mybatis-generator-core</artifactId>\n                        <version>1.3.4</version>\n                    </dependency>\n                    \n## 2 mybatis-generator.xml\n\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <!DOCTYPE generatorConfiguration\n            PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"\n            \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">\n\n    <generatorConfiguration>\n        <!-- 配置文件路径 -->\n        <properties resource=\"db.properties\"/>\n\n        <!-- 数据库驱动包路径 -->\n        <classPathEntry location=\"${drive.class.path}\"/>\n\n        <context id=\"MySQLTables\" targetRuntime=\"MyBatis3\">\n            <!-- 抑制警告 -->\n            <property name=\"suppressTypeWarnings\" value=\"true\" />\n\n            <!-- generate entity时，生成hashcode和equals方法 -->\n            <plugin type=\"org.mybatis.generator.plugins.EqualsHashCodePlugin\" />\n            <!-- generate entity时，生成serialVersionUID -->\n            <plugin type=\"org.mybatis.generator.plugins.SerializablePlugin\" />\n            <!-- 这个插件只会增加字符串字段映射到一个JDBC字符的方法 -->\n            <plugin type=\"org.mybatis.generator.plugins.CaseInsensitiveLikePlugin\" />\n            <!-- genenat entity时,生成toString -->\n            <plugin type=\"org.mybatis.generator.plugins.ToStringPlugin\" />\n\n            <!-- 抑制生成代码的注释 -->\n            <!--<commentGenerator>\n                &lt;!&ndash;<property name=\"suppressAllComments\" value=\"true\" />&ndash;&gt;\n            </commentGenerator>-->\n            \n            <!-- 这里采用mybatis自定义的注释生成器 -->\n            <commentGenerator type=\"cc.ligu.mvc.common.MyCommentGenerator\">\n            </commentGenerator>\n\n            <!-- 数据库连接信息 -->\n            <jdbcConnection driverClass=\"${jdbc.driver}\" connectionURL=\"${jdbc.url}\" userId=\"${jdbc.username}\"\n                            password=\"${jdbc.password}\">\n            </jdbcConnection>\n\n            <!-- 生成的model 包路径 -->\n            <javaModelGenerator targetPackage=\"${model.package}\" targetProject=\"${target.project}\">\n                <property name=\"enableSubPackages\" value=\"ture\"/>\n                <property name=\"trimStrings\" value=\"true\"/>\n            </javaModelGenerator>\n\n            <!-- 生成xml mapper文件 路径 -->\n            <sqlMapGenerator targetPackage=\"${xml.mapper.package}\" targetProject=\"${target.project}\">\n                <property name=\"enableSubPackages\" value=\"ture\"/>\n            </sqlMapGenerator>\n\n            <!-- 生成的Dao接口 的包路径 -->\n            <javaClientGenerator type=\"XMLMAPPER\" targetPackage=\"${dao.package}\" targetProject=\"${target.project}\">\n                <property name=\"enableSubPackages\" value=\"ture\"/>\n            </javaClientGenerator>    \n\n            <!-- 文档库[doc_source 用户] 注意这里的mapperName属性在 generator.1.3.4以后才有，是生成的Mapper文件的名称-->\n            <table schema=\"ligu\" tableName=\"setCallCenter\" domainObjectName=\"CallCenter\" mapperName=\"CallCenterDao\"\n                   enableCountByExample=\"false\"\n                   enableUpdateByExample=\"true\"\n                   enableDeleteByExample=\"true\"\n                   enableSelectByExample=\"true\"\n                   selectByExampleQueryId=\"true\">\n                <property name=\"useActualColumnNames\" value=\"false\"/>\n            </table>\n\n        </context>\n    </generatorConfiguration>\n    \n    \n    \n## 3 db.properties\n\t#db config\n    jdbc.script=filesystem:D:/codes/git/smartBoard/src/main/resources/db/migrations\n    jdbc.driver=com.mysql.jdbc.Driver\n    jdbc.url=jdbc:mysql://47.94.98.20:3308/ligu?useUnicode=true&characterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false\n    jdbc.username=root\n    jdbc.password=123\n\n  \n    # 数据库驱动jar 路径\n    drive.class.path=D:\\\\zjywork\\\\mysql-connector-java-5.1.25.jar\n\n    target.project=C:\\\\Users\\\\shenyy\\\\Desktop\n    # 包路径配置\n    model.package=cc.ligu.mvc.persistence.entity\n    dao.package=cc.ligu.mvc.persistence.dao\n    xml.mapper.package=cc.ligu.mvc.persistence.mapping\n    \n## 4 MyCommentGenerator\n\tpackage cc.ligu.mvc.common;\n    import org.mybatis.generator.api.CommentGenerator;\n    import org.mybatis.generator.api.IntrospectedColumn;\n    import org.mybatis.generator.api.IntrospectedTable;\n    import org.mybatis.generator.api.dom.java.*;\n    import org.mybatis.generator.api.dom.xml.XmlElement;\n    import org.mybatis.generator.config.MergeConstants;\n    import org.mybatis.generator.config.PropertyRegistry;\n    import java.text.SimpleDateFormat;\n    import java.util.Date;\n    import java.util.Properties;\n    import static org.mybatis.generator.internal.util.StringUtility.isTrue;\n\n    /**\n     * mybatis generator 自定义comment生成器.\n     * 基于MBG 1.3.2. \n     *\n     */\n    public class MyCommentGenerator implements CommentGenerator {\n\n        private Properties properties;\n        private Properties systemPro;\n        private boolean suppressDate;\n        private boolean suppressAllComments;\n        private String currentDateStr;\n\n        public MyCommentGenerator() {\n            super();\n            properties = new Properties();\n            systemPro = System.getProperties();\n            suppressDate = false;\n            suppressAllComments = false;\n            currentDateStr = (new SimpleDateFormat(\"yyyy-MM-dd\")).format(new Date());\n        }\n\n        public void addJavaFileComment(CompilationUnit compilationUnit) {\n            // add no file level comments by default\n            return;\n        }\n\n        /**\n         * Adds a suitable comment to warn users that the element was generated, and\n         * when it was generated.\n         */\n        public void addComment(XmlElement xmlElement) {\n            return;\n        }\n\n        public void addRootComment(XmlElement rootElement) {\n            // add no document level comments by default\n            return;\n        }\n\n        public void addConfigurationProperties(Properties properties) {\n            this.properties.putAll(properties);\n\n            suppressDate = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_DATE));\n\n            suppressAllComments = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_ALL_COMMENTS));\n        }\n\n        /**\n         * This method adds the custom javadoc tag for. You may do nothing if you do\n         * not wish to include the Javadoc tag - however, if you do not include the\n         * Javadoc tag then the Java merge capability of the eclipse plugin will\n         * break.\n         *\n         * @param javaElement the java element\n         */\n        protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) {\n            javaElement.addJavaDocLine(\" *\");\n            StringBuilder sb = new StringBuilder();\n            sb.append(\" * \");\n            sb.append(MergeConstants.NEW_ELEMENT_TAG);\n            if (markAsDoNotDelete) {\n                sb.append(\" do_not_delete_during_merge\");\n            }\n            String s = getDateString();\n            if (s != null) {\n                sb.append(' ');\n                sb.append(s);\n            }\n            javaElement.addJavaDocLine(sb.toString());\n        }\n\n        /**\n         * This method returns a formated date string to include in the Javadoc tag\n         * and XML comments. You may return null if you do not want the date in\n         * these documentation elements.\n         *\n         * @return a string representing the current timestamp, or null\n         */\n        protected String getDateString() {\n            String result = null;\n            if (!suppressDate) {\n                result = currentDateStr;\n            }\n            return result;\n        }\n\n        public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {\n            if (suppressAllComments) {\n                return;\n            }\n            StringBuilder sb = new StringBuilder();\n            innerClass.addJavaDocLine(\"/**\");\n            sb.append(\" * \");\n            sb.append(introspectedTable.getFullyQualifiedTable());\n            sb.append(\" \");\n            sb.append(getDateString());\n            innerClass.addJavaDocLine(sb.toString());\n            innerClass.addJavaDocLine(\" */\");\n        }\n\n        public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            StringBuilder sb = new StringBuilder();\n\n            innerEnum.addJavaDocLine(\"/**\");\n            //      addJavadocTag(innerEnum, false);\n            sb.append(\" * \");\n            sb.append(introspectedTable.getFullyQualifiedTable());\n            innerEnum.addJavaDocLine(sb.toString());\n            innerEnum.addJavaDocLine(\" */\");\n        }\n\n        public void addFieldComment(Field field, IntrospectedTable introspectedTable,\n                                    IntrospectedColumn introspectedColumn) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            StringBuilder sb = new StringBuilder();\n\n            field.addJavaDocLine(\"/**\");\n            sb.append(\" * \");\n            //这里就是数据库的注释\n            sb.append(introspectedColumn.getRemarks());\n            field.addJavaDocLine(sb.toString());\n\n            //      addJavadocTag(field, false);\n\n            field.addJavaDocLine(\" */\");\n        }\n\n        public void addFieldComment(Field field, IntrospectedTable introspectedTable) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            StringBuilder sb = new StringBuilder();\n\n            field.addJavaDocLine(\"/**\");\n            sb.append(\" * \");\n            sb.append(introspectedTable.getFullyQualifiedTable());\n            field.addJavaDocLine(sb.toString());\n            field.addJavaDocLine(\" */\");\n        }\n\n        @Override\n        public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {\n\n        }\n\n        public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {\n            if (suppressAllComments) {\n                return;\n            }\n            //      method.addJavaDocLine(\"/**\");\n            //      addJavadocTag(method, false);\n            //      method.addJavaDocLine(\" */\");\n        }\n\n        public void addGetterComment(Method method, IntrospectedTable introspectedTable,\n                                     IntrospectedColumn introspectedColumn) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            method.addJavaDocLine(\"/**\");\n\n            StringBuilder sb = new StringBuilder();\n            sb.append(\" * 获取\");\n            sb.append(introspectedColumn.getRemarks());\n            method.addJavaDocLine(sb.toString());\n\n            sb.setLength(0);\n            sb.append(\" * @return \");\n            sb.append(introspectedColumn.getActualColumnName());\n            sb.append(\" \");\n            sb.append(introspectedColumn.getRemarks());\n            method.addJavaDocLine(sb.toString());\n\n            //      addJavadocTag(method, false);\n\n            method.addJavaDocLine(\" */\");\n        }\n\n        public void addSetterComment(Method method, IntrospectedTable introspectedTable,\n                                     IntrospectedColumn introspectedColumn) {\n            if (suppressAllComments) {\n                return;\n            }\n\n\n            method.addJavaDocLine(\"/**\");\n            StringBuilder sb = new StringBuilder();\n            sb.append(\" * 设置\");\n            sb.append(introspectedColumn.getRemarks());\n            method.addJavaDocLine(sb.toString());\n\n            Parameter parm = method.getParameters().get(0);\n            sb.setLength(0);\n            sb.append(\" * @param \");\n            sb.append(parm.getName());\n            sb.append(\" \");\n            sb.append(introspectedColumn.getRemarks());\n            method.addJavaDocLine(sb.toString());\n\n            //      addJavadocTag(method, false);\n\n            method.addJavaDocLine(\" */\");\n        }\n\n        public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) {\n            if (suppressAllComments) {\n                return;\n            }\n\n            StringBuilder sb = new StringBuilder();\n\n            innerClass.addJavaDocLine(\"/**\");\n            sb.append(\" * \");\n            sb.append(introspectedTable.getFullyQualifiedTable());\n            innerClass.addJavaDocLine(sb.toString());\n\n            sb.setLength(0);\n            sb.append(\" * @author \");\n            sb.append(systemPro.getProperty(\"user.name\"));\n            sb.append(\" \");\n            sb.append(currentDateStr);\n\n            //      addJavadocTag(innerClass, markAsDoNotDelete);\n\n            innerClass.addJavaDocLine(\" */\");\n        }\n    }\n\n## 5 生成\n\tpackage cc.ligu.mvc.common;\n\n    import org.mybatis.generator.api.MyBatisGenerator;\n    import org.mybatis.generator.config.Configuration;\n    import org.mybatis.generator.config.xml.ConfigurationParser;\n    import org.mybatis.generator.exception.InvalidConfigurationException;\n    import org.mybatis.generator.exception.XMLParserException;\n    import org.mybatis.generator.internal.DefaultShellCallback;\n\n    import java.io.File;\n    import java.io.IOException;\n    import java.io.InputStream;\n    import java.net.URISyntaxException;\n    import java.sql.SQLException;\n    import java.util.ArrayList;\n    import java.util.List;\n\n    /**\n     * 描述：使用Java方式运行MBG\n     */\n    public class GeneratorStartUp {\n        public static void main(String[] args) throws URISyntaxException {\n            try {\n                List<String> warnings = new ArrayList<String>();\n                boolean overwrite = true;\n                File configFile = new File(\"D:\\\\zjywork\\\\ligu\\\\src\\\\main\\\\resources\\\\mybatis-generator.xml\");\n                ConfigurationParser cp = new ConfigurationParser(warnings);\n                Configuration config = cp.parseConfiguration(configFile);\n                DefaultShellCallback callback = new DefaultShellCallback(overwrite);\n                MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);\n                myBatisGenerator.generate(null);\n            } catch (SQLException e) {\n                e.printStackTrace();\n            } catch (IOException e) {\n                e.printStackTrace();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            } catch (InvalidConfigurationException e) {\n                e.printStackTrace();\n            } catch (XMLParserException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","slug":"mybatis-genrator的自定义注释和修改生成文件名字","published":1,"updated":"2018-05-29T05:19:19.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eqp000yawpfqxlqvgsy","content":"<h1 id=\"需求：将数据库的comment字段生成到代码的注释里面\"><a href=\"#需求：将数据库的comment字段生成到代码的注释里面\" class=\"headerlink\" title=\"需求：将数据库的comment字段生成到代码的注释里面\"></a>需求：将数据库的comment字段生成到代码的注释里面</h1><h2 id=\"1-pom-xml添加如下\"><a href=\"#1-pom-xml添加如下\" class=\"headerlink\" title=\"1 pom.xml添加如下\"></a>1 pom.xml添加如下</h2><pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;\n    &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;\n    &lt;version&gt;1.3.4&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre><h2 id=\"2-mybatis-generator-xml\"><a href=\"#2-mybatis-generator-xml\" class=\"headerlink\" title=\"2 mybatis-generator.xml\"></a>2 mybatis-generator.xml</h2><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE generatorConfiguration\n        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;\n        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;\n\n&lt;generatorConfiguration&gt;\n    &lt;!-- 配置文件路径 --&gt;\n    &lt;properties resource=&quot;db.properties&quot;/&gt;\n\n    &lt;!-- 数据库驱动包路径 --&gt;\n    &lt;classPathEntry location=&quot;${drive.class.path}&quot;/&gt;\n\n    &lt;context id=&quot;MySQLTables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;\n        &lt;!-- 抑制警告 --&gt;\n        &lt;property name=&quot;suppressTypeWarnings&quot; value=&quot;true&quot; /&gt;\n\n        &lt;!-- generate entity时，生成hashcode和equals方法 --&gt;\n        &lt;plugin type=&quot;org.mybatis.generator.plugins.EqualsHashCodePlugin&quot; /&gt;\n        &lt;!-- generate entity时，生成serialVersionUID --&gt;\n        &lt;plugin type=&quot;org.mybatis.generator.plugins.SerializablePlugin&quot; /&gt;\n        &lt;!-- 这个插件只会增加字符串字段映射到一个JDBC字符的方法 --&gt;\n        &lt;plugin type=&quot;org.mybatis.generator.plugins.CaseInsensitiveLikePlugin&quot; /&gt;\n        &lt;!-- genenat entity时,生成toString --&gt;\n        &lt;plugin type=&quot;org.mybatis.generator.plugins.ToStringPlugin&quot; /&gt;\n\n        &lt;!-- 抑制生成代码的注释 --&gt;\n        &lt;!--&lt;commentGenerator&gt;\n            &amp;lt;!&amp;ndash;&lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot; /&gt;&amp;ndash;&amp;gt;\n        &lt;/commentGenerator&gt;--&gt;\n\n        &lt;!-- 这里采用mybatis自定义的注释生成器 --&gt;\n        &lt;commentGenerator type=&quot;cc.ligu.mvc.common.MyCommentGenerator&quot;&gt;\n        &lt;/commentGenerator&gt;\n\n        &lt;!-- 数据库连接信息 --&gt;\n        &lt;jdbcConnection driverClass=&quot;${jdbc.driver}&quot; connectionURL=&quot;${jdbc.url}&quot; userId=&quot;${jdbc.username}&quot;\n                        password=&quot;${jdbc.password}&quot;&gt;\n        &lt;/jdbcConnection&gt;\n\n        &lt;!-- 生成的model 包路径 --&gt;\n        &lt;javaModelGenerator targetPackage=&quot;${model.package}&quot; targetProject=&quot;${target.project}&quot;&gt;\n            &lt;property name=&quot;enableSubPackages&quot; value=&quot;ture&quot;/&gt;\n            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;\n        &lt;/javaModelGenerator&gt;\n\n        &lt;!-- 生成xml mapper文件 路径 --&gt;\n        &lt;sqlMapGenerator targetPackage=&quot;${xml.mapper.package}&quot; targetProject=&quot;${target.project}&quot;&gt;\n            &lt;property name=&quot;enableSubPackages&quot; value=&quot;ture&quot;/&gt;\n        &lt;/sqlMapGenerator&gt;\n\n        &lt;!-- 生成的Dao接口 的包路径 --&gt;\n        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;${dao.package}&quot; targetProject=&quot;${target.project}&quot;&gt;\n            &lt;property name=&quot;enableSubPackages&quot; value=&quot;ture&quot;/&gt;\n        &lt;/javaClientGenerator&gt;    \n\n        &lt;!-- 文档库[doc_source 用户] 注意这里的mapperName属性在 generator.1.3.4以后才有，是生成的Mapper文件的名称--&gt;\n        &lt;table schema=&quot;ligu&quot; tableName=&quot;setCallCenter&quot; domainObjectName=&quot;CallCenter&quot; mapperName=&quot;CallCenterDao&quot;\n               enableCountByExample=&quot;false&quot;\n               enableUpdateByExample=&quot;true&quot;\n               enableDeleteByExample=&quot;true&quot;\n               enableSelectByExample=&quot;true&quot;\n               selectByExampleQueryId=&quot;true&quot;&gt;\n            &lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;\n        &lt;/table&gt;\n\n    &lt;/context&gt;\n&lt;/generatorConfiguration&gt;\n</code></pre><h2 id=\"3-db-properties\"><a href=\"#3-db-properties\" class=\"headerlink\" title=\"3 db.properties\"></a>3 db.properties</h2><pre><code>#db config\njdbc.script=filesystem:D:/codes/git/smartBoard/src/main/resources/db/migrations\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://47.94.98.20:3308/ligu?useUnicode=true&amp;characterEncoding=utf-8&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&amp;useSSL=false\njdbc.username=root\njdbc.password=123\n\n\n# 数据库驱动jar 路径\ndrive.class.path=D:\\\\zjywork\\\\mysql-connector-java-5.1.25.jar\n\ntarget.project=C:\\\\Users\\\\shenyy\\\\Desktop\n# 包路径配置\nmodel.package=cc.ligu.mvc.persistence.entity\ndao.package=cc.ligu.mvc.persistence.dao\nxml.mapper.package=cc.ligu.mvc.persistence.mapping\n</code></pre><h2 id=\"4-MyCommentGenerator\"><a href=\"#4-MyCommentGenerator\" class=\"headerlink\" title=\"4 MyCommentGenerator\"></a>4 MyCommentGenerator</h2><pre><code>package cc.ligu.mvc.common;\nimport org.mybatis.generator.api.CommentGenerator;\nimport org.mybatis.generator.api.IntrospectedColumn;\nimport org.mybatis.generator.api.IntrospectedTable;\nimport org.mybatis.generator.api.dom.java.*;\nimport org.mybatis.generator.api.dom.xml.XmlElement;\nimport org.mybatis.generator.config.MergeConstants;\nimport org.mybatis.generator.config.PropertyRegistry;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Properties;\nimport static org.mybatis.generator.internal.util.StringUtility.isTrue;\n\n/**\n * mybatis generator 自定义comment生成器.\n * 基于MBG 1.3.2. \n *\n */\npublic class MyCommentGenerator implements CommentGenerator {\n\n    private Properties properties;\n    private Properties systemPro;\n    private boolean suppressDate;\n    private boolean suppressAllComments;\n    private String currentDateStr;\n\n    public MyCommentGenerator() {\n        super();\n        properties = new Properties();\n        systemPro = System.getProperties();\n        suppressDate = false;\n        suppressAllComments = false;\n        currentDateStr = (new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)).format(new Date());\n    }\n\n    public void addJavaFileComment(CompilationUnit compilationUnit) {\n        // add no file level comments by default\n        return;\n    }\n\n    /**\n     * Adds a suitable comment to warn users that the element was generated, and\n     * when it was generated.\n     */\n    public void addComment(XmlElement xmlElement) {\n        return;\n    }\n\n    public void addRootComment(XmlElement rootElement) {\n        // add no document level comments by default\n        return;\n    }\n\n    public void addConfigurationProperties(Properties properties) {\n        this.properties.putAll(properties);\n\n        suppressDate = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_DATE));\n\n        suppressAllComments = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_ALL_COMMENTS));\n    }\n\n    /**\n     * This method adds the custom javadoc tag for. You may do nothing if you do\n     * not wish to include the Javadoc tag - however, if you do not include the\n     * Javadoc tag then the Java merge capability of the eclipse plugin will\n     * break.\n     *\n     * @param javaElement the java element\n     */\n    protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) {\n        javaElement.addJavaDocLine(&quot; *&quot;);\n        StringBuilder sb = new StringBuilder();\n        sb.append(&quot; * &quot;);\n        sb.append(MergeConstants.NEW_ELEMENT_TAG);\n        if (markAsDoNotDelete) {\n            sb.append(&quot; do_not_delete_during_merge&quot;);\n        }\n        String s = getDateString();\n        if (s != null) {\n            sb.append(&apos; &apos;);\n            sb.append(s);\n        }\n        javaElement.addJavaDocLine(sb.toString());\n    }\n\n    /**\n     * This method returns a formated date string to include in the Javadoc tag\n     * and XML comments. You may return null if you do not want the date in\n     * these documentation elements.\n     *\n     * @return a string representing the current timestamp, or null\n     */\n    protected String getDateString() {\n        String result = null;\n        if (!suppressDate) {\n            result = currentDateStr;\n        }\n        return result;\n    }\n\n    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {\n        if (suppressAllComments) {\n            return;\n        }\n        StringBuilder sb = new StringBuilder();\n        innerClass.addJavaDocLine(&quot;/**&quot;);\n        sb.append(&quot; * &quot;);\n        sb.append(introspectedTable.getFullyQualifiedTable());\n        sb.append(&quot; &quot;);\n        sb.append(getDateString());\n        innerClass.addJavaDocLine(sb.toString());\n        innerClass.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        innerEnum.addJavaDocLine(&quot;/**&quot;);\n        //      addJavadocTag(innerEnum, false);\n        sb.append(&quot; * &quot;);\n        sb.append(introspectedTable.getFullyQualifiedTable());\n        innerEnum.addJavaDocLine(sb.toString());\n        innerEnum.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addFieldComment(Field field, IntrospectedTable introspectedTable,\n                                IntrospectedColumn introspectedColumn) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        field.addJavaDocLine(&quot;/**&quot;);\n        sb.append(&quot; * &quot;);\n        //这里就是数据库的注释\n        sb.append(introspectedColumn.getRemarks());\n        field.addJavaDocLine(sb.toString());\n\n        //      addJavadocTag(field, false);\n\n        field.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addFieldComment(Field field, IntrospectedTable introspectedTable) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        field.addJavaDocLine(&quot;/**&quot;);\n        sb.append(&quot; * &quot;);\n        sb.append(introspectedTable.getFullyQualifiedTable());\n        field.addJavaDocLine(sb.toString());\n        field.addJavaDocLine(&quot; */&quot;);\n    }\n\n    @Override\n    public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {\n\n    }\n\n    public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {\n        if (suppressAllComments) {\n            return;\n        }\n        //      method.addJavaDocLine(&quot;/**&quot;);\n        //      addJavadocTag(method, false);\n        //      method.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addGetterComment(Method method, IntrospectedTable introspectedTable,\n                                 IntrospectedColumn introspectedColumn) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        method.addJavaDocLine(&quot;/**&quot;);\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(&quot; * 获取&quot;);\n        sb.append(introspectedColumn.getRemarks());\n        method.addJavaDocLine(sb.toString());\n\n        sb.setLength(0);\n        sb.append(&quot; * @return &quot;);\n        sb.append(introspectedColumn.getActualColumnName());\n        sb.append(&quot; &quot;);\n        sb.append(introspectedColumn.getRemarks());\n        method.addJavaDocLine(sb.toString());\n\n        //      addJavadocTag(method, false);\n\n        method.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addSetterComment(Method method, IntrospectedTable introspectedTable,\n                                 IntrospectedColumn introspectedColumn) {\n        if (suppressAllComments) {\n            return;\n        }\n\n\n        method.addJavaDocLine(&quot;/**&quot;);\n        StringBuilder sb = new StringBuilder();\n        sb.append(&quot; * 设置&quot;);\n        sb.append(introspectedColumn.getRemarks());\n        method.addJavaDocLine(sb.toString());\n\n        Parameter parm = method.getParameters().get(0);\n        sb.setLength(0);\n        sb.append(&quot; * @param &quot;);\n        sb.append(parm.getName());\n        sb.append(&quot; &quot;);\n        sb.append(introspectedColumn.getRemarks());\n        method.addJavaDocLine(sb.toString());\n\n        //      addJavadocTag(method, false);\n\n        method.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        innerClass.addJavaDocLine(&quot;/**&quot;);\n        sb.append(&quot; * &quot;);\n        sb.append(introspectedTable.getFullyQualifiedTable());\n        innerClass.addJavaDocLine(sb.toString());\n\n        sb.setLength(0);\n        sb.append(&quot; * @author &quot;);\n        sb.append(systemPro.getProperty(&quot;user.name&quot;));\n        sb.append(&quot; &quot;);\n        sb.append(currentDateStr);\n\n        //      addJavadocTag(innerClass, markAsDoNotDelete);\n\n        innerClass.addJavaDocLine(&quot; */&quot;);\n    }\n}\n</code></pre><h2 id=\"5-生成\"><a href=\"#5-生成\" class=\"headerlink\" title=\"5 生成\"></a>5 生成</h2><pre><code>package cc.ligu.mvc.common;\n\nimport org.mybatis.generator.api.MyBatisGenerator;\nimport org.mybatis.generator.config.Configuration;\nimport org.mybatis.generator.config.xml.ConfigurationParser;\nimport org.mybatis.generator.exception.InvalidConfigurationException;\nimport org.mybatis.generator.exception.XMLParserException;\nimport org.mybatis.generator.internal.DefaultShellCallback;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.URISyntaxException;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * 描述：使用Java方式运行MBG\n */\npublic class GeneratorStartUp {\n    public static void main(String[] args) throws URISyntaxException {\n        try {\n            List&lt;String&gt; warnings = new ArrayList&lt;String&gt;();\n            boolean overwrite = true;\n            File configFile = new File(&quot;D:\\\\zjywork\\\\ligu\\\\src\\\\main\\\\resources\\\\mybatis-generator.xml&quot;);\n            ConfigurationParser cp = new ConfigurationParser(warnings);\n            Configuration config = cp.parseConfiguration(configFile);\n            DefaultShellCallback callback = new DefaultShellCallback(overwrite);\n            MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);\n            myBatisGenerator.generate(null);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } catch (InvalidConfigurationException e) {\n            e.printStackTrace();\n        } catch (XMLParserException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求：将数据库的comment字段生成到代码的注释里面\"><a href=\"#需求：将数据库的comment字段生成到代码的注释里面\" class=\"headerlink\" title=\"需求：将数据库的comment字段生成到代码的注释里面\"></a>需求：将数据库的comment字段生成到代码的注释里面</h1><h2 id=\"1-pom-xml添加如下\"><a href=\"#1-pom-xml添加如下\" class=\"headerlink\" title=\"1 pom.xml添加如下\"></a>1 pom.xml添加如下</h2><pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;\n    &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;\n    &lt;version&gt;1.3.4&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre><h2 id=\"2-mybatis-generator-xml\"><a href=\"#2-mybatis-generator-xml\" class=\"headerlink\" title=\"2 mybatis-generator.xml\"></a>2 mybatis-generator.xml</h2><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE generatorConfiguration\n        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;\n        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;\n\n&lt;generatorConfiguration&gt;\n    &lt;!-- 配置文件路径 --&gt;\n    &lt;properties resource=&quot;db.properties&quot;/&gt;\n\n    &lt;!-- 数据库驱动包路径 --&gt;\n    &lt;classPathEntry location=&quot;${drive.class.path}&quot;/&gt;\n\n    &lt;context id=&quot;MySQLTables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;\n        &lt;!-- 抑制警告 --&gt;\n        &lt;property name=&quot;suppressTypeWarnings&quot; value=&quot;true&quot; /&gt;\n\n        &lt;!-- generate entity时，生成hashcode和equals方法 --&gt;\n        &lt;plugin type=&quot;org.mybatis.generator.plugins.EqualsHashCodePlugin&quot; /&gt;\n        &lt;!-- generate entity时，生成serialVersionUID --&gt;\n        &lt;plugin type=&quot;org.mybatis.generator.plugins.SerializablePlugin&quot; /&gt;\n        &lt;!-- 这个插件只会增加字符串字段映射到一个JDBC字符的方法 --&gt;\n        &lt;plugin type=&quot;org.mybatis.generator.plugins.CaseInsensitiveLikePlugin&quot; /&gt;\n        &lt;!-- genenat entity时,生成toString --&gt;\n        &lt;plugin type=&quot;org.mybatis.generator.plugins.ToStringPlugin&quot; /&gt;\n\n        &lt;!-- 抑制生成代码的注释 --&gt;\n        &lt;!--&lt;commentGenerator&gt;\n            &amp;lt;!&amp;ndash;&lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot; /&gt;&amp;ndash;&amp;gt;\n        &lt;/commentGenerator&gt;--&gt;\n\n        &lt;!-- 这里采用mybatis自定义的注释生成器 --&gt;\n        &lt;commentGenerator type=&quot;cc.ligu.mvc.common.MyCommentGenerator&quot;&gt;\n        &lt;/commentGenerator&gt;\n\n        &lt;!-- 数据库连接信息 --&gt;\n        &lt;jdbcConnection driverClass=&quot;${jdbc.driver}&quot; connectionURL=&quot;${jdbc.url}&quot; userId=&quot;${jdbc.username}&quot;\n                        password=&quot;${jdbc.password}&quot;&gt;\n        &lt;/jdbcConnection&gt;\n\n        &lt;!-- 生成的model 包路径 --&gt;\n        &lt;javaModelGenerator targetPackage=&quot;${model.package}&quot; targetProject=&quot;${target.project}&quot;&gt;\n            &lt;property name=&quot;enableSubPackages&quot; value=&quot;ture&quot;/&gt;\n            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;\n        &lt;/javaModelGenerator&gt;\n\n        &lt;!-- 生成xml mapper文件 路径 --&gt;\n        &lt;sqlMapGenerator targetPackage=&quot;${xml.mapper.package}&quot; targetProject=&quot;${target.project}&quot;&gt;\n            &lt;property name=&quot;enableSubPackages&quot; value=&quot;ture&quot;/&gt;\n        &lt;/sqlMapGenerator&gt;\n\n        &lt;!-- 生成的Dao接口 的包路径 --&gt;\n        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;${dao.package}&quot; targetProject=&quot;${target.project}&quot;&gt;\n            &lt;property name=&quot;enableSubPackages&quot; value=&quot;ture&quot;/&gt;\n        &lt;/javaClientGenerator&gt;    \n\n        &lt;!-- 文档库[doc_source 用户] 注意这里的mapperName属性在 generator.1.3.4以后才有，是生成的Mapper文件的名称--&gt;\n        &lt;table schema=&quot;ligu&quot; tableName=&quot;setCallCenter&quot; domainObjectName=&quot;CallCenter&quot; mapperName=&quot;CallCenterDao&quot;\n               enableCountByExample=&quot;false&quot;\n               enableUpdateByExample=&quot;true&quot;\n               enableDeleteByExample=&quot;true&quot;\n               enableSelectByExample=&quot;true&quot;\n               selectByExampleQueryId=&quot;true&quot;&gt;\n            &lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;\n        &lt;/table&gt;\n\n    &lt;/context&gt;\n&lt;/generatorConfiguration&gt;\n</code></pre><h2 id=\"3-db-properties\"><a href=\"#3-db-properties\" class=\"headerlink\" title=\"3 db.properties\"></a>3 db.properties</h2><pre><code>#db config\njdbc.script=filesystem:D:/codes/git/smartBoard/src/main/resources/db/migrations\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://47.94.98.20:3308/ligu?useUnicode=true&amp;characterEncoding=utf-8&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&amp;useSSL=false\njdbc.username=root\njdbc.password=123\n\n\n# 数据库驱动jar 路径\ndrive.class.path=D:\\\\zjywork\\\\mysql-connector-java-5.1.25.jar\n\ntarget.project=C:\\\\Users\\\\shenyy\\\\Desktop\n# 包路径配置\nmodel.package=cc.ligu.mvc.persistence.entity\ndao.package=cc.ligu.mvc.persistence.dao\nxml.mapper.package=cc.ligu.mvc.persistence.mapping\n</code></pre><h2 id=\"4-MyCommentGenerator\"><a href=\"#4-MyCommentGenerator\" class=\"headerlink\" title=\"4 MyCommentGenerator\"></a>4 MyCommentGenerator</h2><pre><code>package cc.ligu.mvc.common;\nimport org.mybatis.generator.api.CommentGenerator;\nimport org.mybatis.generator.api.IntrospectedColumn;\nimport org.mybatis.generator.api.IntrospectedTable;\nimport org.mybatis.generator.api.dom.java.*;\nimport org.mybatis.generator.api.dom.xml.XmlElement;\nimport org.mybatis.generator.config.MergeConstants;\nimport org.mybatis.generator.config.PropertyRegistry;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Properties;\nimport static org.mybatis.generator.internal.util.StringUtility.isTrue;\n\n/**\n * mybatis generator 自定义comment生成器.\n * 基于MBG 1.3.2. \n *\n */\npublic class MyCommentGenerator implements CommentGenerator {\n\n    private Properties properties;\n    private Properties systemPro;\n    private boolean suppressDate;\n    private boolean suppressAllComments;\n    private String currentDateStr;\n\n    public MyCommentGenerator() {\n        super();\n        properties = new Properties();\n        systemPro = System.getProperties();\n        suppressDate = false;\n        suppressAllComments = false;\n        currentDateStr = (new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)).format(new Date());\n    }\n\n    public void addJavaFileComment(CompilationUnit compilationUnit) {\n        // add no file level comments by default\n        return;\n    }\n\n    /**\n     * Adds a suitable comment to warn users that the element was generated, and\n     * when it was generated.\n     */\n    public void addComment(XmlElement xmlElement) {\n        return;\n    }\n\n    public void addRootComment(XmlElement rootElement) {\n        // add no document level comments by default\n        return;\n    }\n\n    public void addConfigurationProperties(Properties properties) {\n        this.properties.putAll(properties);\n\n        suppressDate = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_DATE));\n\n        suppressAllComments = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_ALL_COMMENTS));\n    }\n\n    /**\n     * This method adds the custom javadoc tag for. You may do nothing if you do\n     * not wish to include the Javadoc tag - however, if you do not include the\n     * Javadoc tag then the Java merge capability of the eclipse plugin will\n     * break.\n     *\n     * @param javaElement the java element\n     */\n    protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) {\n        javaElement.addJavaDocLine(&quot; *&quot;);\n        StringBuilder sb = new StringBuilder();\n        sb.append(&quot; * &quot;);\n        sb.append(MergeConstants.NEW_ELEMENT_TAG);\n        if (markAsDoNotDelete) {\n            sb.append(&quot; do_not_delete_during_merge&quot;);\n        }\n        String s = getDateString();\n        if (s != null) {\n            sb.append(&apos; &apos;);\n            sb.append(s);\n        }\n        javaElement.addJavaDocLine(sb.toString());\n    }\n\n    /**\n     * This method returns a formated date string to include in the Javadoc tag\n     * and XML comments. You may return null if you do not want the date in\n     * these documentation elements.\n     *\n     * @return a string representing the current timestamp, or null\n     */\n    protected String getDateString() {\n        String result = null;\n        if (!suppressDate) {\n            result = currentDateStr;\n        }\n        return result;\n    }\n\n    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {\n        if (suppressAllComments) {\n            return;\n        }\n        StringBuilder sb = new StringBuilder();\n        innerClass.addJavaDocLine(&quot;/**&quot;);\n        sb.append(&quot; * &quot;);\n        sb.append(introspectedTable.getFullyQualifiedTable());\n        sb.append(&quot; &quot;);\n        sb.append(getDateString());\n        innerClass.addJavaDocLine(sb.toString());\n        innerClass.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        innerEnum.addJavaDocLine(&quot;/**&quot;);\n        //      addJavadocTag(innerEnum, false);\n        sb.append(&quot; * &quot;);\n        sb.append(introspectedTable.getFullyQualifiedTable());\n        innerEnum.addJavaDocLine(sb.toString());\n        innerEnum.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addFieldComment(Field field, IntrospectedTable introspectedTable,\n                                IntrospectedColumn introspectedColumn) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        field.addJavaDocLine(&quot;/**&quot;);\n        sb.append(&quot; * &quot;);\n        //这里就是数据库的注释\n        sb.append(introspectedColumn.getRemarks());\n        field.addJavaDocLine(sb.toString());\n\n        //      addJavadocTag(field, false);\n\n        field.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addFieldComment(Field field, IntrospectedTable introspectedTable) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        field.addJavaDocLine(&quot;/**&quot;);\n        sb.append(&quot; * &quot;);\n        sb.append(introspectedTable.getFullyQualifiedTable());\n        field.addJavaDocLine(sb.toString());\n        field.addJavaDocLine(&quot; */&quot;);\n    }\n\n    @Override\n    public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {\n\n    }\n\n    public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {\n        if (suppressAllComments) {\n            return;\n        }\n        //      method.addJavaDocLine(&quot;/**&quot;);\n        //      addJavadocTag(method, false);\n        //      method.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addGetterComment(Method method, IntrospectedTable introspectedTable,\n                                 IntrospectedColumn introspectedColumn) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        method.addJavaDocLine(&quot;/**&quot;);\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(&quot; * 获取&quot;);\n        sb.append(introspectedColumn.getRemarks());\n        method.addJavaDocLine(sb.toString());\n\n        sb.setLength(0);\n        sb.append(&quot; * @return &quot;);\n        sb.append(introspectedColumn.getActualColumnName());\n        sb.append(&quot; &quot;);\n        sb.append(introspectedColumn.getRemarks());\n        method.addJavaDocLine(sb.toString());\n\n        //      addJavadocTag(method, false);\n\n        method.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addSetterComment(Method method, IntrospectedTable introspectedTable,\n                                 IntrospectedColumn introspectedColumn) {\n        if (suppressAllComments) {\n            return;\n        }\n\n\n        method.addJavaDocLine(&quot;/**&quot;);\n        StringBuilder sb = new StringBuilder();\n        sb.append(&quot; * 设置&quot;);\n        sb.append(introspectedColumn.getRemarks());\n        method.addJavaDocLine(sb.toString());\n\n        Parameter parm = method.getParameters().get(0);\n        sb.setLength(0);\n        sb.append(&quot; * @param &quot;);\n        sb.append(parm.getName());\n        sb.append(&quot; &quot;);\n        sb.append(introspectedColumn.getRemarks());\n        method.addJavaDocLine(sb.toString());\n\n        //      addJavadocTag(method, false);\n\n        method.addJavaDocLine(&quot; */&quot;);\n    }\n\n    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) {\n        if (suppressAllComments) {\n            return;\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        innerClass.addJavaDocLine(&quot;/**&quot;);\n        sb.append(&quot; * &quot;);\n        sb.append(introspectedTable.getFullyQualifiedTable());\n        innerClass.addJavaDocLine(sb.toString());\n\n        sb.setLength(0);\n        sb.append(&quot; * @author &quot;);\n        sb.append(systemPro.getProperty(&quot;user.name&quot;));\n        sb.append(&quot; &quot;);\n        sb.append(currentDateStr);\n\n        //      addJavadocTag(innerClass, markAsDoNotDelete);\n\n        innerClass.addJavaDocLine(&quot; */&quot;);\n    }\n}\n</code></pre><h2 id=\"5-生成\"><a href=\"#5-生成\" class=\"headerlink\" title=\"5 生成\"></a>5 生成</h2><pre><code>package cc.ligu.mvc.common;\n\nimport org.mybatis.generator.api.MyBatisGenerator;\nimport org.mybatis.generator.config.Configuration;\nimport org.mybatis.generator.config.xml.ConfigurationParser;\nimport org.mybatis.generator.exception.InvalidConfigurationException;\nimport org.mybatis.generator.exception.XMLParserException;\nimport org.mybatis.generator.internal.DefaultShellCallback;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.URISyntaxException;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * 描述：使用Java方式运行MBG\n */\npublic class GeneratorStartUp {\n    public static void main(String[] args) throws URISyntaxException {\n        try {\n            List&lt;String&gt; warnings = new ArrayList&lt;String&gt;();\n            boolean overwrite = true;\n            File configFile = new File(&quot;D:\\\\zjywork\\\\ligu\\\\src\\\\main\\\\resources\\\\mybatis-generator.xml&quot;);\n            ConfigurationParser cp = new ConfigurationParser(warnings);\n            Configuration config = cp.parseConfiguration(configFile);\n            DefaultShellCallback callback = new DefaultShellCallback(overwrite);\n            MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);\n            myBatisGenerator.generate(null);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } catch (InvalidConfigurationException e) {\n            e.printStackTrace();\n        } catch (XMLParserException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>"},{"title":"mybatis-plus代码生成步骤","author":"zjy","date":"2018-05-31T05:58:24.000Z","_content":"# 1 pom文件\n\npom文件添加如下依赖\n          \n          <!-- https://mvnreository.com/artifact/com.baomidou/mybatis-plus -->\n              <dependency>\n                  <groupId>com.baomidou</groupId>\n                  <artifactId>mybatis-plus</artifactId>\n                  <version>2.1.9</version>\n              </dependency>\n              \n# 2 配置文件 mybatis-plus.properties\n\t#此处为本项目src所在路径（代码生成器输出路径）\n    outputDir=D:\\\\zjywork\\\\ligu\\\\src\\\\main\\\\java\n\n    #下面为各个代码生成的包路径\n    entity.path=cc.ligu.test.persistence.entity\n    mapper.path=cc.ligu.test.persistence.dao\n    xml.path=cc.ligu.test.persistence.mapping\n    service.path=cc.ligu.test.service\n    serviceImpl.path=cc.ligu.test.service.impl\n    controller.path=cc.ligu.test.controller\n\n    #各个文件生成的文件名格式(例如：mapper.配置成:DTO%sMapper,就会生成：DTOUserMapper.java这样。%s是必要配置)\n    mapper.name=%sMapper\n    xml.name=%sMapper\n    service.name=%sService\n    serviceImpl.name=%sServiceImpl\n    controller.name=%sController\n\n    #数据库表名(此处如果为空，则默认读取数据库的所有表名，)\n    tableName=doc_question,doc_source\n\n    #代码生成的注释的作者\n    author=zjy\n\n    #数据库参数\n    jdbc.driver=com.mysql.jdbc.Driver\n    jdbc.url=jdbc:mysql://127.0.0.1:3308/test?useUnicode=true&characterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false\n    jdbc.userName=root\n    jdbc.password=test\n    \n# 3 生成入口 MyBatisPlusGenerator.java\n\n\n\tpackage cc.ligu.mvc.common;\n\n      import java.io.InputStream;\n      import java.util.HashMap;\n      import java.util.Map;\n      import java.util.Properties;\n\n      import com.baomidou.mybatisplus.generator.AutoGenerator;\n      import com.baomidou.mybatisplus.generator.InjectionConfig;\n      import com.baomidou.mybatisplus.generator.config.DataSourceConfig;\n      import com.baomidou.mybatisplus.generator.config.GlobalConfig;\n      import com.baomidou.mybatisplus.generator.config.PackageConfig;\n      import com.baomidou.mybatisplus.generator.config.StrategyConfig;\n      import com.baomidou.mybatisplus.generator.config.converts.MySqlTypeConvert;\n      import com.baomidou.mybatisplus.generator.config.converts.OracleTypeConvert;\n      import com.baomidou.mybatisplus.generator.config.rules.DbColumnType;\n      import com.baomidou.mybatisplus.generator.config.rules.DbType;\n      import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;\n      import org.springframework.core.io.ClassPathResource;\n\n      /**\n       * mybatis-plus代码生成器(用于生成entity)<br>\n       */\n      public class MyBatisPlusGenerator {\n\n          public static Properties getProperties(String path) {\n              Properties prop = null;\n              InputStream inStream = null;\n              try {\n                  prop = new Properties();\n                  inStream = new ClassPathResource(path).getInputStream();\n                  prop.load(inStream);\n                  inStream.close();\n              } catch (Exception e) {\n                  e.printStackTrace();\n              }\n              return prop;\n          }\n\n          public static void main(String[] args) {\n              Properties properties = getProperties(\"mybatis-plus.properties\");\n              AutoGenerator mpg = new AutoGenerator();\n\n              // 全局配置\n              GlobalConfig gc = new GlobalConfig();\n              gc.setOutputDir(properties.getProperty(\"outputDir\"));// 自己的java目录\n              gc.setFileOverride(true);// 是否覆盖\n              gc.setActiveRecord(true);\n              gc.setEnableCache(false);// XML 二级缓存\n              gc.setBaseResultMap(true);// XML ResultMap\n              gc.setBaseColumnList(false);// XML columList\n              gc.setAuthor(properties.getProperty(\"author\"));\n              gc .setMapperName(properties.getProperty(\"mapper.name\"))\n                      .setXmlName(properties.getProperty(\"xml.name\"))\n                      .setServiceName(properties.getProperty(\"service.name\"))\n                      .setServiceImplName(properties.getProperty(\"serviceImpl.name\"))\n                      .setControllerName(properties.getProperty(\"controller.name\"));\n              mpg.setGlobalConfig(gc);\n\n              // 数据源配置\n              DataSourceConfig dsc = new DataSourceConfig();\n              dsc.setDbType(DbType.MYSQL);\n              dsc.setTypeConvert(new MySqlTypeConvert() {\n                  // 自定义数据库表字段类型转换【可选】\n                  @Override\n                  public DbColumnType processTypeConvert(String fieldType) {\n                      return super.processTypeConvert(fieldType);\n                  }\n              });\n              /**数据库配置这块可以自己手写读取配置文件里的配置项，为了省事我直接copy**/\n              dsc.setDriverName(properties.getProperty(\"jdbc.driver\"));\n              dsc.setUsername(properties.getProperty(\"jdbc.userName\"));\n              dsc.setPassword(properties.getProperty(\"jdbc.password\"));\n              dsc.setUrl(properties.getProperty(\"jdbc.url\"));\n              mpg.setDataSource(dsc);\n\n              // 策略配置\n              StrategyConfig strategy = new StrategyConfig();\n              // strategy.setTablePrefix(new String[]{\"_\"});// 此处修改为表前缀\n              strategy.setNaming(NamingStrategy.underline_to_camel).setInclude(properties.getProperty(\"tableName\").split(\",\"));// 表名生成策略\n              mpg.setStrategy(strategy);\n              // 包配置\n              PackageConfig pc = new PackageConfig();\n              pc.setParent(null);\n              pc.setEntity(properties.getProperty(\"entity.path\"));\n              pc.setMapper(properties.getProperty(\"mapper.path\"));\n              pc.setXml(properties.getProperty(\"xml.path\"));\n              pc.setService(properties.getProperty(\"service.path\"));\n              pc.setServiceImpl(properties.getProperty(\"serviceImpl.path\"));\n              pc.setController(properties.getProperty(\"controller.path\"));\n              mpg.setPackageInfo(pc);\n\n              // 注入自定义配置，可以在 VM 中使用 cfg.abc 设置的值\n              InjectionConfig cfg = new InjectionConfig() {\n                  @Override\n                  public void initMap() {\n                      Map<String, Object> map = new HashMap<>();\n                      map.put(\"abc\", this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n                      this.setMap(map);\n                  }\n              };\n              mpg.setCfg(cfg);\n\n              // 执行生成\n              mpg.execute();\n\n              // 打印注入设置\n              System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n          }\n\n      }\n\n\n# 4效果图\n\n\n\n![logo](mybatis-plus代码生成步骤/1.png)\n\n\n\n# ps:集成spring-mvc的时候需要注意的地方\n\n## pom文件这两个依赖删除掉，否则会冲突\n\t <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.4.1</version>\n        </dependency>\n\n        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis-spring</artifactId>\n            <version>1.3.0</version>\n        </dependency>\n        \n        <!--删除上面两个依赖，用下面这个依赖代替 -->\n         <!-- https://mvnreository.com/artifact/com.baomidou/mybatis-plus -->\n        <dependency>\n            <groupId>com.baomidou</groupId>\n            <artifactId>mybatis-plus</artifactId>\n            <version>2.1.9</version>\n        </dependency>\n        \n## spirng-mybatis.xml配置,下面是局部配置，你自己的项目只需要把sqlSessionFactory 这个bean的class给换一下就行了，之前可能是：org.mybatis.spring.SqlSessionFactoryBean，把这个换成com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean\n            <bean id=\"sqlSessionFactory\" class=\"com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean\">\n            <property name=\"dataSource\" ref=\"dataSource\"/>\n            <!-- scan xml file -->\n            <property name=\"mapperLocations\" value=\"classpath:cc/ligu/**/persistence/mapping/*.xml\"></property>\n            <property name=\"typeAliasesPackage\" value=\"cc.ligu.**.persistence.entity\"/>\n            <property name=\"configLocation\" value=\"classpath:mybatis-config.xml\"></property>\n            <property name=\"globalConfig\" ref=\"globalConfig\" />\n            <property name=\"plugins\">\n                <array>\n                    <!-- 分页插件配置 -->\n                    <bean id=\"paginationInterceptor\"\n                          class=\"com.baomidou.mybatisplus.plugins.PaginationInterceptor\">\n                        <property name=\"dialectType\" value=\"mysql\" />\n                    </bean>\n                    <bean id=\"performanceInterceptor\"\n                          class=\"com.baomidou.mybatisplus.plugins.PerformanceInterceptor\" >\n                        <!-- 超过自动停止运行，有助于发现问题。 -->\n                        <property name=\"maxTime\" value=\"100\" />\n                        <!--SQL是否格式化 默认false-->\n                        <property name=\"format\" value=\"true\" />\n                    </bean>\n                </array>\n            </property>\n        </bean>\n\n        <bean id=\"globalConfig\" class=\"com.baomidou.mybatisplus.entity.GlobalConfiguration\">\n            <property name=\"idType\" value=\"2\" />\n            <property name=\"dbColumnUnderline\" value=\"true\" />\n            <property name=\"dbType\" value=\"mysql\"/>\n        </bean>","source":"_posts/mybatis-plus代码生成步骤.md","raw":"title: mybatis-plus代码生成步骤\nauthor: zjy\ndate: 2018-05-31 13:58:24\ntags:\n---\n# 1 pom文件\n\npom文件添加如下依赖\n          \n          <!-- https://mvnreository.com/artifact/com.baomidou/mybatis-plus -->\n              <dependency>\n                  <groupId>com.baomidou</groupId>\n                  <artifactId>mybatis-plus</artifactId>\n                  <version>2.1.9</version>\n              </dependency>\n              \n# 2 配置文件 mybatis-plus.properties\n\t#此处为本项目src所在路径（代码生成器输出路径）\n    outputDir=D:\\\\zjywork\\\\ligu\\\\src\\\\main\\\\java\n\n    #下面为各个代码生成的包路径\n    entity.path=cc.ligu.test.persistence.entity\n    mapper.path=cc.ligu.test.persistence.dao\n    xml.path=cc.ligu.test.persistence.mapping\n    service.path=cc.ligu.test.service\n    serviceImpl.path=cc.ligu.test.service.impl\n    controller.path=cc.ligu.test.controller\n\n    #各个文件生成的文件名格式(例如：mapper.配置成:DTO%sMapper,就会生成：DTOUserMapper.java这样。%s是必要配置)\n    mapper.name=%sMapper\n    xml.name=%sMapper\n    service.name=%sService\n    serviceImpl.name=%sServiceImpl\n    controller.name=%sController\n\n    #数据库表名(此处如果为空，则默认读取数据库的所有表名，)\n    tableName=doc_question,doc_source\n\n    #代码生成的注释的作者\n    author=zjy\n\n    #数据库参数\n    jdbc.driver=com.mysql.jdbc.Driver\n    jdbc.url=jdbc:mysql://127.0.0.1:3308/test?useUnicode=true&characterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false\n    jdbc.userName=root\n    jdbc.password=test\n    \n# 3 生成入口 MyBatisPlusGenerator.java\n\n\n\tpackage cc.ligu.mvc.common;\n\n      import java.io.InputStream;\n      import java.util.HashMap;\n      import java.util.Map;\n      import java.util.Properties;\n\n      import com.baomidou.mybatisplus.generator.AutoGenerator;\n      import com.baomidou.mybatisplus.generator.InjectionConfig;\n      import com.baomidou.mybatisplus.generator.config.DataSourceConfig;\n      import com.baomidou.mybatisplus.generator.config.GlobalConfig;\n      import com.baomidou.mybatisplus.generator.config.PackageConfig;\n      import com.baomidou.mybatisplus.generator.config.StrategyConfig;\n      import com.baomidou.mybatisplus.generator.config.converts.MySqlTypeConvert;\n      import com.baomidou.mybatisplus.generator.config.converts.OracleTypeConvert;\n      import com.baomidou.mybatisplus.generator.config.rules.DbColumnType;\n      import com.baomidou.mybatisplus.generator.config.rules.DbType;\n      import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;\n      import org.springframework.core.io.ClassPathResource;\n\n      /**\n       * mybatis-plus代码生成器(用于生成entity)<br>\n       */\n      public class MyBatisPlusGenerator {\n\n          public static Properties getProperties(String path) {\n              Properties prop = null;\n              InputStream inStream = null;\n              try {\n                  prop = new Properties();\n                  inStream = new ClassPathResource(path).getInputStream();\n                  prop.load(inStream);\n                  inStream.close();\n              } catch (Exception e) {\n                  e.printStackTrace();\n              }\n              return prop;\n          }\n\n          public static void main(String[] args) {\n              Properties properties = getProperties(\"mybatis-plus.properties\");\n              AutoGenerator mpg = new AutoGenerator();\n\n              // 全局配置\n              GlobalConfig gc = new GlobalConfig();\n              gc.setOutputDir(properties.getProperty(\"outputDir\"));// 自己的java目录\n              gc.setFileOverride(true);// 是否覆盖\n              gc.setActiveRecord(true);\n              gc.setEnableCache(false);// XML 二级缓存\n              gc.setBaseResultMap(true);// XML ResultMap\n              gc.setBaseColumnList(false);// XML columList\n              gc.setAuthor(properties.getProperty(\"author\"));\n              gc .setMapperName(properties.getProperty(\"mapper.name\"))\n                      .setXmlName(properties.getProperty(\"xml.name\"))\n                      .setServiceName(properties.getProperty(\"service.name\"))\n                      .setServiceImplName(properties.getProperty(\"serviceImpl.name\"))\n                      .setControllerName(properties.getProperty(\"controller.name\"));\n              mpg.setGlobalConfig(gc);\n\n              // 数据源配置\n              DataSourceConfig dsc = new DataSourceConfig();\n              dsc.setDbType(DbType.MYSQL);\n              dsc.setTypeConvert(new MySqlTypeConvert() {\n                  // 自定义数据库表字段类型转换【可选】\n                  @Override\n                  public DbColumnType processTypeConvert(String fieldType) {\n                      return super.processTypeConvert(fieldType);\n                  }\n              });\n              /**数据库配置这块可以自己手写读取配置文件里的配置项，为了省事我直接copy**/\n              dsc.setDriverName(properties.getProperty(\"jdbc.driver\"));\n              dsc.setUsername(properties.getProperty(\"jdbc.userName\"));\n              dsc.setPassword(properties.getProperty(\"jdbc.password\"));\n              dsc.setUrl(properties.getProperty(\"jdbc.url\"));\n              mpg.setDataSource(dsc);\n\n              // 策略配置\n              StrategyConfig strategy = new StrategyConfig();\n              // strategy.setTablePrefix(new String[]{\"_\"});// 此处修改为表前缀\n              strategy.setNaming(NamingStrategy.underline_to_camel).setInclude(properties.getProperty(\"tableName\").split(\",\"));// 表名生成策略\n              mpg.setStrategy(strategy);\n              // 包配置\n              PackageConfig pc = new PackageConfig();\n              pc.setParent(null);\n              pc.setEntity(properties.getProperty(\"entity.path\"));\n              pc.setMapper(properties.getProperty(\"mapper.path\"));\n              pc.setXml(properties.getProperty(\"xml.path\"));\n              pc.setService(properties.getProperty(\"service.path\"));\n              pc.setServiceImpl(properties.getProperty(\"serviceImpl.path\"));\n              pc.setController(properties.getProperty(\"controller.path\"));\n              mpg.setPackageInfo(pc);\n\n              // 注入自定义配置，可以在 VM 中使用 cfg.abc 设置的值\n              InjectionConfig cfg = new InjectionConfig() {\n                  @Override\n                  public void initMap() {\n                      Map<String, Object> map = new HashMap<>();\n                      map.put(\"abc\", this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n                      this.setMap(map);\n                  }\n              };\n              mpg.setCfg(cfg);\n\n              // 执行生成\n              mpg.execute();\n\n              // 打印注入设置\n              System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n          }\n\n      }\n\n\n# 4效果图\n\n\n\n![logo](mybatis-plus代码生成步骤/1.png)\n\n\n\n# ps:集成spring-mvc的时候需要注意的地方\n\n## pom文件这两个依赖删除掉，否则会冲突\n\t <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.4.1</version>\n        </dependency>\n\n        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis-spring</artifactId>\n            <version>1.3.0</version>\n        </dependency>\n        \n        <!--删除上面两个依赖，用下面这个依赖代替 -->\n         <!-- https://mvnreository.com/artifact/com.baomidou/mybatis-plus -->\n        <dependency>\n            <groupId>com.baomidou</groupId>\n            <artifactId>mybatis-plus</artifactId>\n            <version>2.1.9</version>\n        </dependency>\n        \n## spirng-mybatis.xml配置,下面是局部配置，你自己的项目只需要把sqlSessionFactory 这个bean的class给换一下就行了，之前可能是：org.mybatis.spring.SqlSessionFactoryBean，把这个换成com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean\n            <bean id=\"sqlSessionFactory\" class=\"com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean\">\n            <property name=\"dataSource\" ref=\"dataSource\"/>\n            <!-- scan xml file -->\n            <property name=\"mapperLocations\" value=\"classpath:cc/ligu/**/persistence/mapping/*.xml\"></property>\n            <property name=\"typeAliasesPackage\" value=\"cc.ligu.**.persistence.entity\"/>\n            <property name=\"configLocation\" value=\"classpath:mybatis-config.xml\"></property>\n            <property name=\"globalConfig\" ref=\"globalConfig\" />\n            <property name=\"plugins\">\n                <array>\n                    <!-- 分页插件配置 -->\n                    <bean id=\"paginationInterceptor\"\n                          class=\"com.baomidou.mybatisplus.plugins.PaginationInterceptor\">\n                        <property name=\"dialectType\" value=\"mysql\" />\n                    </bean>\n                    <bean id=\"performanceInterceptor\"\n                          class=\"com.baomidou.mybatisplus.plugins.PerformanceInterceptor\" >\n                        <!-- 超过自动停止运行，有助于发现问题。 -->\n                        <property name=\"maxTime\" value=\"100\" />\n                        <!--SQL是否格式化 默认false-->\n                        <property name=\"format\" value=\"true\" />\n                    </bean>\n                </array>\n            </property>\n        </bean>\n\n        <bean id=\"globalConfig\" class=\"com.baomidou.mybatisplus.entity.GlobalConfiguration\">\n            <property name=\"idType\" value=\"2\" />\n            <property name=\"dbColumnUnderline\" value=\"true\" />\n            <property name=\"dbType\" value=\"mysql\"/>\n        </bean>","slug":"mybatis-plus代码生成步骤","published":1,"updated":"2018-05-31T07:54:29.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eqr000zawpfufh0vwnn","content":"<h1 id=\"1-pom文件\"><a href=\"#1-pom文件\" class=\"headerlink\" title=\"1 pom文件\"></a>1 pom文件</h1><p>pom文件添加如下依赖</p>\n<pre><code>&lt;!-- https://mvnreository.com/artifact/com.baomidou/mybatis-plus --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;com.baomidou&lt;/groupId&gt;\n        &lt;artifactId&gt;mybatis-plus&lt;/artifactId&gt;\n        &lt;version&gt;2.1.9&lt;/version&gt;\n    &lt;/dependency&gt;\n</code></pre><h1 id=\"2-配置文件-mybatis-plus-properties\"><a href=\"#2-配置文件-mybatis-plus-properties\" class=\"headerlink\" title=\"2 配置文件 mybatis-plus.properties\"></a>2 配置文件 mybatis-plus.properties</h1><pre><code>#此处为本项目src所在路径（代码生成器输出路径）\noutputDir=D:\\\\zjywork\\\\ligu\\\\src\\\\main\\\\java\n\n#下面为各个代码生成的包路径\nentity.path=cc.ligu.test.persistence.entity\nmapper.path=cc.ligu.test.persistence.dao\nxml.path=cc.ligu.test.persistence.mapping\nservice.path=cc.ligu.test.service\nserviceImpl.path=cc.ligu.test.service.impl\ncontroller.path=cc.ligu.test.controller\n\n#各个文件生成的文件名格式(例如：mapper.配置成:DTO%sMapper,就会生成：DTOUserMapper.java这样。%s是必要配置)\nmapper.name=%sMapper\nxml.name=%sMapper\nservice.name=%sService\nserviceImpl.name=%sServiceImpl\ncontroller.name=%sController\n\n#数据库表名(此处如果为空，则默认读取数据库的所有表名，)\ntableName=doc_question,doc_source\n\n#代码生成的注释的作者\nauthor=zjy\n\n#数据库参数\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://127.0.0.1:3308/test?useUnicode=true&amp;characterEncoding=utf-8&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&amp;useSSL=false\njdbc.userName=root\njdbc.password=test\n</code></pre><h1 id=\"3-生成入口-MyBatisPlusGenerator-java\"><a href=\"#3-生成入口-MyBatisPlusGenerator-java\" class=\"headerlink\" title=\"3 生成入口 MyBatisPlusGenerator.java\"></a>3 生成入口 MyBatisPlusGenerator.java</h1><pre><code>package cc.ligu.mvc.common;\n\n  import java.io.InputStream;\n  import java.util.HashMap;\n  import java.util.Map;\n  import java.util.Properties;\n\n  import com.baomidou.mybatisplus.generator.AutoGenerator;\n  import com.baomidou.mybatisplus.generator.InjectionConfig;\n  import com.baomidou.mybatisplus.generator.config.DataSourceConfig;\n  import com.baomidou.mybatisplus.generator.config.GlobalConfig;\n  import com.baomidou.mybatisplus.generator.config.PackageConfig;\n  import com.baomidou.mybatisplus.generator.config.StrategyConfig;\n  import com.baomidou.mybatisplus.generator.config.converts.MySqlTypeConvert;\n  import com.baomidou.mybatisplus.generator.config.converts.OracleTypeConvert;\n  import com.baomidou.mybatisplus.generator.config.rules.DbColumnType;\n  import com.baomidou.mybatisplus.generator.config.rules.DbType;\n  import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;\n  import org.springframework.core.io.ClassPathResource;\n\n  /**\n   * mybatis-plus代码生成器(用于生成entity)&lt;br&gt;\n   */\n  public class MyBatisPlusGenerator {\n\n      public static Properties getProperties(String path) {\n          Properties prop = null;\n          InputStream inStream = null;\n          try {\n              prop = new Properties();\n              inStream = new ClassPathResource(path).getInputStream();\n              prop.load(inStream);\n              inStream.close();\n          } catch (Exception e) {\n              e.printStackTrace();\n          }\n          return prop;\n      }\n\n      public static void main(String[] args) {\n          Properties properties = getProperties(&quot;mybatis-plus.properties&quot;);\n          AutoGenerator mpg = new AutoGenerator();\n\n          // 全局配置\n          GlobalConfig gc = new GlobalConfig();\n          gc.setOutputDir(properties.getProperty(&quot;outputDir&quot;));// 自己的java目录\n          gc.setFileOverride(true);// 是否覆盖\n          gc.setActiveRecord(true);\n          gc.setEnableCache(false);// XML 二级缓存\n          gc.setBaseResultMap(true);// XML ResultMap\n          gc.setBaseColumnList(false);// XML columList\n          gc.setAuthor(properties.getProperty(&quot;author&quot;));\n          gc .setMapperName(properties.getProperty(&quot;mapper.name&quot;))\n                  .setXmlName(properties.getProperty(&quot;xml.name&quot;))\n                  .setServiceName(properties.getProperty(&quot;service.name&quot;))\n                  .setServiceImplName(properties.getProperty(&quot;serviceImpl.name&quot;))\n                  .setControllerName(properties.getProperty(&quot;controller.name&quot;));\n          mpg.setGlobalConfig(gc);\n\n          // 数据源配置\n          DataSourceConfig dsc = new DataSourceConfig();\n          dsc.setDbType(DbType.MYSQL);\n          dsc.setTypeConvert(new MySqlTypeConvert() {\n              // 自定义数据库表字段类型转换【可选】\n              @Override\n              public DbColumnType processTypeConvert(String fieldType) {\n                  return super.processTypeConvert(fieldType);\n              }\n          });\n          /**数据库配置这块可以自己手写读取配置文件里的配置项，为了省事我直接copy**/\n          dsc.setDriverName(properties.getProperty(&quot;jdbc.driver&quot;));\n          dsc.setUsername(properties.getProperty(&quot;jdbc.userName&quot;));\n          dsc.setPassword(properties.getProperty(&quot;jdbc.password&quot;));\n          dsc.setUrl(properties.getProperty(&quot;jdbc.url&quot;));\n          mpg.setDataSource(dsc);\n\n          // 策略配置\n          StrategyConfig strategy = new StrategyConfig();\n          // strategy.setTablePrefix(new String[]{&quot;_&quot;});// 此处修改为表前缀\n          strategy.setNaming(NamingStrategy.underline_to_camel).setInclude(properties.getProperty(&quot;tableName&quot;).split(&quot;,&quot;));// 表名生成策略\n          mpg.setStrategy(strategy);\n          // 包配置\n          PackageConfig pc = new PackageConfig();\n          pc.setParent(null);\n          pc.setEntity(properties.getProperty(&quot;entity.path&quot;));\n          pc.setMapper(properties.getProperty(&quot;mapper.path&quot;));\n          pc.setXml(properties.getProperty(&quot;xml.path&quot;));\n          pc.setService(properties.getProperty(&quot;service.path&quot;));\n          pc.setServiceImpl(properties.getProperty(&quot;serviceImpl.path&quot;));\n          pc.setController(properties.getProperty(&quot;controller.path&quot;));\n          mpg.setPackageInfo(pc);\n\n          // 注入自定义配置，可以在 VM 中使用 cfg.abc 设置的值\n          InjectionConfig cfg = new InjectionConfig() {\n              @Override\n              public void initMap() {\n                  Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n                  map.put(&quot;abc&quot;, this.getConfig().getGlobalConfig().getAuthor() + &quot;-mp&quot;);\n                  this.setMap(map);\n              }\n          };\n          mpg.setCfg(cfg);\n\n          // 执行生成\n          mpg.execute();\n\n          // 打印注入设置\n          System.err.println(mpg.getCfg().getMap().get(&quot;abc&quot;));\n      }\n\n  }\n</code></pre><h1 id=\"4效果图\"><a href=\"#4效果图\" class=\"headerlink\" title=\"4效果图\"></a>4效果图</h1><p><img src=\"/2018/05/31/mybatis-plus代码生成步骤/1.png\" alt=\"logo\"></p>\n<h1 id=\"ps-集成spring-mvc的时候需要注意的地方\"><a href=\"#ps-集成spring-mvc的时候需要注意的地方\" class=\"headerlink\" title=\"ps:集成spring-mvc的时候需要注意的地方\"></a>ps:集成spring-mvc的时候需要注意的地方</h1><h2 id=\"pom文件这两个依赖删除掉，否则会冲突\"><a href=\"#pom文件这两个依赖删除掉，否则会冲突\" class=\"headerlink\" title=\"pom文件这两个依赖删除掉，否则会冲突\"></a>pom文件这两个依赖删除掉，否则会冲突</h2><pre><code>&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n       &lt;artifactId&gt;mybatis&lt;/artifactId&gt;\n       &lt;version&gt;3.4.1&lt;/version&gt;\n   &lt;/dependency&gt;\n\n   &lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n       &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;\n       &lt;version&gt;1.3.0&lt;/version&gt;\n   &lt;/dependency&gt;\n\n   &lt;!--删除上面两个依赖，用下面这个依赖代替 --&gt;\n    &lt;!-- https://mvnreository.com/artifact/com.baomidou/mybatis-plus --&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;com.baomidou&lt;/groupId&gt;\n       &lt;artifactId&gt;mybatis-plus&lt;/artifactId&gt;\n       &lt;version&gt;2.1.9&lt;/version&gt;\n   &lt;/dependency&gt;\n</code></pre><h2 id=\"spirng-mybatis-xml配置-下面是局部配置，你自己的项目只需要把sqlSessionFactory-这个bean的class给换一下就行了，之前可能是：org-mybatis-spring-SqlSessionFactoryBean，把这个换成com-baomidou-mybatisplus-spring-MybatisSqlSessionFactoryBean\"><a href=\"#spirng-mybatis-xml配置-下面是局部配置，你自己的项目只需要把sqlSessionFactory-这个bean的class给换一下就行了，之前可能是：org-mybatis-spring-SqlSessionFactoryBean，把这个换成com-baomidou-mybatisplus-spring-MybatisSqlSessionFactoryBean\" class=\"headerlink\" title=\"spirng-mybatis.xml配置,下面是局部配置，你自己的项目只需要把sqlSessionFactory 这个bean的class给换一下就行了，之前可能是：org.mybatis.spring.SqlSessionFactoryBean，把这个换成com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean\"></a>spirng-mybatis.xml配置,下面是局部配置，你自己的项目只需要把sqlSessionFactory 这个bean的class给换一下就行了，之前可能是：org.mybatis.spring.SqlSessionFactoryBean，把这个换成com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean</h2><pre><code>    &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean&quot;&gt;\n    &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;\n    &lt;!-- scan xml file --&gt;\n    &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:cc/ligu/**/persistence/mapping/*.xml&quot;&gt;&lt;/property&gt;\n    &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;cc.ligu.**.persistence.entity&quot;/&gt;\n    &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;&lt;/property&gt;\n    &lt;property name=&quot;globalConfig&quot; ref=&quot;globalConfig&quot; /&gt;\n    &lt;property name=&quot;plugins&quot;&gt;\n        &lt;array&gt;\n            &lt;!-- 分页插件配置 --&gt;\n            &lt;bean id=&quot;paginationInterceptor&quot;\n                  class=&quot;com.baomidou.mybatisplus.plugins.PaginationInterceptor&quot;&gt;\n                &lt;property name=&quot;dialectType&quot; value=&quot;mysql&quot; /&gt;\n            &lt;/bean&gt;\n            &lt;bean id=&quot;performanceInterceptor&quot;\n                  class=&quot;com.baomidou.mybatisplus.plugins.PerformanceInterceptor&quot; &gt;\n                &lt;!-- 超过自动停止运行，有助于发现问题。 --&gt;\n                &lt;property name=&quot;maxTime&quot; value=&quot;100&quot; /&gt;\n                &lt;!--SQL是否格式化 默认false--&gt;\n                &lt;property name=&quot;format&quot; value=&quot;true&quot; /&gt;\n            &lt;/bean&gt;\n        &lt;/array&gt;\n    &lt;/property&gt;\n&lt;/bean&gt;\n\n&lt;bean id=&quot;globalConfig&quot; class=&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;&gt;\n    &lt;property name=&quot;idType&quot; value=&quot;2&quot; /&gt;\n    &lt;property name=&quot;dbColumnUnderline&quot; value=&quot;true&quot; /&gt;\n    &lt;property name=&quot;dbType&quot; value=&quot;mysql&quot;/&gt;\n&lt;/bean&gt;\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-pom文件\"><a href=\"#1-pom文件\" class=\"headerlink\" title=\"1 pom文件\"></a>1 pom文件</h1><p>pom文件添加如下依赖</p>\n<pre><code>&lt;!-- https://mvnreository.com/artifact/com.baomidou/mybatis-plus --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;com.baomidou&lt;/groupId&gt;\n        &lt;artifactId&gt;mybatis-plus&lt;/artifactId&gt;\n        &lt;version&gt;2.1.9&lt;/version&gt;\n    &lt;/dependency&gt;\n</code></pre><h1 id=\"2-配置文件-mybatis-plus-properties\"><a href=\"#2-配置文件-mybatis-plus-properties\" class=\"headerlink\" title=\"2 配置文件 mybatis-plus.properties\"></a>2 配置文件 mybatis-plus.properties</h1><pre><code>#此处为本项目src所在路径（代码生成器输出路径）\noutputDir=D:\\\\zjywork\\\\ligu\\\\src\\\\main\\\\java\n\n#下面为各个代码生成的包路径\nentity.path=cc.ligu.test.persistence.entity\nmapper.path=cc.ligu.test.persistence.dao\nxml.path=cc.ligu.test.persistence.mapping\nservice.path=cc.ligu.test.service\nserviceImpl.path=cc.ligu.test.service.impl\ncontroller.path=cc.ligu.test.controller\n\n#各个文件生成的文件名格式(例如：mapper.配置成:DTO%sMapper,就会生成：DTOUserMapper.java这样。%s是必要配置)\nmapper.name=%sMapper\nxml.name=%sMapper\nservice.name=%sService\nserviceImpl.name=%sServiceImpl\ncontroller.name=%sController\n\n#数据库表名(此处如果为空，则默认读取数据库的所有表名，)\ntableName=doc_question,doc_source\n\n#代码生成的注释的作者\nauthor=zjy\n\n#数据库参数\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://127.0.0.1:3308/test?useUnicode=true&amp;characterEncoding=utf-8&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&amp;useSSL=false\njdbc.userName=root\njdbc.password=test\n</code></pre><h1 id=\"3-生成入口-MyBatisPlusGenerator-java\"><a href=\"#3-生成入口-MyBatisPlusGenerator-java\" class=\"headerlink\" title=\"3 生成入口 MyBatisPlusGenerator.java\"></a>3 生成入口 MyBatisPlusGenerator.java</h1><pre><code>package cc.ligu.mvc.common;\n\n  import java.io.InputStream;\n  import java.util.HashMap;\n  import java.util.Map;\n  import java.util.Properties;\n\n  import com.baomidou.mybatisplus.generator.AutoGenerator;\n  import com.baomidou.mybatisplus.generator.InjectionConfig;\n  import com.baomidou.mybatisplus.generator.config.DataSourceConfig;\n  import com.baomidou.mybatisplus.generator.config.GlobalConfig;\n  import com.baomidou.mybatisplus.generator.config.PackageConfig;\n  import com.baomidou.mybatisplus.generator.config.StrategyConfig;\n  import com.baomidou.mybatisplus.generator.config.converts.MySqlTypeConvert;\n  import com.baomidou.mybatisplus.generator.config.converts.OracleTypeConvert;\n  import com.baomidou.mybatisplus.generator.config.rules.DbColumnType;\n  import com.baomidou.mybatisplus.generator.config.rules.DbType;\n  import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;\n  import org.springframework.core.io.ClassPathResource;\n\n  /**\n   * mybatis-plus代码生成器(用于生成entity)&lt;br&gt;\n   */\n  public class MyBatisPlusGenerator {\n\n      public static Properties getProperties(String path) {\n          Properties prop = null;\n          InputStream inStream = null;\n          try {\n              prop = new Properties();\n              inStream = new ClassPathResource(path).getInputStream();\n              prop.load(inStream);\n              inStream.close();\n          } catch (Exception e) {\n              e.printStackTrace();\n          }\n          return prop;\n      }\n\n      public static void main(String[] args) {\n          Properties properties = getProperties(&quot;mybatis-plus.properties&quot;);\n          AutoGenerator mpg = new AutoGenerator();\n\n          // 全局配置\n          GlobalConfig gc = new GlobalConfig();\n          gc.setOutputDir(properties.getProperty(&quot;outputDir&quot;));// 自己的java目录\n          gc.setFileOverride(true);// 是否覆盖\n          gc.setActiveRecord(true);\n          gc.setEnableCache(false);// XML 二级缓存\n          gc.setBaseResultMap(true);// XML ResultMap\n          gc.setBaseColumnList(false);// XML columList\n          gc.setAuthor(properties.getProperty(&quot;author&quot;));\n          gc .setMapperName(properties.getProperty(&quot;mapper.name&quot;))\n                  .setXmlName(properties.getProperty(&quot;xml.name&quot;))\n                  .setServiceName(properties.getProperty(&quot;service.name&quot;))\n                  .setServiceImplName(properties.getProperty(&quot;serviceImpl.name&quot;))\n                  .setControllerName(properties.getProperty(&quot;controller.name&quot;));\n          mpg.setGlobalConfig(gc);\n\n          // 数据源配置\n          DataSourceConfig dsc = new DataSourceConfig();\n          dsc.setDbType(DbType.MYSQL);\n          dsc.setTypeConvert(new MySqlTypeConvert() {\n              // 自定义数据库表字段类型转换【可选】\n              @Override\n              public DbColumnType processTypeConvert(String fieldType) {\n                  return super.processTypeConvert(fieldType);\n              }\n          });\n          /**数据库配置这块可以自己手写读取配置文件里的配置项，为了省事我直接copy**/\n          dsc.setDriverName(properties.getProperty(&quot;jdbc.driver&quot;));\n          dsc.setUsername(properties.getProperty(&quot;jdbc.userName&quot;));\n          dsc.setPassword(properties.getProperty(&quot;jdbc.password&quot;));\n          dsc.setUrl(properties.getProperty(&quot;jdbc.url&quot;));\n          mpg.setDataSource(dsc);\n\n          // 策略配置\n          StrategyConfig strategy = new StrategyConfig();\n          // strategy.setTablePrefix(new String[]{&quot;_&quot;});// 此处修改为表前缀\n          strategy.setNaming(NamingStrategy.underline_to_camel).setInclude(properties.getProperty(&quot;tableName&quot;).split(&quot;,&quot;));// 表名生成策略\n          mpg.setStrategy(strategy);\n          // 包配置\n          PackageConfig pc = new PackageConfig();\n          pc.setParent(null);\n          pc.setEntity(properties.getProperty(&quot;entity.path&quot;));\n          pc.setMapper(properties.getProperty(&quot;mapper.path&quot;));\n          pc.setXml(properties.getProperty(&quot;xml.path&quot;));\n          pc.setService(properties.getProperty(&quot;service.path&quot;));\n          pc.setServiceImpl(properties.getProperty(&quot;serviceImpl.path&quot;));\n          pc.setController(properties.getProperty(&quot;controller.path&quot;));\n          mpg.setPackageInfo(pc);\n\n          // 注入自定义配置，可以在 VM 中使用 cfg.abc 设置的值\n          InjectionConfig cfg = new InjectionConfig() {\n              @Override\n              public void initMap() {\n                  Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n                  map.put(&quot;abc&quot;, this.getConfig().getGlobalConfig().getAuthor() + &quot;-mp&quot;);\n                  this.setMap(map);\n              }\n          };\n          mpg.setCfg(cfg);\n\n          // 执行生成\n          mpg.execute();\n\n          // 打印注入设置\n          System.err.println(mpg.getCfg().getMap().get(&quot;abc&quot;));\n      }\n\n  }\n</code></pre><h1 id=\"4效果图\"><a href=\"#4效果图\" class=\"headerlink\" title=\"4效果图\"></a>4效果图</h1><p><img src=\"/2018/05/31/mybatis-plus代码生成步骤/1.png\" alt=\"logo\"></p>\n<h1 id=\"ps-集成spring-mvc的时候需要注意的地方\"><a href=\"#ps-集成spring-mvc的时候需要注意的地方\" class=\"headerlink\" title=\"ps:集成spring-mvc的时候需要注意的地方\"></a>ps:集成spring-mvc的时候需要注意的地方</h1><h2 id=\"pom文件这两个依赖删除掉，否则会冲突\"><a href=\"#pom文件这两个依赖删除掉，否则会冲突\" class=\"headerlink\" title=\"pom文件这两个依赖删除掉，否则会冲突\"></a>pom文件这两个依赖删除掉，否则会冲突</h2><pre><code>&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n       &lt;artifactId&gt;mybatis&lt;/artifactId&gt;\n       &lt;version&gt;3.4.1&lt;/version&gt;\n   &lt;/dependency&gt;\n\n   &lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n       &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;\n       &lt;version&gt;1.3.0&lt;/version&gt;\n   &lt;/dependency&gt;\n\n   &lt;!--删除上面两个依赖，用下面这个依赖代替 --&gt;\n    &lt;!-- https://mvnreository.com/artifact/com.baomidou/mybatis-plus --&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;com.baomidou&lt;/groupId&gt;\n       &lt;artifactId&gt;mybatis-plus&lt;/artifactId&gt;\n       &lt;version&gt;2.1.9&lt;/version&gt;\n   &lt;/dependency&gt;\n</code></pre><h2 id=\"spirng-mybatis-xml配置-下面是局部配置，你自己的项目只需要把sqlSessionFactory-这个bean的class给换一下就行了，之前可能是：org-mybatis-spring-SqlSessionFactoryBean，把这个换成com-baomidou-mybatisplus-spring-MybatisSqlSessionFactoryBean\"><a href=\"#spirng-mybatis-xml配置-下面是局部配置，你自己的项目只需要把sqlSessionFactory-这个bean的class给换一下就行了，之前可能是：org-mybatis-spring-SqlSessionFactoryBean，把这个换成com-baomidou-mybatisplus-spring-MybatisSqlSessionFactoryBean\" class=\"headerlink\" title=\"spirng-mybatis.xml配置,下面是局部配置，你自己的项目只需要把sqlSessionFactory 这个bean的class给换一下就行了，之前可能是：org.mybatis.spring.SqlSessionFactoryBean，把这个换成com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean\"></a>spirng-mybatis.xml配置,下面是局部配置，你自己的项目只需要把sqlSessionFactory 这个bean的class给换一下就行了，之前可能是：org.mybatis.spring.SqlSessionFactoryBean，把这个换成com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean</h2><pre><code>    &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean&quot;&gt;\n    &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;\n    &lt;!-- scan xml file --&gt;\n    &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:cc/ligu/**/persistence/mapping/*.xml&quot;&gt;&lt;/property&gt;\n    &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;cc.ligu.**.persistence.entity&quot;/&gt;\n    &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;&lt;/property&gt;\n    &lt;property name=&quot;globalConfig&quot; ref=&quot;globalConfig&quot; /&gt;\n    &lt;property name=&quot;plugins&quot;&gt;\n        &lt;array&gt;\n            &lt;!-- 分页插件配置 --&gt;\n            &lt;bean id=&quot;paginationInterceptor&quot;\n                  class=&quot;com.baomidou.mybatisplus.plugins.PaginationInterceptor&quot;&gt;\n                &lt;property name=&quot;dialectType&quot; value=&quot;mysql&quot; /&gt;\n            &lt;/bean&gt;\n            &lt;bean id=&quot;performanceInterceptor&quot;\n                  class=&quot;com.baomidou.mybatisplus.plugins.PerformanceInterceptor&quot; &gt;\n                &lt;!-- 超过自动停止运行，有助于发现问题。 --&gt;\n                &lt;property name=&quot;maxTime&quot; value=&quot;100&quot; /&gt;\n                &lt;!--SQL是否格式化 默认false--&gt;\n                &lt;property name=&quot;format&quot; value=&quot;true&quot; /&gt;\n            &lt;/bean&gt;\n        &lt;/array&gt;\n    &lt;/property&gt;\n&lt;/bean&gt;\n\n&lt;bean id=&quot;globalConfig&quot; class=&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;&gt;\n    &lt;property name=&quot;idType&quot; value=&quot;2&quot; /&gt;\n    &lt;property name=&quot;dbColumnUnderline&quot; value=&quot;true&quot; /&gt;\n    &lt;property name=&quot;dbType&quot; value=&quot;mysql&quot;/&gt;\n&lt;/bean&gt;\n</code></pre>"},{"title":"mybatis","author":"zjy","date":"2017-12-13T03:51:13.000Z","_content":"# mybatis技术原理读后总结：\n\n一级二级缓存：\n只开一级：1，2只第一次查数据库，3再查数据库\n开二级：123，只第一次查数据库。\nSqlSession session1 = SqlSessionFactoryUtil.openSqlSession();\nStudentMapper studentMapper = session1.getMapper(StudentMapper.class);\n\nstudentMapper.getStudent(1);//1\nstudentMapper.getStudent(1);//2\nsession1.commit();\n\nsession2 = SqlSessionFactoryUtil.openSqlSession();\n\nStudentMapper studentMapper2 = session2.getMapper(StudentMapper.class);\nstudentMapper2.getStudent(1);//3\n\nsession2.commit();\n\n//系统默认开启一级缓存，二级缓存开启在mybatis配置文件加 \n<cache />\n可自定义缓存，实现org.apache.ibatis.cache.Cache\n<cache type = \"com.your.SelfCache\"/>\n\n\nsqlSessionFactoryBuilder: 利用xml，java代码创建sqlsessionfactory.构建了sqlsessionfactory,可以销毁builder\t\n代码：new sqlSessionFactoryBuilder().build(inputStream);//mybatis.confg xml配置文件\n\nsqlSessionFactory:同一个数据库对应一个，使用单例模式创建,生命周期贯穿mybatis整个生命周期，他创建sqlSession。\n\nsqlsession：一个会话，相当于一个connection对象。生命周期=请求数据库处理的事务周期\n\nmapper:mapper接口+xml。方法级别，生命周期在一个sqlsession内\n\n简略代码：(具体各个对象单例等自行添加)\nInputStream =Resourse.getResourceAsStream(\"mybatis-config.xml\");\nsqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\nsqlSessionFactory.openSqlSession();\n\n\n\n动态代理：\njdk缺点：需要提供接口才能使用\ncglib： CGLib创建的动态代理对象性能比JDK创建的动态代理对象的性能高不少，但是CGLib在创建代理对象时所花费的时间却比JDK多得多，所以对于单例的对象，因为无需频繁创建对象，用CGLib合适，反之，使用JDK方式要更为合适一些。同时，由于CGLib由于是采用动态创建子类的方法，对于final方法，无法进行代理。\n\n\n\nsqlsession运行过程：\nrun.png\n\n\nsqlSession 下四大对象:（插件拦截器的type下面四种）\n1 Executor:执行器，由它调度StatementHandler,ParameterHandler,ResutlHandler 执行对应sql  \n\tjava和数据库交互，有三类：\n\t\tSimpleExecutor:简易执行器，默认\n\t\tReuseExecutor:重用预处理语句执行器\n\t\tBatchExecutor:批量专用执行器\n2 StatementHandler数据库会话器 : 使用Statement(PreparedStatement)执行操作，四大对象核心，承上启下\n3 ParameterHandler参数处理器：用于sql对参数的处理\n4 ResutlHandler结果处理器：数据集封装返回处理。\n \n \n\t\n\n\n\nmybatis插件：\n\n所有插件需要实现接口 org.apache.ibatis.plugin.Interceptor\n\n方法解释：\n\t1 intercept：覆盖拦截对象原有方法，通过Invocation可以调原来对象的方法\n\t\t\t\tinvocation.proceed();//这句话是调用原来对象的方法\n\t2 plugin:target 是被拦截的对象，作用是给被拦截的对象生成代理对象，如下代码，只会为Executor对象生成代理对象，其他的都不生成代理对象，省空间省内存。\t\n\t\t\t/**\n\t\t\t * 只拦截Executor\n\t\t\t *\n\t\t\t * @param target\n\t\t\t * @return\n\t\t\t */\n\t\t\tpublic Object plugin(Object target) {\n\t\t\t\tif (target instanceof Executor) {\n\t\t\t\t\treturn Plugin.wrap(target, this);\n\t\t\t\t} else {\n\t\t\t\t\treturn target;\n\t\t\t\t}\n\t\t\t}\n\t3 setProperties:主要是为插件设置值，如下：\n\t  Properties.getProperty(\"dialect\");//得到mysql\n\t  <plugins> \n        <plugin interceptor=\"com.github.pagehelper.PageHelper\"> \n            <property name=\"dialect\" value=\"mysql\"/> \n            <property name=\"rowBoundsWithCount\" value=\"true\"/>\n\t\t</plugin>\n\t  </plugins> \n\t \n\t \n\t \n\t \n设计模式：\n\t\n\t单例模式 sqlSessionFactory 对应一个数据库连接，生命周期就是mybatis运行周期\n\t责任链模式：mybatis插件，一个对象，在多个角色传递，在传递链上的任何角色都有处理它的机会。简单来讲：我发起请假请求，项目经理，部门经理，总裁，他们都能对我的请假请求发起处理。这就是责任链。\n\tmybatis插件也是，sql运行过程中，每个插件都有处理它的权利\n\t\n\t\n\t代理模式：mapper接口代理，使用的是jdk代理\n\t\n\t\n\t\n\n","source":"_posts/mybatis.md","raw":"title: mybatis\nauthor: zjy\ndate: 2017-12-13 11:51:13\ntags:\n---\n# mybatis技术原理读后总结：\n\n一级二级缓存：\n只开一级：1，2只第一次查数据库，3再查数据库\n开二级：123，只第一次查数据库。\nSqlSession session1 = SqlSessionFactoryUtil.openSqlSession();\nStudentMapper studentMapper = session1.getMapper(StudentMapper.class);\n\nstudentMapper.getStudent(1);//1\nstudentMapper.getStudent(1);//2\nsession1.commit();\n\nsession2 = SqlSessionFactoryUtil.openSqlSession();\n\nStudentMapper studentMapper2 = session2.getMapper(StudentMapper.class);\nstudentMapper2.getStudent(1);//3\n\nsession2.commit();\n\n//系统默认开启一级缓存，二级缓存开启在mybatis配置文件加 \n<cache />\n可自定义缓存，实现org.apache.ibatis.cache.Cache\n<cache type = \"com.your.SelfCache\"/>\n\n\nsqlSessionFactoryBuilder: 利用xml，java代码创建sqlsessionfactory.构建了sqlsessionfactory,可以销毁builder\t\n代码：new sqlSessionFactoryBuilder().build(inputStream);//mybatis.confg xml配置文件\n\nsqlSessionFactory:同一个数据库对应一个，使用单例模式创建,生命周期贯穿mybatis整个生命周期，他创建sqlSession。\n\nsqlsession：一个会话，相当于一个connection对象。生命周期=请求数据库处理的事务周期\n\nmapper:mapper接口+xml。方法级别，生命周期在一个sqlsession内\n\n简略代码：(具体各个对象单例等自行添加)\nInputStream =Resourse.getResourceAsStream(\"mybatis-config.xml\");\nsqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\nsqlSessionFactory.openSqlSession();\n\n\n\n动态代理：\njdk缺点：需要提供接口才能使用\ncglib： CGLib创建的动态代理对象性能比JDK创建的动态代理对象的性能高不少，但是CGLib在创建代理对象时所花费的时间却比JDK多得多，所以对于单例的对象，因为无需频繁创建对象，用CGLib合适，反之，使用JDK方式要更为合适一些。同时，由于CGLib由于是采用动态创建子类的方法，对于final方法，无法进行代理。\n\n\n\nsqlsession运行过程：\nrun.png\n\n\nsqlSession 下四大对象:（插件拦截器的type下面四种）\n1 Executor:执行器，由它调度StatementHandler,ParameterHandler,ResutlHandler 执行对应sql  \n\tjava和数据库交互，有三类：\n\t\tSimpleExecutor:简易执行器，默认\n\t\tReuseExecutor:重用预处理语句执行器\n\t\tBatchExecutor:批量专用执行器\n2 StatementHandler数据库会话器 : 使用Statement(PreparedStatement)执行操作，四大对象核心，承上启下\n3 ParameterHandler参数处理器：用于sql对参数的处理\n4 ResutlHandler结果处理器：数据集封装返回处理。\n \n \n\t\n\n\n\nmybatis插件：\n\n所有插件需要实现接口 org.apache.ibatis.plugin.Interceptor\n\n方法解释：\n\t1 intercept：覆盖拦截对象原有方法，通过Invocation可以调原来对象的方法\n\t\t\t\tinvocation.proceed();//这句话是调用原来对象的方法\n\t2 plugin:target 是被拦截的对象，作用是给被拦截的对象生成代理对象，如下代码，只会为Executor对象生成代理对象，其他的都不生成代理对象，省空间省内存。\t\n\t\t\t/**\n\t\t\t * 只拦截Executor\n\t\t\t *\n\t\t\t * @param target\n\t\t\t * @return\n\t\t\t */\n\t\t\tpublic Object plugin(Object target) {\n\t\t\t\tif (target instanceof Executor) {\n\t\t\t\t\treturn Plugin.wrap(target, this);\n\t\t\t\t} else {\n\t\t\t\t\treturn target;\n\t\t\t\t}\n\t\t\t}\n\t3 setProperties:主要是为插件设置值，如下：\n\t  Properties.getProperty(\"dialect\");//得到mysql\n\t  <plugins> \n        <plugin interceptor=\"com.github.pagehelper.PageHelper\"> \n            <property name=\"dialect\" value=\"mysql\"/> \n            <property name=\"rowBoundsWithCount\" value=\"true\"/>\n\t\t</plugin>\n\t  </plugins> \n\t \n\t \n\t \n\t \n设计模式：\n\t\n\t单例模式 sqlSessionFactory 对应一个数据库连接，生命周期就是mybatis运行周期\n\t责任链模式：mybatis插件，一个对象，在多个角色传递，在传递链上的任何角色都有处理它的机会。简单来讲：我发起请假请求，项目经理，部门经理，总裁，他们都能对我的请假请求发起处理。这就是责任链。\n\tmybatis插件也是，sql运行过程中，每个插件都有处理它的权利\n\t\n\t\n\t代理模式：mapper接口代理，使用的是jdk代理\n\t\n\t\n\t\n\n","slug":"mybatis","published":1,"updated":"2017-12-13T03:51:27.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58equ0010awpfjluwfgbu","content":"<h1 id=\"mybatis技术原理读后总结：\"><a href=\"#mybatis技术原理读后总结：\" class=\"headerlink\" title=\"mybatis技术原理读后总结：\"></a>mybatis技术原理读后总结：</h1><p>一级二级缓存：<br>只开一级：1，2只第一次查数据库，3再查数据库<br>开二级：123，只第一次查数据库。<br>SqlSession session1 = SqlSessionFactoryUtil.openSqlSession();<br>StudentMapper studentMapper = session1.getMapper(StudentMapper.class);</p>\n<p>studentMapper.getStudent(1);//1<br>studentMapper.getStudent(1);//2<br>session1.commit();</p>\n<p>session2 = SqlSessionFactoryUtil.openSqlSession();</p>\n<p>StudentMapper studentMapper2 = session2.getMapper(StudentMapper.class);<br>studentMapper2.getStudent(1);//3</p>\n<p>session2.commit();</p>\n<p>//系统默认开启一级缓存，二级缓存开启在mybatis配置文件加 </p>\n<p><cache><br>可自定义缓存，实现org.apache.ibatis.cache.Cache</cache></p>\n<cache type=\"com.your.SelfCache\">\n\n\n<p>sqlSessionFactoryBuilder: 利用xml，java代码创建sqlsessionfactory.构建了sqlsessionfactory,可以销毁builder<br>代码：new sqlSessionFactoryBuilder().build(inputStream);//mybatis.confg xml配置文件</p>\n<p>sqlSessionFactory:同一个数据库对应一个，使用单例模式创建,生命周期贯穿mybatis整个生命周期，他创建sqlSession。</p>\n<p>sqlsession：一个会话，相当于一个connection对象。生命周期=请求数据库处理的事务周期</p>\n<p>mapper:mapper接口+xml。方法级别，生命周期在一个sqlsession内</p>\n<p>简略代码：(具体各个对象单例等自行添加)<br>InputStream =Resourse.getResourceAsStream(“mybatis-config.xml”);<br>sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);<br>sqlSessionFactory.openSqlSession();</p>\n<p>动态代理：<br>jdk缺点：需要提供接口才能使用<br>cglib： CGLib创建的动态代理对象性能比JDK创建的动态代理对象的性能高不少，但是CGLib在创建代理对象时所花费的时间却比JDK多得多，所以对于单例的对象，因为无需频繁创建对象，用CGLib合适，反之，使用JDK方式要更为合适一些。同时，由于CGLib由于是采用动态创建子类的方法，对于final方法，无法进行代理。</p>\n<p>sqlsession运行过程：<br>run.png</p>\n<p>sqlSession 下四大对象:（插件拦截器的type下面四种）<br>1 Executor:执行器，由它调度StatementHandler,ParameterHandler,ResutlHandler 执行对应sql<br>    java和数据库交互，有三类：<br>        SimpleExecutor:简易执行器，默认<br>        ReuseExecutor:重用预处理语句执行器<br>        BatchExecutor:批量专用执行器<br>2 StatementHandler数据库会话器 : 使用Statement(PreparedStatement)执行操作，四大对象核心，承上启下<br>3 ParameterHandler参数处理器：用于sql对参数的处理<br>4 ResutlHandler结果处理器：数据集封装返回处理。</p>\n<p>mybatis插件：</p>\n<p>所有插件需要实现接口 org.apache.ibatis.plugin.Interceptor</p>\n<p>方法解释：<br>    1 intercept：覆盖拦截对象原有方法，通过Invocation可以调原来对象的方法<br>                invocation.proceed();//这句话是调用原来对象的方法<br>    2 plugin:target 是被拦截的对象，作用是给被拦截的对象生成代理对象，如下代码，只会为Executor对象生成代理对象，其他的都不生成代理对象，省空间省内存。<br>            /**</p>\n<pre><code>         * 只拦截Executor\n         *\n         * @param target\n         * @return\n         */\n        public Object plugin(Object target) {\n            if (target instanceof Executor) {\n                return Plugin.wrap(target, this);\n            } else {\n                return target;\n            }\n        }\n3 setProperties:主要是为插件设置值，如下：\n  Properties.getProperty(&quot;dialect&quot;);//得到mysql\n  &lt;plugins&gt; \n    &lt;plugin interceptor=&quot;com.github.pagehelper.PageHelper&quot;&gt; \n        &lt;property name=&quot;dialect&quot; value=&quot;mysql&quot;/&gt; \n        &lt;property name=&quot;rowBoundsWithCount&quot; value=&quot;true&quot;/&gt;\n    &lt;/plugin&gt;\n  &lt;/plugins&gt; \n</code></pre><p>设计模式：</p>\n<pre><code>单例模式 sqlSessionFactory 对应一个数据库连接，生命周期就是mybatis运行周期\n责任链模式：mybatis插件，一个对象，在多个角色传递，在传递链上的任何角色都有处理它的机会。简单来讲：我发起请假请求，项目经理，部门经理，总裁，他们都能对我的请假请求发起处理。这就是责任链。\nmybatis插件也是，sql运行过程中，每个插件都有处理它的权利\n\n\n代理模式：mapper接口代理，使用的是jdk代理\n</code></pre></cache>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mybatis技术原理读后总结：\"><a href=\"#mybatis技术原理读后总结：\" class=\"headerlink\" title=\"mybatis技术原理读后总结：\"></a>mybatis技术原理读后总结：</h1><p>一级二级缓存：<br>只开一级：1，2只第一次查数据库，3再查数据库<br>开二级：123，只第一次查数据库。<br>SqlSession session1 = SqlSessionFactoryUtil.openSqlSession();<br>StudentMapper studentMapper = session1.getMapper(StudentMapper.class);</p>\n<p>studentMapper.getStudent(1);//1<br>studentMapper.getStudent(1);//2<br>session1.commit();</p>\n<p>session2 = SqlSessionFactoryUtil.openSqlSession();</p>\n<p>StudentMapper studentMapper2 = session2.getMapper(StudentMapper.class);<br>studentMapper2.getStudent(1);//3</p>\n<p>session2.commit();</p>\n<p>//系统默认开启一级缓存，二级缓存开启在mybatis配置文件加 </p>\n<p><cache><br>可自定义缓存，实现org.apache.ibatis.cache.Cache</cache></p>\n<cache type=\"com.your.SelfCache\">\n\n\n<p>sqlSessionFactoryBuilder: 利用xml，java代码创建sqlsessionfactory.构建了sqlsessionfactory,可以销毁builder<br>代码：new sqlSessionFactoryBuilder().build(inputStream);//mybatis.confg xml配置文件</p>\n<p>sqlSessionFactory:同一个数据库对应一个，使用单例模式创建,生命周期贯穿mybatis整个生命周期，他创建sqlSession。</p>\n<p>sqlsession：一个会话，相当于一个connection对象。生命周期=请求数据库处理的事务周期</p>\n<p>mapper:mapper接口+xml。方法级别，生命周期在一个sqlsession内</p>\n<p>简略代码：(具体各个对象单例等自行添加)<br>InputStream =Resourse.getResourceAsStream(“mybatis-config.xml”);<br>sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);<br>sqlSessionFactory.openSqlSession();</p>\n<p>动态代理：<br>jdk缺点：需要提供接口才能使用<br>cglib： CGLib创建的动态代理对象性能比JDK创建的动态代理对象的性能高不少，但是CGLib在创建代理对象时所花费的时间却比JDK多得多，所以对于单例的对象，因为无需频繁创建对象，用CGLib合适，反之，使用JDK方式要更为合适一些。同时，由于CGLib由于是采用动态创建子类的方法，对于final方法，无法进行代理。</p>\n<p>sqlsession运行过程：<br>run.png</p>\n<p>sqlSession 下四大对象:（插件拦截器的type下面四种）<br>1 Executor:执行器，由它调度StatementHandler,ParameterHandler,ResutlHandler 执行对应sql<br>    java和数据库交互，有三类：<br>        SimpleExecutor:简易执行器，默认<br>        ReuseExecutor:重用预处理语句执行器<br>        BatchExecutor:批量专用执行器<br>2 StatementHandler数据库会话器 : 使用Statement(PreparedStatement)执行操作，四大对象核心，承上启下<br>3 ParameterHandler参数处理器：用于sql对参数的处理<br>4 ResutlHandler结果处理器：数据集封装返回处理。</p>\n<p>mybatis插件：</p>\n<p>所有插件需要实现接口 org.apache.ibatis.plugin.Interceptor</p>\n<p>方法解释：<br>    1 intercept：覆盖拦截对象原有方法，通过Invocation可以调原来对象的方法<br>                invocation.proceed();//这句话是调用原来对象的方法<br>    2 plugin:target 是被拦截的对象，作用是给被拦截的对象生成代理对象，如下代码，只会为Executor对象生成代理对象，其他的都不生成代理对象，省空间省内存。<br>            /**</p>\n<pre><code>         * 只拦截Executor\n         *\n         * @param target\n         * @return\n         */\n        public Object plugin(Object target) {\n            if (target instanceof Executor) {\n                return Plugin.wrap(target, this);\n            } else {\n                return target;\n            }\n        }\n3 setProperties:主要是为插件设置值，如下：\n  Properties.getProperty(&quot;dialect&quot;);//得到mysql\n  &lt;plugins&gt; \n    &lt;plugin interceptor=&quot;com.github.pagehelper.PageHelper&quot;&gt; \n        &lt;property name=&quot;dialect&quot; value=&quot;mysql&quot;/&gt; \n        &lt;property name=&quot;rowBoundsWithCount&quot; value=&quot;true&quot;/&gt;\n    &lt;/plugin&gt;\n  &lt;/plugins&gt; \n</code></pre><p>设计模式：</p>\n<pre><code>单例模式 sqlSessionFactory 对应一个数据库连接，生命周期就是mybatis运行周期\n责任链模式：mybatis插件，一个对象，在多个角色传递，在传递链上的任何角色都有处理它的机会。简单来讲：我发起请假请求，项目经理，部门经理，总裁，他们都能对我的请假请求发起处理。这就是责任链。\nmybatis插件也是，sql运行过程中，每个插件都有处理它的权利\n\n\n代理模式：mapper接口代理，使用的是jdk代理\n</code></pre></cache>"},{"title":"ubuntu14.04  - mysql5.7","date":"2017-05-05T05:51:49.000Z","_content":"# 服务器装mysql\n\n### 更新服务器  \n\tsudo apt-get update && sudo apt-get upgrade\n\n### 安装mysql-server \n\t\n    apt-get install mysql-server\n\n### 修改远程访问限制：\n #### 修改bind—address\n    \t在 /etc/mysql/mysql.conf.d 目录下某个文件有 bind-address属性 ，注释掉\n #### 修改host\n \t\tmysql -u root -p;\n         update mysql.user set host =\"%\" where user=\"root\";\n         flush privileges;\n         service mysql restart;\n\n\n# 相关命令\n\n ## 查看apt安装列表\n\t dpkg  -l\n\n## 卸载\n\tapt-get purge / apt-get –purge remove \n    删除已安装包（不保留配置文件)。 \n    如软件包a，依赖软件包b，则执行该命令会删除a，而且不保留配置文件\n    apt-get autoremove \n    删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件。\n    apt-get remove \n    删除已安装的软件包（保留配置文件），不会删除依赖软件包，且保留配置文件。\n    apt-get autoclean \n    APT的底层包是dpkg, 而dpkg 安装Package时, 会将 *.deb 放在 /var/cache/apt/archives/中，apt-get autoclean 只会删除 /var/cache/apt/archives/ 已经过期的deb。\n    apt-get clean \n    使用 apt-get clean 会将 /var/cache/apt/archives/ 的 所有 deb 删掉，可以理解为 rm /var/cache/apt/archives/*.deb。\n    \n ## 卸载异常\n\n\tsubprocess pre-removal script returned error exit status... \n    处理方法如下：\n        subprocess new pre-removal script returned error exit status 127 有时候也会提示 subprocess new pre-removal script returned error exit status 126\n\n    我们反复测试得到结果：只要删除deb文件在cydia上的登记信息，该软件就等于不存在，那剩下的问题就迎刃而解了。不光是这个kuaidial，其他类似的问题应该也可以如法炮制。\n\n    实际操作是：\n    1） 首先用ifile 进入根目录下的application， 删除有问题的app，这里是kuaidial.app\n    2） 进入 /var/lib/dpkg/info  找到相关文件，这里是\"reyo.phone.kuaidial\"删除\n    3） 返回cydia，到manage里的package中，卸载问题软件（其实就是形式主义，为了删除显示是错误信息而已）\n    4） 安装可用的该软件版本。\n\n------------------------------------------------------通用-------------------------------------------------------\n\n1  yum list installed |grep mysql\n2  wget dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm\n3  yum localinstall mysql-community-release-el6-5.noarch.rpm\n4  yum repolist all|grep mysql\n5  yum-config-manager --disable mysql55-community\n6  yum-config-manager --disable mysql56-community\n7  yum-config-manager --enable mysql57-community-dmr\n\n![logo](mysql/1.png)\n![logo](mysql/2.png)\n\n\n\n# ps 最简单安装如图\n\n![logo](mysql/3.png)\n\n\n\n\n\n# centos安装5.7mysql\n\n## 下载\n\twget http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar\n\n## 然后解压\n\n     [root@linux_node_1 src]# tar -xvf mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar \n      mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm\n      mysql-community-devel-5.7.16-1.el7.x86_64.rpm\n      mysql-community-minimal-debuginfo-5.7.16-1.el7.x86_64.rpm\n      mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n      mysql-community-common-5.7.16-1.el7.x86_64.rpm\n      mysql-community-embedded-compat-5.7.16-1.el7.x86_64.rpm\n      mysql-community-test-5.7.16-1.el7.x86_64.rpm\n      mysql-community-embedded-devel-5.7.16-1.el7.x86_64.rpm\n      mysql-community-server-minimal-5.7.16-1.el7.x86_64.rpm\n      mysql-community-server-5.7.16-1.el7.x86_64.rpm\n      mysql-community-client-5.7.16-1.el7.x86_64.rpm\n      mysql-community-embedded-5.7.16-1.el7.x86_64.rpm\n## 安装\n    依次执行（几个包有依赖关系，所以执行有先后）下面命令安装\n    [root@centos-linux ~]# rpm -ivh mysql-community-common-5.7.16-1.el7.x86_64.rpm \n    [root@centos-linux ~]# rpm -ivh mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n    [root@centos-linux ~]# rpm -ivh mysql-community-client-5.7.16-1.el7.x86_64.rpm \n    [root@centos-linux ~]# rpm -ivh mysql-community-server-5.7.16-1.el7.x86_64.rpm\n    \n## 启动  \n\tservice mysqld start","source":"_posts/mysql.md","raw":"title: ubuntu14.04  - mysql5.7\ntags: 'server,linux,ubuntu'\ndate: 2017-05-05 13:51:49\n---\n# 服务器装mysql\n\n### 更新服务器  \n\tsudo apt-get update && sudo apt-get upgrade\n\n### 安装mysql-server \n\t\n    apt-get install mysql-server\n\n### 修改远程访问限制：\n #### 修改bind—address\n    \t在 /etc/mysql/mysql.conf.d 目录下某个文件有 bind-address属性 ，注释掉\n #### 修改host\n \t\tmysql -u root -p;\n         update mysql.user set host =\"%\" where user=\"root\";\n         flush privileges;\n         service mysql restart;\n\n\n# 相关命令\n\n ## 查看apt安装列表\n\t dpkg  -l\n\n## 卸载\n\tapt-get purge / apt-get –purge remove \n    删除已安装包（不保留配置文件)。 \n    如软件包a，依赖软件包b，则执行该命令会删除a，而且不保留配置文件\n    apt-get autoremove \n    删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件。\n    apt-get remove \n    删除已安装的软件包（保留配置文件），不会删除依赖软件包，且保留配置文件。\n    apt-get autoclean \n    APT的底层包是dpkg, 而dpkg 安装Package时, 会将 *.deb 放在 /var/cache/apt/archives/中，apt-get autoclean 只会删除 /var/cache/apt/archives/ 已经过期的deb。\n    apt-get clean \n    使用 apt-get clean 会将 /var/cache/apt/archives/ 的 所有 deb 删掉，可以理解为 rm /var/cache/apt/archives/*.deb。\n    \n ## 卸载异常\n\n\tsubprocess pre-removal script returned error exit status... \n    处理方法如下：\n        subprocess new pre-removal script returned error exit status 127 有时候也会提示 subprocess new pre-removal script returned error exit status 126\n\n    我们反复测试得到结果：只要删除deb文件在cydia上的登记信息，该软件就等于不存在，那剩下的问题就迎刃而解了。不光是这个kuaidial，其他类似的问题应该也可以如法炮制。\n\n    实际操作是：\n    1） 首先用ifile 进入根目录下的application， 删除有问题的app，这里是kuaidial.app\n    2） 进入 /var/lib/dpkg/info  找到相关文件，这里是\"reyo.phone.kuaidial\"删除\n    3） 返回cydia，到manage里的package中，卸载问题软件（其实就是形式主义，为了删除显示是错误信息而已）\n    4） 安装可用的该软件版本。\n\n------------------------------------------------------通用-------------------------------------------------------\n\n1  yum list installed |grep mysql\n2  wget dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm\n3  yum localinstall mysql-community-release-el6-5.noarch.rpm\n4  yum repolist all|grep mysql\n5  yum-config-manager --disable mysql55-community\n6  yum-config-manager --disable mysql56-community\n7  yum-config-manager --enable mysql57-community-dmr\n\n![logo](mysql/1.png)\n![logo](mysql/2.png)\n\n\n\n# ps 最简单安装如图\n\n![logo](mysql/3.png)\n\n\n\n\n\n# centos安装5.7mysql\n\n## 下载\n\twget http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar\n\n## 然后解压\n\n     [root@linux_node_1 src]# tar -xvf mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar \n      mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm\n      mysql-community-devel-5.7.16-1.el7.x86_64.rpm\n      mysql-community-minimal-debuginfo-5.7.16-1.el7.x86_64.rpm\n      mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n      mysql-community-common-5.7.16-1.el7.x86_64.rpm\n      mysql-community-embedded-compat-5.7.16-1.el7.x86_64.rpm\n      mysql-community-test-5.7.16-1.el7.x86_64.rpm\n      mysql-community-embedded-devel-5.7.16-1.el7.x86_64.rpm\n      mysql-community-server-minimal-5.7.16-1.el7.x86_64.rpm\n      mysql-community-server-5.7.16-1.el7.x86_64.rpm\n      mysql-community-client-5.7.16-1.el7.x86_64.rpm\n      mysql-community-embedded-5.7.16-1.el7.x86_64.rpm\n## 安装\n    依次执行（几个包有依赖关系，所以执行有先后）下面命令安装\n    [root@centos-linux ~]# rpm -ivh mysql-community-common-5.7.16-1.el7.x86_64.rpm \n    [root@centos-linux ~]# rpm -ivh mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n    [root@centos-linux ~]# rpm -ivh mysql-community-client-5.7.16-1.el7.x86_64.rpm \n    [root@centos-linux ~]# rpm -ivh mysql-community-server-5.7.16-1.el7.x86_64.rpm\n    \n## 启动  \n\tservice mysqld start","slug":"mysql","published":1,"updated":"2018-06-05T01:53:37.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58eqz0012awpfs1t5i17q","content":"<h1 id=\"服务器装mysql\"><a href=\"#服务器装mysql\" class=\"headerlink\" title=\"服务器装mysql\"></a>服务器装mysql</h1><h3 id=\"更新服务器\"><a href=\"#更新服务器\" class=\"headerlink\" title=\"更新服务器\"></a>更新服务器</h3><pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade\n</code></pre><h3 id=\"安装mysql-server\"><a href=\"#安装mysql-server\" class=\"headerlink\" title=\"安装mysql-server\"></a>安装mysql-server</h3><pre><code>apt-get install mysql-server\n</code></pre><h3 id=\"修改远程访问限制：\"><a href=\"#修改远程访问限制：\" class=\"headerlink\" title=\"修改远程访问限制：\"></a>修改远程访问限制：</h3><h4 id=\"修改bind—address\"><a href=\"#修改bind—address\" class=\"headerlink\" title=\"修改bind—address\"></a>修改bind—address</h4><pre><code>在 /etc/mysql/mysql.conf.d 目录下某个文件有 bind-address属性 ，注释掉\n</code></pre><h4 id=\"修改host\"><a href=\"#修改host\" class=\"headerlink\" title=\"修改host\"></a>修改host</h4><pre><code>mysql -u root -p;\nupdate mysql.user set host =&quot;%&quot; where user=&quot;root&quot;;\nflush privileges;\nservice mysql restart;\n</code></pre><h1 id=\"相关命令\"><a href=\"#相关命令\" class=\"headerlink\" title=\"相关命令\"></a>相关命令</h1><h2 id=\"查看apt安装列表\"><a href=\"#查看apt安装列表\" class=\"headerlink\" title=\"查看apt安装列表\"></a>查看apt安装列表</h2><pre><code>dpkg  -l\n</code></pre><h2 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h2><pre><code>apt-get purge / apt-get –purge remove \n删除已安装包（不保留配置文件)。 \n如软件包a，依赖软件包b，则执行该命令会删除a，而且不保留配置文件\napt-get autoremove \n删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件。\napt-get remove \n删除已安装的软件包（保留配置文件），不会删除依赖软件包，且保留配置文件。\napt-get autoclean \nAPT的底层包是dpkg, 而dpkg 安装Package时, 会将 *.deb 放在 /var/cache/apt/archives/中，apt-get autoclean 只会删除 /var/cache/apt/archives/ 已经过期的deb。\napt-get clean \n使用 apt-get clean 会将 /var/cache/apt/archives/ 的 所有 deb 删掉，可以理解为 rm /var/cache/apt/archives/*.deb。\n</code></pre><h2 id=\"卸载异常\"><a href=\"#卸载异常\" class=\"headerlink\" title=\"卸载异常\"></a>卸载异常</h2><pre><code>subprocess pre-removal script returned error exit status... \n处理方法如下：\n    subprocess new pre-removal script returned error exit status 127 有时候也会提示 subprocess new pre-removal script returned error exit status 126\n\n我们反复测试得到结果：只要删除deb文件在cydia上的登记信息，该软件就等于不存在，那剩下的问题就迎刃而解了。不光是这个kuaidial，其他类似的问题应该也可以如法炮制。\n\n实际操作是：\n1） 首先用ifile 进入根目录下的application， 删除有问题的app，这里是kuaidial.app\n2） 进入 /var/lib/dpkg/info  找到相关文件，这里是&quot;reyo.phone.kuaidial&quot;删除\n3） 返回cydia，到manage里的package中，卸载问题软件（其实就是形式主义，为了删除显示是错误信息而已）\n4） 安装可用的该软件版本。\n</code></pre><p>——————————————————通用——————————————————-</p>\n<p>1  yum list installed |grep mysql<br>2  wget dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm<br>3  yum localinstall mysql-community-release-el6-5.noarch.rpm<br>4  yum repolist all|grep mysql<br>5  yum-config-manager –disable mysql55-community<br>6  yum-config-manager –disable mysql56-community<br>7  yum-config-manager –enable mysql57-community-dmr</p>\n<p><img src=\"/2017/05/05/mysql/1.png\" alt=\"logo\"><br><img src=\"/2017/05/05/mysql/2.png\" alt=\"logo\"></p>\n<h1 id=\"ps-最简单安装如图\"><a href=\"#ps-最简单安装如图\" class=\"headerlink\" title=\"ps 最简单安装如图\"></a>ps 最简单安装如图</h1><p><img src=\"/2017/05/05/mysql/3.png\" alt=\"logo\"></p>\n<h1 id=\"centos安装5-7mysql\"><a href=\"#centos安装5-7mysql\" class=\"headerlink\" title=\"centos安装5.7mysql\"></a>centos安装5.7mysql</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><pre><code>wget http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar\n</code></pre><h2 id=\"然后解压\"><a href=\"#然后解压\" class=\"headerlink\" title=\"然后解压\"></a>然后解压</h2><pre><code>[root@linux_node_1 src]# tar -xvf mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar \n mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm\n mysql-community-devel-5.7.16-1.el7.x86_64.rpm\n mysql-community-minimal-debuginfo-5.7.16-1.el7.x86_64.rpm\n mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n mysql-community-common-5.7.16-1.el7.x86_64.rpm\n mysql-community-embedded-compat-5.7.16-1.el7.x86_64.rpm\n mysql-community-test-5.7.16-1.el7.x86_64.rpm\n mysql-community-embedded-devel-5.7.16-1.el7.x86_64.rpm\n mysql-community-server-minimal-5.7.16-1.el7.x86_64.rpm\n mysql-community-server-5.7.16-1.el7.x86_64.rpm\n mysql-community-client-5.7.16-1.el7.x86_64.rpm\n mysql-community-embedded-5.7.16-1.el7.x86_64.rpm\n</code></pre><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre><code>依次执行（几个包有依赖关系，所以执行有先后）下面命令安装\n[root@centos-linux ~]# rpm -ivh mysql-community-common-5.7.16-1.el7.x86_64.rpm \n[root@centos-linux ~]# rpm -ivh mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n[root@centos-linux ~]# rpm -ivh mysql-community-client-5.7.16-1.el7.x86_64.rpm \n[root@centos-linux ~]# rpm -ivh mysql-community-server-5.7.16-1.el7.x86_64.rpm\n</code></pre><h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><pre><code>service mysqld start\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"服务器装mysql\"><a href=\"#服务器装mysql\" class=\"headerlink\" title=\"服务器装mysql\"></a>服务器装mysql</h1><h3 id=\"更新服务器\"><a href=\"#更新服务器\" class=\"headerlink\" title=\"更新服务器\"></a>更新服务器</h3><pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade\n</code></pre><h3 id=\"安装mysql-server\"><a href=\"#安装mysql-server\" class=\"headerlink\" title=\"安装mysql-server\"></a>安装mysql-server</h3><pre><code>apt-get install mysql-server\n</code></pre><h3 id=\"修改远程访问限制：\"><a href=\"#修改远程访问限制：\" class=\"headerlink\" title=\"修改远程访问限制：\"></a>修改远程访问限制：</h3><h4 id=\"修改bind—address\"><a href=\"#修改bind—address\" class=\"headerlink\" title=\"修改bind—address\"></a>修改bind—address</h4><pre><code>在 /etc/mysql/mysql.conf.d 目录下某个文件有 bind-address属性 ，注释掉\n</code></pre><h4 id=\"修改host\"><a href=\"#修改host\" class=\"headerlink\" title=\"修改host\"></a>修改host</h4><pre><code>mysql -u root -p;\nupdate mysql.user set host =&quot;%&quot; where user=&quot;root&quot;;\nflush privileges;\nservice mysql restart;\n</code></pre><h1 id=\"相关命令\"><a href=\"#相关命令\" class=\"headerlink\" title=\"相关命令\"></a>相关命令</h1><h2 id=\"查看apt安装列表\"><a href=\"#查看apt安装列表\" class=\"headerlink\" title=\"查看apt安装列表\"></a>查看apt安装列表</h2><pre><code>dpkg  -l\n</code></pre><h2 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h2><pre><code>apt-get purge / apt-get –purge remove \n删除已安装包（不保留配置文件)。 \n如软件包a，依赖软件包b，则执行该命令会删除a，而且不保留配置文件\napt-get autoremove \n删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件。\napt-get remove \n删除已安装的软件包（保留配置文件），不会删除依赖软件包，且保留配置文件。\napt-get autoclean \nAPT的底层包是dpkg, 而dpkg 安装Package时, 会将 *.deb 放在 /var/cache/apt/archives/中，apt-get autoclean 只会删除 /var/cache/apt/archives/ 已经过期的deb。\napt-get clean \n使用 apt-get clean 会将 /var/cache/apt/archives/ 的 所有 deb 删掉，可以理解为 rm /var/cache/apt/archives/*.deb。\n</code></pre><h2 id=\"卸载异常\"><a href=\"#卸载异常\" class=\"headerlink\" title=\"卸载异常\"></a>卸载异常</h2><pre><code>subprocess pre-removal script returned error exit status... \n处理方法如下：\n    subprocess new pre-removal script returned error exit status 127 有时候也会提示 subprocess new pre-removal script returned error exit status 126\n\n我们反复测试得到结果：只要删除deb文件在cydia上的登记信息，该软件就等于不存在，那剩下的问题就迎刃而解了。不光是这个kuaidial，其他类似的问题应该也可以如法炮制。\n\n实际操作是：\n1） 首先用ifile 进入根目录下的application， 删除有问题的app，这里是kuaidial.app\n2） 进入 /var/lib/dpkg/info  找到相关文件，这里是&quot;reyo.phone.kuaidial&quot;删除\n3） 返回cydia，到manage里的package中，卸载问题软件（其实就是形式主义，为了删除显示是错误信息而已）\n4） 安装可用的该软件版本。\n</code></pre><p>——————————————————通用——————————————————-</p>\n<p>1  yum list installed |grep mysql<br>2  wget dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm<br>3  yum localinstall mysql-community-release-el6-5.noarch.rpm<br>4  yum repolist all|grep mysql<br>5  yum-config-manager –disable mysql55-community<br>6  yum-config-manager –disable mysql56-community<br>7  yum-config-manager –enable mysql57-community-dmr</p>\n<p><img src=\"/2017/05/05/mysql/1.png\" alt=\"logo\"><br><img src=\"/2017/05/05/mysql/2.png\" alt=\"logo\"></p>\n<h1 id=\"ps-最简单安装如图\"><a href=\"#ps-最简单安装如图\" class=\"headerlink\" title=\"ps 最简单安装如图\"></a>ps 最简单安装如图</h1><p><img src=\"/2017/05/05/mysql/3.png\" alt=\"logo\"></p>\n<h1 id=\"centos安装5-7mysql\"><a href=\"#centos安装5-7mysql\" class=\"headerlink\" title=\"centos安装5.7mysql\"></a>centos安装5.7mysql</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><pre><code>wget http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar\n</code></pre><h2 id=\"然后解压\"><a href=\"#然后解压\" class=\"headerlink\" title=\"然后解压\"></a>然后解压</h2><pre><code>[root@linux_node_1 src]# tar -xvf mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar \n mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm\n mysql-community-devel-5.7.16-1.el7.x86_64.rpm\n mysql-community-minimal-debuginfo-5.7.16-1.el7.x86_64.rpm\n mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n mysql-community-common-5.7.16-1.el7.x86_64.rpm\n mysql-community-embedded-compat-5.7.16-1.el7.x86_64.rpm\n mysql-community-test-5.7.16-1.el7.x86_64.rpm\n mysql-community-embedded-devel-5.7.16-1.el7.x86_64.rpm\n mysql-community-server-minimal-5.7.16-1.el7.x86_64.rpm\n mysql-community-server-5.7.16-1.el7.x86_64.rpm\n mysql-community-client-5.7.16-1.el7.x86_64.rpm\n mysql-community-embedded-5.7.16-1.el7.x86_64.rpm\n</code></pre><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre><code>依次执行（几个包有依赖关系，所以执行有先后）下面命令安装\n[root@centos-linux ~]# rpm -ivh mysql-community-common-5.7.16-1.el7.x86_64.rpm \n[root@centos-linux ~]# rpm -ivh mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n[root@centos-linux ~]# rpm -ivh mysql-community-client-5.7.16-1.el7.x86_64.rpm \n[root@centos-linux ~]# rpm -ivh mysql-community-server-5.7.16-1.el7.x86_64.rpm\n</code></pre><h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><pre><code>service mysqld start\n</code></pre>"},{"title":"mysql数据库灾备方案——chapter02（全备+增量）","author":"zjy","date":"2017-11-21T03:05:22.000Z","_content":"# 1 开启二进制文件\n\tmy.cnf里添加:\n\tlog-bin=mysql-bin\n\n# 2 修改脚本里面的路径\n\tmysql_full_backup.sh里：\n\t\tBACKUP_DIR：备份的全量sql存放路径\n\t\tKEEP_MYSQL：备份全量sql保存的天数\n\t\tMYSQL_HOST：mysql地址\n\t\tMYSQL_USER：mysql用户\n\t\tMYSQL_PASS：mysql密码\n\t\tMYSQL_PORT：mysql端口 \n\t\t\n\t\n\tmysql_incres_bin.sh里：\n\t\tMYSQL_HOST:mysql地址\n\t\tMYSQL_USER:mysql用户\n\t\tMYSQL_PASS:mysql密码\n\t\tMYSQL_PORT:mysql端口 \n\n\t\tBakDir:增量备份的文件 mysql-bin.0000*文件存放地址\n\t\tLogFile:备份过程发生的日志文件路径\n\t\tBinDir:需要备份数据库的二进制文件目录\n\t\t\n\t\t\n# 3 数据恢复：\n\t使用全量备份sql恢复：\n\t\t对应的sql文件对应着数据库名字，直接运行sql脚本即可\n\t\t\n\t使用增量恢复：（mysql-bin.0000**路径自己看着写，然后日期自己看着写）\n\t\tmysqlbinlog --start-datetime='2010-01-01 00:00:02'  mysql-bin.*|mysql -uroot -p\n\t\t\n\t\t\n\n# 4 开启定时任务：\n\t$ crontab -e\n\t\n\t#每周五凌晨2:00全量备份\n\t0 2 * * 5 /home/task_script/mysql_full_backup.sh >/home/backup/mysqlback.log>&1 &\n\t\n\t#周一到周六凌晨2:00做增量备份\n\t0 2 * * 1-6 /home/task_script/mysql_incres_bin.sh >/dev/null 2>&1\n    \n    \n    \n# 附件1(全备份脚本)\n\t\n    \n\t#!/bin/bash\n    # mysql_full_backup.sh 全量备份mysql，定时删除备份文件\n    # BEGIN CONFIGURATION ==========================================================\n\n    BACKUP_DIR=\"/home/backup\"  # The directory in which you want backups placed\n    KEEP_MYSQL=\"14\" # How many days worth of mysql dumps to keep\n\n    MYSQL_HOST=\"127.0.0.1\"\n    MYSQL_USER=\"root\"\n    MYSQL_PASS=\"123\"\n    MYSQL_PORT=\"3308\"\n\n    MYSQL_BACKUP_DIR=\"$BACKUP_DIR/mysql/\"\n\n    # You probably won't have to change these\n    THE_DATE=\"$(date '+%Y-%m-%d')\"\n\n    MYSQL_PATH=\"$(which mysql)\"\n    MYSQLDUMP_PATH=\"$(which mysqldump)\"\n    FIND_PATH=\"$(which find)\"\n    TAR_PATH=\"$(which tar)\"\n    RSYNC_PATH=\"$(which rsync)\"\n\n    # END CONFIGURATION ============================================================\n\n\n\n    # Announce the backup time\n    echo \"Backup Started: $(date)\"\n\n    # Create the backup dirs if they don't exist\n    if [[ ! -d $BACKUP_DIR ]]\n      then\n      mkdir -p \"$BACKUP_DIR\"\n    fi\n    if [[ ! -d $MYSQL_BACKUP_DIR ]]\n      then\n      mkdir -p \"$MYSQL_BACKUP_DIR\"\n    fi\n\n    # Get a list of mysql databases and dump them one by one\n    echo \"------------------------------------\"\n    ALL_DBS=($($MYSQL_PATH -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS -Bse 'show databases'))\n    SYSTEM_DBS=(\"information_schema\" \"mysql\" \"performance_schema\" \"test\")\n    DBS=()\n\n    for i in \"${ALL_DBS[@]}\"; do\n      skip=\n      for j in \"${SYSTEM_DBS[@]}\"; do\n        [[ $i == $j ]] && { skip=1; break; }\n      done\n      [[ -n $skip ]] || DBS+=(\"$i\")\n    done\n\n    for db in \"${DBS[@]}\"; do\n      echo \"Dumping: $db...\"\n      $MYSQLDUMP_PATH --opt --skip-add-locks -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS $db | gzip > $MYSQL_BACKUP_DIR$db\\_$THE_DATE.sql.gz\n    done\n\n    # Delete old dumps\n    echo \"------------------------------------\"\n    echo \"Deleting old backups...\"\n    # List dumps to be deleted to stdout (for report)\n    $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL\n    # Delete dumps older than specified number of days\n    $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL -exec rm {} +\n\n\n    # Announce the completion time\n    echo \"------------------------------------\"\n    echo \"Backup Completed: $(date)\"\n    \n    \n    \n# 附件2（增量备份脚本）\n\t# cat /root/DBDailyBak.sh //内容为下\n    #!/bin/bash \n\t# mysql_incres_bin.sh\n    MYSQL_HOST=\"127.0.0.1\"\n    MYSQL_USER=\"root\"\n    MYSQL_PASS=\"123\"\n    MYSQL_PORT=\"3308\"\n\n    BakDir=/home/backup/mysql\n    LogFile=/home/backup/mysql/bak.log\n    BinDir=/home/mysql/master/data/db-data\n\n    BinFile=$BinDir/mysql-bin.index\n    MYSQLADMIN_PATH=\"$(which mysqladmin)\"\n    THE_DATE=\"$(date '+%Y-%m-%d')\"\n\n\n\n\n    $MYSQLADMIN_PATH -h$MYSQL_HOST -P$MYSQL_PORT -u$MYSQL_USER -p$MYSQL_PASS flush-logs\n    #这个是用于产生新的mysql-bin.00000*文件\n    Counter=`wc -l $BinFile |awk '{print $1}'`\n    NextNum=0\n    #这个for循环用于比对$Counter,$NextNum这两个值来确定文件是不是存在或最新的。\n    for file in  `cat $BinFile`\n    do\n            base=`basename $file`\n            #basename用于截取mysql-bin.00000x文件名，去掉./mysql-bin.000005前面的./\n            NextNum=`expr $NextNum + 1`\n            if [ $NextNum -eq $Counter ]\n            then\n                    echo $base skip!  >> $LogFile\n            else\n                    dest=$BakDir/$base\n                    if(test -e $dest)\n                    #test -e用于检测目标文件是否存在，存在就写exist!到$LogFile去。\n                    then\n                            echo  $base exist! >> $LogFile\n                    else\n                            cp $BinDir/$base $BakDir\n                            echo $base copying >> $LogFile\n                    fi\n            fi\n    done\n    echo `date +\"%Y年%m月%d日 %H:%M:%S\"` $Next Bakup succ! >> $LogFile\n\n    #mysqlbinlog --start-datetime='2010-01-01 00:00:02' mysql-bin.*|mysql -uroot -p\n\t","source":"_posts/mysql数据库灾备方案——chapter02（全备-增量）.md","raw":"title: mysql数据库灾备方案——chapter02（全备+增量）\nauthor: zjy\ndate: 2017-11-21 11:05:22\ntags:\n---\n# 1 开启二进制文件\n\tmy.cnf里添加:\n\tlog-bin=mysql-bin\n\n# 2 修改脚本里面的路径\n\tmysql_full_backup.sh里：\n\t\tBACKUP_DIR：备份的全量sql存放路径\n\t\tKEEP_MYSQL：备份全量sql保存的天数\n\t\tMYSQL_HOST：mysql地址\n\t\tMYSQL_USER：mysql用户\n\t\tMYSQL_PASS：mysql密码\n\t\tMYSQL_PORT：mysql端口 \n\t\t\n\t\n\tmysql_incres_bin.sh里：\n\t\tMYSQL_HOST:mysql地址\n\t\tMYSQL_USER:mysql用户\n\t\tMYSQL_PASS:mysql密码\n\t\tMYSQL_PORT:mysql端口 \n\n\t\tBakDir:增量备份的文件 mysql-bin.0000*文件存放地址\n\t\tLogFile:备份过程发生的日志文件路径\n\t\tBinDir:需要备份数据库的二进制文件目录\n\t\t\n\t\t\n# 3 数据恢复：\n\t使用全量备份sql恢复：\n\t\t对应的sql文件对应着数据库名字，直接运行sql脚本即可\n\t\t\n\t使用增量恢复：（mysql-bin.0000**路径自己看着写，然后日期自己看着写）\n\t\tmysqlbinlog --start-datetime='2010-01-01 00:00:02'  mysql-bin.*|mysql -uroot -p\n\t\t\n\t\t\n\n# 4 开启定时任务：\n\t$ crontab -e\n\t\n\t#每周五凌晨2:00全量备份\n\t0 2 * * 5 /home/task_script/mysql_full_backup.sh >/home/backup/mysqlback.log>&1 &\n\t\n\t#周一到周六凌晨2:00做增量备份\n\t0 2 * * 1-6 /home/task_script/mysql_incres_bin.sh >/dev/null 2>&1\n    \n    \n    \n# 附件1(全备份脚本)\n\t\n    \n\t#!/bin/bash\n    # mysql_full_backup.sh 全量备份mysql，定时删除备份文件\n    # BEGIN CONFIGURATION ==========================================================\n\n    BACKUP_DIR=\"/home/backup\"  # The directory in which you want backups placed\n    KEEP_MYSQL=\"14\" # How many days worth of mysql dumps to keep\n\n    MYSQL_HOST=\"127.0.0.1\"\n    MYSQL_USER=\"root\"\n    MYSQL_PASS=\"123\"\n    MYSQL_PORT=\"3308\"\n\n    MYSQL_BACKUP_DIR=\"$BACKUP_DIR/mysql/\"\n\n    # You probably won't have to change these\n    THE_DATE=\"$(date '+%Y-%m-%d')\"\n\n    MYSQL_PATH=\"$(which mysql)\"\n    MYSQLDUMP_PATH=\"$(which mysqldump)\"\n    FIND_PATH=\"$(which find)\"\n    TAR_PATH=\"$(which tar)\"\n    RSYNC_PATH=\"$(which rsync)\"\n\n    # END CONFIGURATION ============================================================\n\n\n\n    # Announce the backup time\n    echo \"Backup Started: $(date)\"\n\n    # Create the backup dirs if they don't exist\n    if [[ ! -d $BACKUP_DIR ]]\n      then\n      mkdir -p \"$BACKUP_DIR\"\n    fi\n    if [[ ! -d $MYSQL_BACKUP_DIR ]]\n      then\n      mkdir -p \"$MYSQL_BACKUP_DIR\"\n    fi\n\n    # Get a list of mysql databases and dump them one by one\n    echo \"------------------------------------\"\n    ALL_DBS=($($MYSQL_PATH -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS -Bse 'show databases'))\n    SYSTEM_DBS=(\"information_schema\" \"mysql\" \"performance_schema\" \"test\")\n    DBS=()\n\n    for i in \"${ALL_DBS[@]}\"; do\n      skip=\n      for j in \"${SYSTEM_DBS[@]}\"; do\n        [[ $i == $j ]] && { skip=1; break; }\n      done\n      [[ -n $skip ]] || DBS+=(\"$i\")\n    done\n\n    for db in \"${DBS[@]}\"; do\n      echo \"Dumping: $db...\"\n      $MYSQLDUMP_PATH --opt --skip-add-locks -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS $db | gzip > $MYSQL_BACKUP_DIR$db\\_$THE_DATE.sql.gz\n    done\n\n    # Delete old dumps\n    echo \"------------------------------------\"\n    echo \"Deleting old backups...\"\n    # List dumps to be deleted to stdout (for report)\n    $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL\n    # Delete dumps older than specified number of days\n    $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL -exec rm {} +\n\n\n    # Announce the completion time\n    echo \"------------------------------------\"\n    echo \"Backup Completed: $(date)\"\n    \n    \n    \n# 附件2（增量备份脚本）\n\t# cat /root/DBDailyBak.sh //内容为下\n    #!/bin/bash \n\t# mysql_incres_bin.sh\n    MYSQL_HOST=\"127.0.0.1\"\n    MYSQL_USER=\"root\"\n    MYSQL_PASS=\"123\"\n    MYSQL_PORT=\"3308\"\n\n    BakDir=/home/backup/mysql\n    LogFile=/home/backup/mysql/bak.log\n    BinDir=/home/mysql/master/data/db-data\n\n    BinFile=$BinDir/mysql-bin.index\n    MYSQLADMIN_PATH=\"$(which mysqladmin)\"\n    THE_DATE=\"$(date '+%Y-%m-%d')\"\n\n\n\n\n    $MYSQLADMIN_PATH -h$MYSQL_HOST -P$MYSQL_PORT -u$MYSQL_USER -p$MYSQL_PASS flush-logs\n    #这个是用于产生新的mysql-bin.00000*文件\n    Counter=`wc -l $BinFile |awk '{print $1}'`\n    NextNum=0\n    #这个for循环用于比对$Counter,$NextNum这两个值来确定文件是不是存在或最新的。\n    for file in  `cat $BinFile`\n    do\n            base=`basename $file`\n            #basename用于截取mysql-bin.00000x文件名，去掉./mysql-bin.000005前面的./\n            NextNum=`expr $NextNum + 1`\n            if [ $NextNum -eq $Counter ]\n            then\n                    echo $base skip!  >> $LogFile\n            else\n                    dest=$BakDir/$base\n                    if(test -e $dest)\n                    #test -e用于检测目标文件是否存在，存在就写exist!到$LogFile去。\n                    then\n                            echo  $base exist! >> $LogFile\n                    else\n                            cp $BinDir/$base $BakDir\n                            echo $base copying >> $LogFile\n                    fi\n            fi\n    done\n    echo `date +\"%Y年%m月%d日 %H:%M:%S\"` $Next Bakup succ! >> $LogFile\n\n    #mysqlbinlog --start-datetime='2010-01-01 00:00:02' mysql-bin.*|mysql -uroot -p\n\t","slug":"mysql数据库灾备方案——chapter02（全备-增量）","published":1,"updated":"2017-11-21T03:08:43.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58er20014awpfe4ah4l9m","content":"<h1 id=\"1-开启二进制文件\"><a href=\"#1-开启二进制文件\" class=\"headerlink\" title=\"1 开启二进制文件\"></a>1 开启二进制文件</h1><pre><code>my.cnf里添加:\nlog-bin=mysql-bin\n</code></pre><h1 id=\"2-修改脚本里面的路径\"><a href=\"#2-修改脚本里面的路径\" class=\"headerlink\" title=\"2 修改脚本里面的路径\"></a>2 修改脚本里面的路径</h1><pre><code>mysql_full_backup.sh里：\n    BACKUP_DIR：备份的全量sql存放路径\n    KEEP_MYSQL：备份全量sql保存的天数\n    MYSQL_HOST：mysql地址\n    MYSQL_USER：mysql用户\n    MYSQL_PASS：mysql密码\n    MYSQL_PORT：mysql端口 \n\n\nmysql_incres_bin.sh里：\n    MYSQL_HOST:mysql地址\n    MYSQL_USER:mysql用户\n    MYSQL_PASS:mysql密码\n    MYSQL_PORT:mysql端口 \n\n    BakDir:增量备份的文件 mysql-bin.0000*文件存放地址\n    LogFile:备份过程发生的日志文件路径\n    BinDir:需要备份数据库的二进制文件目录\n</code></pre><h1 id=\"3-数据恢复：\"><a href=\"#3-数据恢复：\" class=\"headerlink\" title=\"3 数据恢复：\"></a>3 数据恢复：</h1><pre><code>使用全量备份sql恢复：\n    对应的sql文件对应着数据库名字，直接运行sql脚本即可\n\n使用增量恢复：（mysql-bin.0000**路径自己看着写，然后日期自己看着写）\n    mysqlbinlog --start-datetime=&apos;2010-01-01 00:00:02&apos;  mysql-bin.*|mysql -uroot -p\n</code></pre><h1 id=\"4-开启定时任务：\"><a href=\"#4-开启定时任务：\" class=\"headerlink\" title=\"4 开启定时任务：\"></a>4 开启定时任务：</h1><pre><code>$ crontab -e\n\n#每周五凌晨2:00全量备份\n0 2 * * 5 /home/task_script/mysql_full_backup.sh &gt;/home/backup/mysqlback.log&gt;&amp;1 &amp;\n\n#周一到周六凌晨2:00做增量备份\n0 2 * * 1-6 /home/task_script/mysql_incres_bin.sh &gt;/dev/null 2&gt;&amp;1\n</code></pre><h1 id=\"附件1-全备份脚本\"><a href=\"#附件1-全备份脚本\" class=\"headerlink\" title=\"附件1(全备份脚本)\"></a>附件1(全备份脚本)</h1><pre><code>#!/bin/bash\n# mysql_full_backup.sh 全量备份mysql，定时删除备份文件\n# BEGIN CONFIGURATION ==========================================================\n\nBACKUP_DIR=&quot;/home/backup&quot;  # The directory in which you want backups placed\nKEEP_MYSQL=&quot;14&quot; # How many days worth of mysql dumps to keep\n\nMYSQL_HOST=&quot;127.0.0.1&quot;\nMYSQL_USER=&quot;root&quot;\nMYSQL_PASS=&quot;123&quot;\nMYSQL_PORT=&quot;3308&quot;\n\nMYSQL_BACKUP_DIR=&quot;$BACKUP_DIR/mysql/&quot;\n\n# You probably won&apos;t have to change these\nTHE_DATE=&quot;$(date &apos;+%Y-%m-%d&apos;)&quot;\n\nMYSQL_PATH=&quot;$(which mysql)&quot;\nMYSQLDUMP_PATH=&quot;$(which mysqldump)&quot;\nFIND_PATH=&quot;$(which find)&quot;\nTAR_PATH=&quot;$(which tar)&quot;\nRSYNC_PATH=&quot;$(which rsync)&quot;\n\n# END CONFIGURATION ============================================================\n\n\n\n# Announce the backup time\necho &quot;Backup Started: $(date)&quot;\n\n# Create the backup dirs if they don&apos;t exist\nif [[ ! -d $BACKUP_DIR ]]\n  then\n  mkdir -p &quot;$BACKUP_DIR&quot;\nfi\nif [[ ! -d $MYSQL_BACKUP_DIR ]]\n  then\n  mkdir -p &quot;$MYSQL_BACKUP_DIR&quot;\nfi\n\n# Get a list of mysql databases and dump them one by one\necho &quot;------------------------------------&quot;\nALL_DBS=($($MYSQL_PATH -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS -Bse &apos;show databases&apos;))\nSYSTEM_DBS=(&quot;information_schema&quot; &quot;mysql&quot; &quot;performance_schema&quot; &quot;test&quot;)\nDBS=()\n\nfor i in &quot;${ALL_DBS[@]}&quot;; do\n  skip=\n  for j in &quot;${SYSTEM_DBS[@]}&quot;; do\n    [[ $i == $j ]] &amp;&amp; { skip=1; break; }\n  done\n  [[ -n $skip ]] || DBS+=(&quot;$i&quot;)\ndone\n\nfor db in &quot;${DBS[@]}&quot;; do\n  echo &quot;Dumping: $db...&quot;\n  $MYSQLDUMP_PATH --opt --skip-add-locks -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS $db | gzip &gt; $MYSQL_BACKUP_DIR$db\\_$THE_DATE.sql.gz\ndone\n\n# Delete old dumps\necho &quot;------------------------------------&quot;\necho &quot;Deleting old backups...&quot;\n# List dumps to be deleted to stdout (for report)\n$FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL\n# Delete dumps older than specified number of days\n$FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL -exec rm {} +\n\n\n# Announce the completion time\necho &quot;------------------------------------&quot;\necho &quot;Backup Completed: $(date)&quot;\n</code></pre><h1 id=\"附件2（增量备份脚本）\"><a href=\"#附件2（增量备份脚本）\" class=\"headerlink\" title=\"附件2（增量备份脚本）\"></a>附件2（增量备份脚本）</h1><pre><code># cat /root/DBDailyBak.sh //内容为下\n#!/bin/bash \n# mysql_incres_bin.sh\nMYSQL_HOST=&quot;127.0.0.1&quot;\nMYSQL_USER=&quot;root&quot;\nMYSQL_PASS=&quot;123&quot;\nMYSQL_PORT=&quot;3308&quot;\n\nBakDir=/home/backup/mysql\nLogFile=/home/backup/mysql/bak.log\nBinDir=/home/mysql/master/data/db-data\n\nBinFile=$BinDir/mysql-bin.index\nMYSQLADMIN_PATH=&quot;$(which mysqladmin)&quot;\nTHE_DATE=&quot;$(date &apos;+%Y-%m-%d&apos;)&quot;\n\n\n\n\n$MYSQLADMIN_PATH -h$MYSQL_HOST -P$MYSQL_PORT -u$MYSQL_USER -p$MYSQL_PASS flush-logs\n#这个是用于产生新的mysql-bin.00000*文件\nCounter=`wc -l $BinFile |awk &apos;{print $1}&apos;`\nNextNum=0\n#这个for循环用于比对$Counter,$NextNum这两个值来确定文件是不是存在或最新的。\nfor file in  `cat $BinFile`\ndo\n        base=`basename $file`\n        #basename用于截取mysql-bin.00000x文件名，去掉./mysql-bin.000005前面的./\n        NextNum=`expr $NextNum + 1`\n        if [ $NextNum -eq $Counter ]\n        then\n                echo $base skip!  &gt;&gt; $LogFile\n        else\n                dest=$BakDir/$base\n                if(test -e $dest)\n                #test -e用于检测目标文件是否存在，存在就写exist!到$LogFile去。\n                then\n                        echo  $base exist! &gt;&gt; $LogFile\n                else\n                        cp $BinDir/$base $BakDir\n                        echo $base copying &gt;&gt; $LogFile\n                fi\n        fi\ndone\necho `date +&quot;%Y年%m月%d日 %H:%M:%S&quot;` $Next Bakup succ! &gt;&gt; $LogFile\n\n#mysqlbinlog --start-datetime=&apos;2010-01-01 00:00:02&apos; mysql-bin.*|mysql -uroot -p\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-开启二进制文件\"><a href=\"#1-开启二进制文件\" class=\"headerlink\" title=\"1 开启二进制文件\"></a>1 开启二进制文件</h1><pre><code>my.cnf里添加:\nlog-bin=mysql-bin\n</code></pre><h1 id=\"2-修改脚本里面的路径\"><a href=\"#2-修改脚本里面的路径\" class=\"headerlink\" title=\"2 修改脚本里面的路径\"></a>2 修改脚本里面的路径</h1><pre><code>mysql_full_backup.sh里：\n    BACKUP_DIR：备份的全量sql存放路径\n    KEEP_MYSQL：备份全量sql保存的天数\n    MYSQL_HOST：mysql地址\n    MYSQL_USER：mysql用户\n    MYSQL_PASS：mysql密码\n    MYSQL_PORT：mysql端口 \n\n\nmysql_incres_bin.sh里：\n    MYSQL_HOST:mysql地址\n    MYSQL_USER:mysql用户\n    MYSQL_PASS:mysql密码\n    MYSQL_PORT:mysql端口 \n\n    BakDir:增量备份的文件 mysql-bin.0000*文件存放地址\n    LogFile:备份过程发生的日志文件路径\n    BinDir:需要备份数据库的二进制文件目录\n</code></pre><h1 id=\"3-数据恢复：\"><a href=\"#3-数据恢复：\" class=\"headerlink\" title=\"3 数据恢复：\"></a>3 数据恢复：</h1><pre><code>使用全量备份sql恢复：\n    对应的sql文件对应着数据库名字，直接运行sql脚本即可\n\n使用增量恢复：（mysql-bin.0000**路径自己看着写，然后日期自己看着写）\n    mysqlbinlog --start-datetime=&apos;2010-01-01 00:00:02&apos;  mysql-bin.*|mysql -uroot -p\n</code></pre><h1 id=\"4-开启定时任务：\"><a href=\"#4-开启定时任务：\" class=\"headerlink\" title=\"4 开启定时任务：\"></a>4 开启定时任务：</h1><pre><code>$ crontab -e\n\n#每周五凌晨2:00全量备份\n0 2 * * 5 /home/task_script/mysql_full_backup.sh &gt;/home/backup/mysqlback.log&gt;&amp;1 &amp;\n\n#周一到周六凌晨2:00做增量备份\n0 2 * * 1-6 /home/task_script/mysql_incres_bin.sh &gt;/dev/null 2&gt;&amp;1\n</code></pre><h1 id=\"附件1-全备份脚本\"><a href=\"#附件1-全备份脚本\" class=\"headerlink\" title=\"附件1(全备份脚本)\"></a>附件1(全备份脚本)</h1><pre><code>#!/bin/bash\n# mysql_full_backup.sh 全量备份mysql，定时删除备份文件\n# BEGIN CONFIGURATION ==========================================================\n\nBACKUP_DIR=&quot;/home/backup&quot;  # The directory in which you want backups placed\nKEEP_MYSQL=&quot;14&quot; # How many days worth of mysql dumps to keep\n\nMYSQL_HOST=&quot;127.0.0.1&quot;\nMYSQL_USER=&quot;root&quot;\nMYSQL_PASS=&quot;123&quot;\nMYSQL_PORT=&quot;3308&quot;\n\nMYSQL_BACKUP_DIR=&quot;$BACKUP_DIR/mysql/&quot;\n\n# You probably won&apos;t have to change these\nTHE_DATE=&quot;$(date &apos;+%Y-%m-%d&apos;)&quot;\n\nMYSQL_PATH=&quot;$(which mysql)&quot;\nMYSQLDUMP_PATH=&quot;$(which mysqldump)&quot;\nFIND_PATH=&quot;$(which find)&quot;\nTAR_PATH=&quot;$(which tar)&quot;\nRSYNC_PATH=&quot;$(which rsync)&quot;\n\n# END CONFIGURATION ============================================================\n\n\n\n# Announce the backup time\necho &quot;Backup Started: $(date)&quot;\n\n# Create the backup dirs if they don&apos;t exist\nif [[ ! -d $BACKUP_DIR ]]\n  then\n  mkdir -p &quot;$BACKUP_DIR&quot;\nfi\nif [[ ! -d $MYSQL_BACKUP_DIR ]]\n  then\n  mkdir -p &quot;$MYSQL_BACKUP_DIR&quot;\nfi\n\n# Get a list of mysql databases and dump them one by one\necho &quot;------------------------------------&quot;\nALL_DBS=($($MYSQL_PATH -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS -Bse &apos;show databases&apos;))\nSYSTEM_DBS=(&quot;information_schema&quot; &quot;mysql&quot; &quot;performance_schema&quot; &quot;test&quot;)\nDBS=()\n\nfor i in &quot;${ALL_DBS[@]}&quot;; do\n  skip=\n  for j in &quot;${SYSTEM_DBS[@]}&quot;; do\n    [[ $i == $j ]] &amp;&amp; { skip=1; break; }\n  done\n  [[ -n $skip ]] || DBS+=(&quot;$i&quot;)\ndone\n\nfor db in &quot;${DBS[@]}&quot;; do\n  echo &quot;Dumping: $db...&quot;\n  $MYSQLDUMP_PATH --opt --skip-add-locks -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS $db | gzip &gt; $MYSQL_BACKUP_DIR$db\\_$THE_DATE.sql.gz\ndone\n\n# Delete old dumps\necho &quot;------------------------------------&quot;\necho &quot;Deleting old backups...&quot;\n# List dumps to be deleted to stdout (for report)\n$FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL\n# Delete dumps older than specified number of days\n$FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL -exec rm {} +\n\n\n# Announce the completion time\necho &quot;------------------------------------&quot;\necho &quot;Backup Completed: $(date)&quot;\n</code></pre><h1 id=\"附件2（增量备份脚本）\"><a href=\"#附件2（增量备份脚本）\" class=\"headerlink\" title=\"附件2（增量备份脚本）\"></a>附件2（增量备份脚本）</h1><pre><code># cat /root/DBDailyBak.sh //内容为下\n#!/bin/bash \n# mysql_incres_bin.sh\nMYSQL_HOST=&quot;127.0.0.1&quot;\nMYSQL_USER=&quot;root&quot;\nMYSQL_PASS=&quot;123&quot;\nMYSQL_PORT=&quot;3308&quot;\n\nBakDir=/home/backup/mysql\nLogFile=/home/backup/mysql/bak.log\nBinDir=/home/mysql/master/data/db-data\n\nBinFile=$BinDir/mysql-bin.index\nMYSQLADMIN_PATH=&quot;$(which mysqladmin)&quot;\nTHE_DATE=&quot;$(date &apos;+%Y-%m-%d&apos;)&quot;\n\n\n\n\n$MYSQLADMIN_PATH -h$MYSQL_HOST -P$MYSQL_PORT -u$MYSQL_USER -p$MYSQL_PASS flush-logs\n#这个是用于产生新的mysql-bin.00000*文件\nCounter=`wc -l $BinFile |awk &apos;{print $1}&apos;`\nNextNum=0\n#这个for循环用于比对$Counter,$NextNum这两个值来确定文件是不是存在或最新的。\nfor file in  `cat $BinFile`\ndo\n        base=`basename $file`\n        #basename用于截取mysql-bin.00000x文件名，去掉./mysql-bin.000005前面的./\n        NextNum=`expr $NextNum + 1`\n        if [ $NextNum -eq $Counter ]\n        then\n                echo $base skip!  &gt;&gt; $LogFile\n        else\n                dest=$BakDir/$base\n                if(test -e $dest)\n                #test -e用于检测目标文件是否存在，存在就写exist!到$LogFile去。\n                then\n                        echo  $base exist! &gt;&gt; $LogFile\n                else\n                        cp $BinDir/$base $BakDir\n                        echo $base copying &gt;&gt; $LogFile\n                fi\n        fi\ndone\necho `date +&quot;%Y年%m月%d日 %H:%M:%S&quot;` $Next Bakup succ! &gt;&gt; $LogFile\n\n#mysqlbinlog --start-datetime=&apos;2010-01-01 00:00:02&apos; mysql-bin.*|mysql -uroot -p\n</code></pre>"},{"title":"Nginx 安装 -ubuntu","date":"2016-05-03T05:51:49.000Z","_content":"## 1、Nginx简介\nNginx是一个非常轻量级的HTTP服务器，发音为“engine X”，是一款轻量级的网页服务器、反向代理器以及电子邮件代理服务器。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。说到Web服务器，Apache服务器和IIS服务器是两大巨头；但是运行速度更快、更灵活的Nginx 正在迎头赶上。\n\n![logo](nginx/1.png)\n\n## Nginx核心特点：\n1. 跨平台：Nginx 可以在大多数 Unix like\n2.  OS编译运行，而且也有Windows的移植版本；    \n    配置异常简单：非常容易上手。配置风格跟程序开发一样，神一般的配置；\n3. 非阻塞、高并发连接：数据复制时，磁盘I/O的第一阶段是非阻塞的。官方测试能够支撑5万并发连接，在实际生产环境中跑到2～3万并发连接数。（这得益于Nginx##### 使用了最新的epoll模型）；\n4. 事件驱动：通信机制采用epoll模型，支持更大的并发连接；\n5. Master/Worker结构：一个master进程，生成一个或多个worker进程；\n\n##### 正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。\n\n##### 反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问 http://www.baidu.com/readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来,然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容 原本就是它自己的一样。\n\n##### 反向代理的最大的好处在于：负载均衡\n![logo](nginx/2.png)\n\n\n## 2、Nginx的在线安装\n ```\n sudo apt-get install nginx\n```\n![logo](nginx/3.png)\n==ubuntu安装Nginx之后的文件结构大致为：\n所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下\n启动程序文件在/usr/sbin/nginx\n日志放在了/var/log/nginx中，分别是access.log和error.log\n并已经在/etc/init.d/下创建了启动脚本nginx\n 默认的虚拟主机的目录设置在了/usr/share/nginx/html==\n![logo](nginx/4.png)\n\n其html源文件是：\n\n![logo](nginx/5.png)\n\n## 3、Nginx的在线启动/重启/停止\n```\nsudo /etc/init.d/nginx start/restart/stop\n```\n如果你的机器同时安装了Apache，那上面的访问方式就不能使用了，而且nginx都可能启动不了，这是因为它们都是用了80这个端口。我们这里将nginx的端口修改为8080，修改nginx的配置文件nginx.conf，将一下这一行listen 80;修改为 listen 8080;然后就可以访问了，http://localhost:8080/ 。\n\n![logo](nginx/6.png)\n\n## 4、Nginx的配置\nNginx的配置文件是/etc/nginx/nginx.conf，其中设置了一些必要的参数，我们发现其中这样的语句：\n include /etc/nginx/sites-enabled/*\n可以看出/etc/nginx/sites-enabled/default文件也是一个核心的配置文件，其中包含了主要的配置信息，如服务器跟目录、服务器名称、location信息和server信息，其实最主要的配置文件就是default。\n\n## 5、用webbench对Nginx进行压测\nsudo ./webbench -c 100 http://localhost\n\n![logo](nginx/7.png)\n\n\ndemo 配置\n\n\n---\nserver {\n  listen 80;\n\n  server_name ynopen.wulianedu.cc;   # 请修改为你的域名\n\n  server_tokens off;     \n\n  \n  access_log  /var/log/nginx/nginx_access.log;\n  error_log   /var/log/nginx/nginx_error.log;\n\n  location / {\n    \n    proxy_read_timeout 300000;  \n    proxy_connect_timeout 300000; \n    proxy_redirect     off;\n\n    proxy_set_header   X-Forwarded-Proto $scheme;\n    proxy_set_header   Host              $http_host;\n    proxy_set_header   X-Real-IP         $remote_addr;\n    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header   X-Frame-Options   SAMEORIGIN;\n\n    proxy_pass http://127.0.0.1/open/;\n  }\n\n  location /open/ { \n    proxy_read_timeout 300000;  \n    proxy_connect_timeout 300000; \n    proxy_redirect     off;\n\n    proxy_set_header   X-Forwarded-Proto $scheme;\n    proxy_set_header   Host              $http_host;\n    proxy_set_header   X-Real-IP         $remote_addr;\n    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header   X-Frame-Options   SAMEORIGIN;\n\n    proxy_pass http://119.23.62.150:10004/open/;\n  }\n}\n\n\nserver {\n  listen 80;\n\n  server_name ynplatform.wulianedu.cc;   # 请修改为你的域名\n\n  server_tokens off; \n  access_log  /var/log/nginx/nginx_access.log;\n  error_log   /var/log/nginx/nginx_error.log;\n\n  location / { \n    proxy_read_timeout 300000;  \n    proxy_connect_timeout 300000;  \n    proxy_redirect     off;\n\n    proxy_set_header   X-Forwarded-Proto $scheme;\n    proxy_set_header   Host              $http_host;\n    proxy_set_header   X-Real-IP         $remote_addr;\n    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header   X-Frame-Options   SAMEORIGIN;\n\n    proxy_pass http://127.0.0.1/platform/;\n  }\n\n  location /platform/ { \n    proxy_read_timeout 300000;  \n    proxy_connect_timeout 300000;  \n    proxy_redirect     off;\n\n    proxy_set_header   X-Forwarded-Proto $scheme;\n    proxy_set_header   Host              $http_host;\n    proxy_set_header   X-Real-IP         $remote_addr;\n    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header   X-Frame-Options   SAMEORIGIN;\n\n    proxy_pass http://119.23.62.150:10001/platform/;\n  }\n}\n\n报错 413 Request Entity Too Large（请求实体太大）\n由于代理，若项目导入的文件大小有限制，需要更改 nginx.conf 里面的 client_max_body_size 30M; \n\n---","source":"_posts/nginx.md","raw":"title: Nginx 安装 -ubuntu\ntags: 'server,linux,ubuntu'\ndate: 2016-05-03 13:51:49\n---\n## 1、Nginx简介\nNginx是一个非常轻量级的HTTP服务器，发音为“engine X”，是一款轻量级的网页服务器、反向代理器以及电子邮件代理服务器。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。说到Web服务器，Apache服务器和IIS服务器是两大巨头；但是运行速度更快、更灵活的Nginx 正在迎头赶上。\n\n![logo](nginx/1.png)\n\n## Nginx核心特点：\n1. 跨平台：Nginx 可以在大多数 Unix like\n2.  OS编译运行，而且也有Windows的移植版本；    \n    配置异常简单：非常容易上手。配置风格跟程序开发一样，神一般的配置；\n3. 非阻塞、高并发连接：数据复制时，磁盘I/O的第一阶段是非阻塞的。官方测试能够支撑5万并发连接，在实际生产环境中跑到2～3万并发连接数。（这得益于Nginx##### 使用了最新的epoll模型）；\n4. 事件驱动：通信机制采用epoll模型，支持更大的并发连接；\n5. Master/Worker结构：一个master进程，生成一个或多个worker进程；\n\n##### 正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。\n\n##### 反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问 http://www.baidu.com/readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来,然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容 原本就是它自己的一样。\n\n##### 反向代理的最大的好处在于：负载均衡\n![logo](nginx/2.png)\n\n\n## 2、Nginx的在线安装\n ```\n sudo apt-get install nginx\n```\n![logo](nginx/3.png)\n==ubuntu安装Nginx之后的文件结构大致为：\n所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下\n启动程序文件在/usr/sbin/nginx\n日志放在了/var/log/nginx中，分别是access.log和error.log\n并已经在/etc/init.d/下创建了启动脚本nginx\n 默认的虚拟主机的目录设置在了/usr/share/nginx/html==\n![logo](nginx/4.png)\n\n其html源文件是：\n\n![logo](nginx/5.png)\n\n## 3、Nginx的在线启动/重启/停止\n```\nsudo /etc/init.d/nginx start/restart/stop\n```\n如果你的机器同时安装了Apache，那上面的访问方式就不能使用了，而且nginx都可能启动不了，这是因为它们都是用了80这个端口。我们这里将nginx的端口修改为8080，修改nginx的配置文件nginx.conf，将一下这一行listen 80;修改为 listen 8080;然后就可以访问了，http://localhost:8080/ 。\n\n![logo](nginx/6.png)\n\n## 4、Nginx的配置\nNginx的配置文件是/etc/nginx/nginx.conf，其中设置了一些必要的参数，我们发现其中这样的语句：\n include /etc/nginx/sites-enabled/*\n可以看出/etc/nginx/sites-enabled/default文件也是一个核心的配置文件，其中包含了主要的配置信息，如服务器跟目录、服务器名称、location信息和server信息，其实最主要的配置文件就是default。\n\n## 5、用webbench对Nginx进行压测\nsudo ./webbench -c 100 http://localhost\n\n![logo](nginx/7.png)\n\n\ndemo 配置\n\n\n---\nserver {\n  listen 80;\n\n  server_name ynopen.wulianedu.cc;   # 请修改为你的域名\n\n  server_tokens off;     \n\n  \n  access_log  /var/log/nginx/nginx_access.log;\n  error_log   /var/log/nginx/nginx_error.log;\n\n  location / {\n    \n    proxy_read_timeout 300000;  \n    proxy_connect_timeout 300000; \n    proxy_redirect     off;\n\n    proxy_set_header   X-Forwarded-Proto $scheme;\n    proxy_set_header   Host              $http_host;\n    proxy_set_header   X-Real-IP         $remote_addr;\n    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header   X-Frame-Options   SAMEORIGIN;\n\n    proxy_pass http://127.0.0.1/open/;\n  }\n\n  location /open/ { \n    proxy_read_timeout 300000;  \n    proxy_connect_timeout 300000; \n    proxy_redirect     off;\n\n    proxy_set_header   X-Forwarded-Proto $scheme;\n    proxy_set_header   Host              $http_host;\n    proxy_set_header   X-Real-IP         $remote_addr;\n    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header   X-Frame-Options   SAMEORIGIN;\n\n    proxy_pass http://119.23.62.150:10004/open/;\n  }\n}\n\n\nserver {\n  listen 80;\n\n  server_name ynplatform.wulianedu.cc;   # 请修改为你的域名\n\n  server_tokens off; \n  access_log  /var/log/nginx/nginx_access.log;\n  error_log   /var/log/nginx/nginx_error.log;\n\n  location / { \n    proxy_read_timeout 300000;  \n    proxy_connect_timeout 300000;  \n    proxy_redirect     off;\n\n    proxy_set_header   X-Forwarded-Proto $scheme;\n    proxy_set_header   Host              $http_host;\n    proxy_set_header   X-Real-IP         $remote_addr;\n    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header   X-Frame-Options   SAMEORIGIN;\n\n    proxy_pass http://127.0.0.1/platform/;\n  }\n\n  location /platform/ { \n    proxy_read_timeout 300000;  \n    proxy_connect_timeout 300000;  \n    proxy_redirect     off;\n\n    proxy_set_header   X-Forwarded-Proto $scheme;\n    proxy_set_header   Host              $http_host;\n    proxy_set_header   X-Real-IP         $remote_addr;\n    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header   X-Frame-Options   SAMEORIGIN;\n\n    proxy_pass http://119.23.62.150:10001/platform/;\n  }\n}\n\n报错 413 Request Entity Too Large（请求实体太大）\n由于代理，若项目导入的文件大小有限制，需要更改 nginx.conf 里面的 client_max_body_size 30M; \n\n---","slug":"nginx","published":1,"updated":"2017-08-01T01:58:47.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58er30016awpfj026ebbo","content":"<h2 id=\"1、Nginx简介\"><a href=\"#1、Nginx简介\" class=\"headerlink\" title=\"1、Nginx简介\"></a>1、Nginx简介</h2><p>Nginx是一个非常轻量级的HTTP服务器，发音为“engine X”，是一款轻量级的网页服务器、反向代理器以及电子邮件代理服务器。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。说到Web服务器，Apache服务器和IIS服务器是两大巨头；但是运行速度更快、更灵活的Nginx 正在迎头赶上。</p>\n<p><img src=\"/2016/05/03/nginx/1.png\" alt=\"logo\"></p>\n<h2 id=\"Nginx核心特点：\"><a href=\"#Nginx核心特点：\" class=\"headerlink\" title=\"Nginx核心特点：\"></a>Nginx核心特点：</h2><ol>\n<li>跨平台：Nginx 可以在大多数 Unix like</li>\n<li>OS编译运行，而且也有Windows的移植版本；<br>配置异常简单：非常容易上手。配置风格跟程序开发一样，神一般的配置；</li>\n<li>非阻塞、高并发连接：数据复制时，磁盘I/O的第一阶段是非阻塞的。官方测试能够支撑5万并发连接，在实际生产环境中跑到2～3万并发连接数。（这得益于Nginx##### 使用了最新的epoll模型）；</li>\n<li>事件驱动：通信机制采用epoll模型，支持更大的并发连接；</li>\n<li>Master/Worker结构：一个master进程，生成一个或多个worker进程；</li>\n</ol>\n<h5 id=\"正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。\"><a href=\"#正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。\" class=\"headerlink\" title=\"正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。\"></a>正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。</h5><h5 id=\"反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问-http-www-baidu-com-readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来-然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容-原本就是它自己的一样。\"><a href=\"#反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问-http-www-baidu-com-readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来-然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容-原本就是它自己的一样。\" class=\"headerlink\" title=\"反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问 http://www.baidu.com/readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来,然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容 原本就是它自己的一样。\"></a>反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问 <a href=\"http://www.baidu.com/readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来,然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容\" target=\"_blank\" rel=\"external\">http://www.baidu.com/readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来,然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容</a> 原本就是它自己的一样。</h5><h5 id=\"反向代理的最大的好处在于：负载均衡\"><a href=\"#反向代理的最大的好处在于：负载均衡\" class=\"headerlink\" title=\"反向代理的最大的好处在于：负载均衡\"></a>反向代理的最大的好处在于：负载均衡</h5><p><img src=\"/2016/05/03/nginx/2.png\" alt=\"logo\"></p>\n<h2 id=\"2、Nginx的在线安装\"><a href=\"#2、Nginx的在线安装\" class=\"headerlink\" title=\"2、Nginx的在线安装\"></a>2、Nginx的在线安装</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install nginx</div></pre></td></tr></table></figure>\n<p><img src=\"/2016/05/03/nginx/3.png\" alt=\"logo\"><br>==ubuntu安装Nginx之后的文件结构大致为：<br>所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下<br>启动程序文件在/usr/sbin/nginx<br>日志放在了/var/log/nginx中，分别是access.log和error.log<br>并已经在/etc/init.d/下创建了启动脚本nginx<br> 默认的虚拟主机的目录设置在了/usr/share/nginx/html==<br><img src=\"/2016/05/03/nginx/4.png\" alt=\"logo\"></p>\n<p>其html源文件是：</p>\n<p><img src=\"/2016/05/03/nginx/5.png\" alt=\"logo\"></p>\n<h2 id=\"3、Nginx的在线启动-重启-停止\"><a href=\"#3、Nginx的在线启动-重启-停止\" class=\"headerlink\" title=\"3、Nginx的在线启动/重启/停止\"></a>3、Nginx的在线启动/重启/停止</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/nginx start/restart/stop</div></pre></td></tr></table></figure>\n<p>如果你的机器同时安装了Apache，那上面的访问方式就不能使用了，而且nginx都可能启动不了，这是因为它们都是用了80这个端口。我们这里将nginx的端口修改为8080，修改nginx的配置文件nginx.conf，将一下这一行listen 80;修改为 listen 8080;然后就可以访问了，<a href=\"http://localhost:8080/\" target=\"_blank\" rel=\"external\">http://localhost:8080/</a> 。</p>\n<p><img src=\"/2016/05/03/nginx/6.png\" alt=\"logo\"></p>\n<h2 id=\"4、Nginx的配置\"><a href=\"#4、Nginx的配置\" class=\"headerlink\" title=\"4、Nginx的配置\"></a>4、Nginx的配置</h2><p>Nginx的配置文件是/etc/nginx/nginx.conf，其中设置了一些必要的参数，我们发现其中这样的语句：<br> include /etc/nginx/sites-enabled/*<br>可以看出/etc/nginx/sites-enabled/default文件也是一个核心的配置文件，其中包含了主要的配置信息，如服务器跟目录、服务器名称、location信息和server信息，其实最主要的配置文件就是default。</p>\n<h2 id=\"5、用webbench对Nginx进行压测\"><a href=\"#5、用webbench对Nginx进行压测\" class=\"headerlink\" title=\"5、用webbench对Nginx进行压测\"></a>5、用webbench对Nginx进行压测</h2><p>sudo ./webbench -c 100 <a href=\"http://localhost\" target=\"_blank\" rel=\"external\">http://localhost</a></p>\n<p><img src=\"/2016/05/03/nginx/7.png\" alt=\"logo\"></p>\n<p>demo 配置</p>\n<hr>\n<p>server {<br>  listen 80;</p>\n<p>  server_name ynopen.wulianedu.cc;   # 请修改为你的域名</p>\n<p>  server_tokens off;     </p>\n<p>  access_log  /var/log/nginx/nginx_access.log;<br>  error_log   /var/log/nginx/nginx_error.log;</p>\n<p>  location / {</p>\n<pre><code>proxy_read_timeout 300000;  \nproxy_connect_timeout 300000; \nproxy_redirect     off;\n\nproxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header   X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://127.0.0.1/open/;\n</code></pre><p>  }</p>\n<p>  location /open/ {<br>    proxy_read_timeout 300000;<br>    proxy_connect_timeout 300000;<br>    proxy_redirect     off;</p>\n<pre><code>proxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header   X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://119.23.62.150:10004/open/;\n</code></pre><p>  }<br>}</p>\n<p>server {<br>  listen 80;</p>\n<p>  server_name ynplatform.wulianedu.cc;   # 请修改为你的域名</p>\n<p>  server_tokens off;<br>  access_log  /var/log/nginx/nginx_access.log;<br>  error_log   /var/log/nginx/nginx_error.log;</p>\n<p>  location / {<br>    proxy_read_timeout 300000;<br>    proxy_connect_timeout 300000;<br>    proxy_redirect     off;</p>\n<pre><code>proxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header   X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://127.0.0.1/platform/;\n</code></pre><p>  }</p>\n<p>  location /platform/ {<br>    proxy_read_timeout 300000;<br>    proxy_connect_timeout 300000;<br>    proxy_redirect     off;</p>\n<pre><code>proxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header   X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://119.23.62.150:10001/platform/;\n</code></pre><p>  }<br>}</p>\n<p>报错 413 Request Entity Too Large（请求实体太大）<br>由于代理，若项目导入的文件大小有限制，需要更改 nginx.conf 里面的 client_max_body_size 30M; </p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、Nginx简介\"><a href=\"#1、Nginx简介\" class=\"headerlink\" title=\"1、Nginx简介\"></a>1、Nginx简介</h2><p>Nginx是一个非常轻量级的HTTP服务器，发音为“engine X”，是一款轻量级的网页服务器、反向代理器以及电子邮件代理服务器。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。说到Web服务器，Apache服务器和IIS服务器是两大巨头；但是运行速度更快、更灵活的Nginx 正在迎头赶上。</p>\n<p><img src=\"/2016/05/03/nginx/1.png\" alt=\"logo\"></p>\n<h2 id=\"Nginx核心特点：\"><a href=\"#Nginx核心特点：\" class=\"headerlink\" title=\"Nginx核心特点：\"></a>Nginx核心特点：</h2><ol>\n<li>跨平台：Nginx 可以在大多数 Unix like</li>\n<li>OS编译运行，而且也有Windows的移植版本；<br>配置异常简单：非常容易上手。配置风格跟程序开发一样，神一般的配置；</li>\n<li>非阻塞、高并发连接：数据复制时，磁盘I/O的第一阶段是非阻塞的。官方测试能够支撑5万并发连接，在实际生产环境中跑到2～3万并发连接数。（这得益于Nginx##### 使用了最新的epoll模型）；</li>\n<li>事件驱动：通信机制采用epoll模型，支持更大的并发连接；</li>\n<li>Master/Worker结构：一个master进程，生成一个或多个worker进程；</li>\n</ol>\n<h5 id=\"正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。\"><a href=\"#正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。\" class=\"headerlink\" title=\"正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。\"></a>正向代理，工作原理就像一个跳板，用户访问不了某网站，但能通过一个代理服务器访问我不能访问的网站。</h5><h5 id=\"反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问-http-www-baidu-com-readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来-然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容-原本就是它自己的一样。\"><a href=\"#反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问-http-www-baidu-com-readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来-然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容-原本就是它自己的一样。\" class=\"headerlink\" title=\"反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问 http://www.baidu.com/readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来,然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容 原本就是它自己的一样。\"></a>反向代理：以代理服务器接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。例用户访问 <a href=\"http://www.baidu.com/readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来,然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容\">http://www.baidu.com/readme，但服务器上并不存在readme页面，他是偷偷从另外一台服务器上取回来,然后作为自己的内容吐给用户但用户并不知情，对于客户端而言它就像是原始服务器，就像这些内容</a> 原本就是它自己的一样。</h5><h5 id=\"反向代理的最大的好处在于：负载均衡\"><a href=\"#反向代理的最大的好处在于：负载均衡\" class=\"headerlink\" title=\"反向代理的最大的好处在于：负载均衡\"></a>反向代理的最大的好处在于：负载均衡</h5><p><img src=\"/2016/05/03/nginx/2.png\" alt=\"logo\"></p>\n<h2 id=\"2、Nginx的在线安装\"><a href=\"#2、Nginx的在线安装\" class=\"headerlink\" title=\"2、Nginx的在线安装\"></a>2、Nginx的在线安装</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install nginx</div></pre></td></tr></table></figure>\n<p><img src=\"/2016/05/03/nginx/3.png\" alt=\"logo\"><br>==ubuntu安装Nginx之后的文件结构大致为：<br>所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下<br>启动程序文件在/usr/sbin/nginx<br>日志放在了/var/log/nginx中，分别是access.log和error.log<br>并已经在/etc/init.d/下创建了启动脚本nginx<br> 默认的虚拟主机的目录设置在了/usr/share/nginx/html==<br><img src=\"/2016/05/03/nginx/4.png\" alt=\"logo\"></p>\n<p>其html源文件是：</p>\n<p><img src=\"/2016/05/03/nginx/5.png\" alt=\"logo\"></p>\n<h2 id=\"3、Nginx的在线启动-重启-停止\"><a href=\"#3、Nginx的在线启动-重启-停止\" class=\"headerlink\" title=\"3、Nginx的在线启动/重启/停止\"></a>3、Nginx的在线启动/重启/停止</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/nginx start/restart/stop</div></pre></td></tr></table></figure>\n<p>如果你的机器同时安装了Apache，那上面的访问方式就不能使用了，而且nginx都可能启动不了，这是因为它们都是用了80这个端口。我们这里将nginx的端口修改为8080，修改nginx的配置文件nginx.conf，将一下这一行listen 80;修改为 listen 8080;然后就可以访问了，<a href=\"http://localhost:8080/\">http://localhost:8080/</a> 。</p>\n<p><img src=\"/2016/05/03/nginx/6.png\" alt=\"logo\"></p>\n<h2 id=\"4、Nginx的配置\"><a href=\"#4、Nginx的配置\" class=\"headerlink\" title=\"4、Nginx的配置\"></a>4、Nginx的配置</h2><p>Nginx的配置文件是/etc/nginx/nginx.conf，其中设置了一些必要的参数，我们发现其中这样的语句：<br> include /etc/nginx/sites-enabled/*<br>可以看出/etc/nginx/sites-enabled/default文件也是一个核心的配置文件，其中包含了主要的配置信息，如服务器跟目录、服务器名称、location信息和server信息，其实最主要的配置文件就是default。</p>\n<h2 id=\"5、用webbench对Nginx进行压测\"><a href=\"#5、用webbench对Nginx进行压测\" class=\"headerlink\" title=\"5、用webbench对Nginx进行压测\"></a>5、用webbench对Nginx进行压测</h2><p>sudo ./webbench -c 100 <a href=\"http://localhost\">http://localhost</a></p>\n<p><img src=\"/2016/05/03/nginx/7.png\" alt=\"logo\"></p>\n<p>demo 配置</p>\n<hr>\n<p>server {<br>  listen 80;</p>\n<p>  server_name ynopen.wulianedu.cc;   # 请修改为你的域名</p>\n<p>  server_tokens off;     </p>\n<p>  access_log  /var/log/nginx/nginx_access.log;<br>  error_log   /var/log/nginx/nginx_error.log;</p>\n<p>  location / {</p>\n<pre><code>proxy_read_timeout 300000;  \nproxy_connect_timeout 300000; \nproxy_redirect     off;\n\nproxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header   X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://127.0.0.1/open/;\n</code></pre><p>  }</p>\n<p>  location /open/ {<br>    proxy_read_timeout 300000;<br>    proxy_connect_timeout 300000;<br>    proxy_redirect     off;</p>\n<pre><code>proxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header   X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://119.23.62.150:10004/open/;\n</code></pre><p>  }<br>}</p>\n<p>server {<br>  listen 80;</p>\n<p>  server_name ynplatform.wulianedu.cc;   # 请修改为你的域名</p>\n<p>  server_tokens off;<br>  access_log  /var/log/nginx/nginx_access.log;<br>  error_log   /var/log/nginx/nginx_error.log;</p>\n<p>  location / {<br>    proxy_read_timeout 300000;<br>    proxy_connect_timeout 300000;<br>    proxy_redirect     off;</p>\n<pre><code>proxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header   X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://127.0.0.1/platform/;\n</code></pre><p>  }</p>\n<p>  location /platform/ {<br>    proxy_read_timeout 300000;<br>    proxy_connect_timeout 300000;<br>    proxy_redirect     off;</p>\n<pre><code>proxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header   X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://119.23.62.150:10001/platform/;\n</code></pre><p>  }<br>}</p>\n<p>报错 413 Request Entity Too Large（请求实体太大）<br>由于代理，若项目导入的文件大小有限制，需要更改 nginx.conf 里面的 client_max_body_size 30M; </p>\n<hr>\n"},{"title":"node js 爬虫","date":"2017-05-05T05:51:49.000Z","_content":"\n# 需求\n\n  ```\n    数据中心，使用 active mq，需要爬取队列列表信息到项目中\n  ```\n  \n# 实现思路\n```\n使用node js爬虫实现\n```\n\n\n# 实现方式\n```\n 资源文件在：learn_java/tree/master/node_pa_chong\n \n 1 安装node js\n wget http://nodejs.org/dist/v0.8.16/node-v0.8.16.tar.gz \n \n tar zxvf node-v0.8.16.tar.gz\n  \n ./configure \n  \n make && make install\n    \n 若需要升级nodejs版本\n \n  npm install -g n\n  n stable\n  n 0.10.26 //或者可以选择升级到指定版本\n  \n  \n  启动nodejs爬虫\n  \n  forever npm -g install forever\n  \n  forever start app.js //后台启动\n  \n  node app.js //控制台启动\n  \n```\n\n ## 主要的： app.js 代码如下：\n \n ```\nvar express = require('express');\nvar app = express();\nvar request = require('request');\nvar parseString = require('xml2js').parseString;\nvar jmsAdress = 'http://jira.lexisoft.cc:82/browse/KP-629';\n// var initAdress = 'http://114.215.29.139:10090/gkopen/rpc/init?tocken=2012335444456871128213845&&id='\n\n/\napp.get('/queue/json', function(req,res){\n   //这里的headers,针对需要爬区的页面不同，相当于账号信息等验证内容，右键浏览器审查元素可以得到，并不是每个网页都能爬区\n    request.get(jmsAdress,{headers:{'Authorization':'Basic YWRtaW46YWRtaW4='}},function(error,response,body){\n      if (error) {\n      return console.error('upload failed:', error);\n    }\n\n    console.log('Upload successful!  Server responded with:', body);\n    parseString(body,function(error,data){\n      if (!error){\n      \n      //这里对爬取到的页面进行处理字符串过滤提取\n        var _data = JSON.stringify(data)\n        var __data = _data.replace(/\\[/g,'');\n        var ___data = __data.replace(/\\]/g,'');\n        var ____data = ___data.replace('{\"queues\":{\"queue\":','[');\n        var _____data = ____data.replace('}}}}','}}]');\n        var data = JSON.parse(_____data);\n       res.jsonp(data);\n     }\n    })\n    })\n});\n\n\nvar server = app.listen(11060, function () {\n console.log(\"启动成功 11060\");\n})\n    \n```","source":"_posts/node_js_pa_chong.md","raw":"###### ---\ntitle: node js 爬虫\ndate: 2017-05-05 13:51:49\ntags: node js \n---\n\n# 需求\n\n  ```\n    数据中心，使用 active mq，需要爬取队列列表信息到项目中\n  ```\n  \n# 实现思路\n```\n使用node js爬虫实现\n```\n\n\n# 实现方式\n```\n 资源文件在：learn_java/tree/master/node_pa_chong\n \n 1 安装node js\n wget http://nodejs.org/dist/v0.8.16/node-v0.8.16.tar.gz \n \n tar zxvf node-v0.8.16.tar.gz\n  \n ./configure \n  \n make && make install\n    \n 若需要升级nodejs版本\n \n  npm install -g n\n  n stable\n  n 0.10.26 //或者可以选择升级到指定版本\n  \n  \n  启动nodejs爬虫\n  \n  forever npm -g install forever\n  \n  forever start app.js //后台启动\n  \n  node app.js //控制台启动\n  \n```\n\n ## 主要的： app.js 代码如下：\n \n ```\nvar express = require('express');\nvar app = express();\nvar request = require('request');\nvar parseString = require('xml2js').parseString;\nvar jmsAdress = 'http://jira.lexisoft.cc:82/browse/KP-629';\n// var initAdress = 'http://114.215.29.139:10090/gkopen/rpc/init?tocken=2012335444456871128213845&&id='\n\n/\napp.get('/queue/json', function(req,res){\n   //这里的headers,针对需要爬区的页面不同，相当于账号信息等验证内容，右键浏览器审查元素可以得到，并不是每个网页都能爬区\n    request.get(jmsAdress,{headers:{'Authorization':'Basic YWRtaW46YWRtaW4='}},function(error,response,body){\n      if (error) {\n      return console.error('upload failed:', error);\n    }\n\n    console.log('Upload successful!  Server responded with:', body);\n    parseString(body,function(error,data){\n      if (!error){\n      \n      //这里对爬取到的页面进行处理字符串过滤提取\n        var _data = JSON.stringify(data)\n        var __data = _data.replace(/\\[/g,'');\n        var ___data = __data.replace(/\\]/g,'');\n        var ____data = ___data.replace('{\"queues\":{\"queue\":','[');\n        var _____data = ____data.replace('}}}}','}}]');\n        var data = JSON.parse(_____data);\n       res.jsonp(data);\n     }\n    })\n    })\n});\n\n\nvar server = app.listen(11060, function () {\n console.log(\"启动成功 11060\");\n})\n    \n```","slug":"node_js_pa_chong","published":1,"updated":"2017-07-19T10:40:28.614Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58er60017awpfn0k4tuil","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">数据中心，使用 active mq，需要爬取队列列表信息到项目中</div></pre></td></tr></table></figure>\n<h1 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用node js爬虫实现</div></pre></td></tr></table></figure>\n<h1 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">资源文件在：learn_java/tree/master/node_pa_chong</div><div class=\"line\"></div><div class=\"line\">1 安装node js</div><div class=\"line\">wget http://nodejs.org/dist/v0.8.16/node-v0.8.16.tar.gz </div><div class=\"line\"></div><div class=\"line\">tar zxvf node-v0.8.16.tar.gz</div><div class=\"line\"> </div><div class=\"line\">./configure </div><div class=\"line\"> </div><div class=\"line\">make &amp;&amp; make install</div><div class=\"line\">   </div><div class=\"line\">若需要升级nodejs版本</div><div class=\"line\"></div><div class=\"line\"> npm install -g n</div><div class=\"line\"> n stable</div><div class=\"line\"> n 0.10.26 //或者可以选择升级到指定版本</div><div class=\"line\"> </div><div class=\"line\"> </div><div class=\"line\"> 启动nodejs爬虫</div><div class=\"line\"> </div><div class=\"line\"> forever npm -g install forever</div><div class=\"line\"> </div><div class=\"line\"> forever start app.js //后台启动</div><div class=\"line\"> </div><div class=\"line\"> node app.js //控制台启动</div></pre></td></tr></table></figure>\n<h2 id=\"主要的：-app-js-代码如下：\"><a href=\"#主要的：-app-js-代码如下：\" class=\"headerlink\" title=\"主要的： app.js 代码如下：\"></a>主要的： app.js 代码如下：</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">var express = require(&apos;express&apos;);</div><div class=\"line\">var app = express();</div><div class=\"line\">var request = require(&apos;request&apos;);</div><div class=\"line\">var parseString = require(&apos;xml2js&apos;).parseString;</div><div class=\"line\">var jmsAdress = &apos;http://jira.lexisoft.cc:82/browse/KP-629&apos;;</div><div class=\"line\">// var initAdress = &apos;http://114.215.29.139:10090/gkopen/rpc/init?tocken=2012335444456871128213845&amp;&amp;id=&apos;</div><div class=\"line\"></div><div class=\"line\">/</div><div class=\"line\">app.get(&apos;/queue/json&apos;, function(req,res)&#123;</div><div class=\"line\">   //这里的headers,针对需要爬区的页面不同，相当于账号信息等验证内容，右键浏览器审查元素可以得到，并不是每个网页都能爬区</div><div class=\"line\">    request.get(jmsAdress,&#123;headers:&#123;&apos;Authorization&apos;:&apos;Basic YWRtaW46YWRtaW4=&apos;&#125;&#125;,function(error,response,body)&#123;</div><div class=\"line\">      if (error) &#123;</div><div class=\"line\">      return console.error(&apos;upload failed:&apos;, error);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    console.log(&apos;Upload successful!  Server responded with:&apos;, body);</div><div class=\"line\">    parseString(body,function(error,data)&#123;</div><div class=\"line\">      if (!error)&#123;</div><div class=\"line\">      </div><div class=\"line\">      //这里对爬取到的页面进行处理字符串过滤提取</div><div class=\"line\">        var _data = JSON.stringify(data)</div><div class=\"line\">        var __data = _data.replace(/\\[/g,&apos;&apos;);</div><div class=\"line\">        var ___data = __data.replace(/\\]/g,&apos;&apos;);</div><div class=\"line\">        var ____data = ___data.replace(&apos;&#123;&quot;queues&quot;:&#123;&quot;queue&quot;:&apos;,&apos;[&apos;);</div><div class=\"line\">        var _____data = ____data.replace(&apos;&#125;&#125;&#125;&#125;&apos;,&apos;&#125;&#125;]&apos;);</div><div class=\"line\">        var data = JSON.parse(_____data);</div><div class=\"line\">       res.jsonp(data);</div><div class=\"line\">     &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">var server = app.listen(11060, function () &#123;</div><div class=\"line\"> console.log(&quot;启动成功 11060&quot;);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">数据中心，使用 active mq，需要爬取队列列表信息到项目中</div></pre></td></tr></table></figure>\n<h1 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用node js爬虫实现</div></pre></td></tr></table></figure>\n<h1 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">资源文件在：learn_java/tree/master/node_pa_chong</div><div class=\"line\"></div><div class=\"line\">1 安装node js</div><div class=\"line\">wget http://nodejs.org/dist/v0.8.16/node-v0.8.16.tar.gz </div><div class=\"line\"></div><div class=\"line\">tar zxvf node-v0.8.16.tar.gz</div><div class=\"line\"> </div><div class=\"line\">./configure </div><div class=\"line\"> </div><div class=\"line\">make &amp;&amp; make install</div><div class=\"line\">   </div><div class=\"line\">若需要升级nodejs版本</div><div class=\"line\"></div><div class=\"line\"> npm install -g n</div><div class=\"line\"> n stable</div><div class=\"line\"> n 0.10.26 //或者可以选择升级到指定版本</div><div class=\"line\"> </div><div class=\"line\"> </div><div class=\"line\"> 启动nodejs爬虫</div><div class=\"line\"> </div><div class=\"line\"> forever npm -g install forever</div><div class=\"line\"> </div><div class=\"line\"> forever start app.js //后台启动</div><div class=\"line\"> </div><div class=\"line\"> node app.js //控制台启动</div></pre></td></tr></table></figure>\n<h2 id=\"主要的：-app-js-代码如下：\"><a href=\"#主要的：-app-js-代码如下：\" class=\"headerlink\" title=\"主要的： app.js 代码如下：\"></a>主要的： app.js 代码如下：</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">var express = require(&apos;express&apos;);</div><div class=\"line\">var app = express();</div><div class=\"line\">var request = require(&apos;request&apos;);</div><div class=\"line\">var parseString = require(&apos;xml2js&apos;).parseString;</div><div class=\"line\">var jmsAdress = &apos;http://jira.lexisoft.cc:82/browse/KP-629&apos;;</div><div class=\"line\">// var initAdress = &apos;http://114.215.29.139:10090/gkopen/rpc/init?tocken=2012335444456871128213845&amp;&amp;id=&apos;</div><div class=\"line\"></div><div class=\"line\">/</div><div class=\"line\">app.get(&apos;/queue/json&apos;, function(req,res)&#123;</div><div class=\"line\">   //这里的headers,针对需要爬区的页面不同，相当于账号信息等验证内容，右键浏览器审查元素可以得到，并不是每个网页都能爬区</div><div class=\"line\">    request.get(jmsAdress,&#123;headers:&#123;&apos;Authorization&apos;:&apos;Basic YWRtaW46YWRtaW4=&apos;&#125;&#125;,function(error,response,body)&#123;</div><div class=\"line\">      if (error) &#123;</div><div class=\"line\">      return console.error(&apos;upload failed:&apos;, error);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    console.log(&apos;Upload successful!  Server responded with:&apos;, body);</div><div class=\"line\">    parseString(body,function(error,data)&#123;</div><div class=\"line\">      if (!error)&#123;</div><div class=\"line\">      </div><div class=\"line\">      //这里对爬取到的页面进行处理字符串过滤提取</div><div class=\"line\">        var _data = JSON.stringify(data)</div><div class=\"line\">        var __data = _data.replace(/\\[/g,&apos;&apos;);</div><div class=\"line\">        var ___data = __data.replace(/\\]/g,&apos;&apos;);</div><div class=\"line\">        var ____data = ___data.replace(&apos;&#123;&quot;queues&quot;:&#123;&quot;queue&quot;:&apos;,&apos;[&apos;);</div><div class=\"line\">        var _____data = ____data.replace(&apos;&#125;&#125;&#125;&#125;&apos;,&apos;&#125;&#125;]&apos;);</div><div class=\"line\">        var data = JSON.parse(_____data);</div><div class=\"line\">       res.jsonp(data);</div><div class=\"line\">     &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">var server = app.listen(11060, function () &#123;</div><div class=\"line\"> console.log(&quot;启动成功 11060&quot;);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>"},{"title":"docker私有仓库使用","author":"zjy","date":"2017-07-19T10:03:04.000Z","_content":"# 云环境 docker 私有仓库操作\n```\n\ndocker私有仓库地址：118.190.66.172:5000\n\n\n\n使用步骤，在本机的该文件\ncentos：/etc/sysconfig/docker\nubuntu: /etc/default/docker\n\n1 在该文件下加上如下配置\n\n\tDOCKER_OPTS=\"--insecure-registry 118.190.66.172:5000\"\n\n2 重启本机docker服务\n\n\tservice docker restart\n\n3 确认修改是否生效\n\tps -ef|grep docker\n\n\t确保看到的 docker daemon进程 启动参数有刚刚加上的这句话即可，如下即可\t\n\t\troot      4716     1  6 09:54 ?        00:00:46 /usr/bin/docker daemon --insecure-registry 118.190.66.172:5000\n\n\n4 查看镜像列表\n\t\n\tcurl http://118.190.66.172:5000/v2/_catalog\n\t \n\t会返回一个镜像列表，下载需带上  地址/镜像名称\n\t{\"repositories\":[\"registry\",\"tomcat\"]}\n\t\t\n5 下载镜像\n\t\n\tdocker pull 118.190.66.172:5000/tomcat\n\n6 上传镜像（tag）\n\tdocker tag images 118.190.66.172:5000/yourImageName\n\t\n\tdocker push 118.190.66.172:5000/yourImageName\n```","source":"_posts/ocker私有仓库使用.md","raw":"title: docker私有仓库使用\nauthor: zjy\ndate: 2017-07-19 18:03:04\ntags:\n---\n# 云环境 docker 私有仓库操作\n```\n\ndocker私有仓库地址：118.190.66.172:5000\n\n\n\n使用步骤，在本机的该文件\ncentos：/etc/sysconfig/docker\nubuntu: /etc/default/docker\n\n1 在该文件下加上如下配置\n\n\tDOCKER_OPTS=\"--insecure-registry 118.190.66.172:5000\"\n\n2 重启本机docker服务\n\n\tservice docker restart\n\n3 确认修改是否生效\n\tps -ef|grep docker\n\n\t确保看到的 docker daemon进程 启动参数有刚刚加上的这句话即可，如下即可\t\n\t\troot      4716     1  6 09:54 ?        00:00:46 /usr/bin/docker daemon --insecure-registry 118.190.66.172:5000\n\n\n4 查看镜像列表\n\t\n\tcurl http://118.190.66.172:5000/v2/_catalog\n\t \n\t会返回一个镜像列表，下载需带上  地址/镜像名称\n\t{\"repositories\":[\"registry\",\"tomcat\"]}\n\t\t\n5 下载镜像\n\t\n\tdocker pull 118.190.66.172:5000/tomcat\n\n6 上传镜像（tag）\n\tdocker tag images 118.190.66.172:5000/yourImageName\n\t\n\tdocker push 118.190.66.172:5000/yourImageName\n```","slug":"ocker私有仓库使用","published":1,"updated":"2017-07-19T10:40:28.614Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58er90019awpfymc2gj93","content":"<h1 id=\"云环境-docker-私有仓库操作\"><a href=\"#云环境-docker-私有仓库操作\" class=\"headerlink\" title=\"云环境 docker 私有仓库操作\"></a>云环境 docker 私有仓库操作</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">docker私有仓库地址：118.190.66.172:5000</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">使用步骤，在本机的该文件</div><div class=\"line\">centos：/etc/sysconfig/docker</div><div class=\"line\">ubuntu: /etc/default/docker</div><div class=\"line\"></div><div class=\"line\">1 在该文件下加上如下配置</div><div class=\"line\"></div><div class=\"line\">\tDOCKER_OPTS=&quot;--insecure-registry 118.190.66.172:5000&quot;</div><div class=\"line\"></div><div class=\"line\">2 重启本机docker服务</div><div class=\"line\"></div><div class=\"line\">\tservice docker restart</div><div class=\"line\"></div><div class=\"line\">3 确认修改是否生效</div><div class=\"line\">\tps -ef|grep docker</div><div class=\"line\"></div><div class=\"line\">\t确保看到的 docker daemon进程 启动参数有刚刚加上的这句话即可，如下即可\t</div><div class=\"line\">\t\troot      4716     1  6 09:54 ?        00:00:46 /usr/bin/docker daemon --insecure-registry 118.190.66.172:5000</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">4 查看镜像列表</div><div class=\"line\">\t</div><div class=\"line\">\tcurl http://118.190.66.172:5000/v2/_catalog</div><div class=\"line\">\t </div><div class=\"line\">\t会返回一个镜像列表，下载需带上  地址/镜像名称</div><div class=\"line\">\t&#123;&quot;repositories&quot;:[&quot;registry&quot;,&quot;tomcat&quot;]&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">5 下载镜像</div><div class=\"line\">\t</div><div class=\"line\">\tdocker pull 118.190.66.172:5000/tomcat</div><div class=\"line\"></div><div class=\"line\">6 上传镜像（tag）</div><div class=\"line\">\tdocker tag images 118.190.66.172:5000/yourImageName</div><div class=\"line\">\t</div><div class=\"line\">\tdocker push 118.190.66.172:5000/yourImageName</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"云环境-docker-私有仓库操作\"><a href=\"#云环境-docker-私有仓库操作\" class=\"headerlink\" title=\"云环境 docker 私有仓库操作\"></a>云环境 docker 私有仓库操作</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">docker私有仓库地址：118.190.66.172:5000</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">使用步骤，在本机的该文件</div><div class=\"line\">centos：/etc/sysconfig/docker</div><div class=\"line\">ubuntu: /etc/default/docker</div><div class=\"line\"></div><div class=\"line\">1 在该文件下加上如下配置</div><div class=\"line\"></div><div class=\"line\">\tDOCKER_OPTS=&quot;--insecure-registry 118.190.66.172:5000&quot;</div><div class=\"line\"></div><div class=\"line\">2 重启本机docker服务</div><div class=\"line\"></div><div class=\"line\">\tservice docker restart</div><div class=\"line\"></div><div class=\"line\">3 确认修改是否生效</div><div class=\"line\">\tps -ef|grep docker</div><div class=\"line\"></div><div class=\"line\">\t确保看到的 docker daemon进程 启动参数有刚刚加上的这句话即可，如下即可\t</div><div class=\"line\">\t\troot      4716     1  6 09:54 ?        00:00:46 /usr/bin/docker daemon --insecure-registry 118.190.66.172:5000</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">4 查看镜像列表</div><div class=\"line\">\t</div><div class=\"line\">\tcurl http://118.190.66.172:5000/v2/_catalog</div><div class=\"line\">\t </div><div class=\"line\">\t会返回一个镜像列表，下载需带上  地址/镜像名称</div><div class=\"line\">\t&#123;&quot;repositories&quot;:[&quot;registry&quot;,&quot;tomcat&quot;]&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">5 下载镜像</div><div class=\"line\">\t</div><div class=\"line\">\tdocker pull 118.190.66.172:5000/tomcat</div><div class=\"line\"></div><div class=\"line\">6 上传镜像（tag）</div><div class=\"line\">\tdocker tag images 118.190.66.172:5000/yourImageName</div><div class=\"line\">\t</div><div class=\"line\">\tdocker push 118.190.66.172:5000/yourImageName</div></pre></td></tr></table></figure>"},{"title":"缓存策略-减少访问次数","date":"2017-05-05T05:51:49.000Z","_content":"\n# 需求\n\n  ```\n    天气接口，调用限制4000次每天，用户请求次数过多会造成次数上限，使用redis缓存过滤请求\n  ```\n  \n# 实现思路\n```\n    用户调用----查redis中是否有该城市天气数据存在，若不存在，调用接口并存到redis里面，有效期2小时，若存在2小时的天气信息，返回\n```\n\n\n# redis ubuntu安装启动\n```\n\twget http://download.redis.io/releases/redis-2.8.9.tar.gz\n\t\n\ttar xvfz redis-2.8.9.tar.gz\n\t\n\tcd redis-2.8.9\n\t\n\tsudo make\t\n\t\n\tsudo make install\n\t\n\tsudo make test\n\t\n\t\n\t启动 脚本文件\n\tnohup  comman  &  后台启动，关闭终端不关闭\n\t\n\tnohup src/redis-server redis.conf &\n\t\n\t\n\t\n\n```\n\n\n# 实现代码：\n```\n\n\n    @Autowired\n    JedisPool jedisPool;\n    \n    。。。。。\n    \npublic String getWeather(String schoolId) {\n\n        Jedis redis = jedisPool.getResource();\n\n        if (StringUtils.isEmpty(schoolId)) {\n            //未传机构id，是定时器查询，调用接口来查询并存入到数据库中\n        } else {\n            School school = this.selectSchoolById(schoolId);\n            String address = school.getXz().split(\",\")[1];\n            //传机构id，是人为发起天气调用，查询缓存中是否有该城市的天气信息\n            String res = RedisUtil.find(\"weather\" + address, redis);\n\n            if (StringUtils.isNotEmpty(res)) {\n                //缓存中有该城市天气数据，不再调用接口\n                return res;\n            } else {\n                //未查询到天气数据，调用接口查询\n                Object queryRes = getApiWeather(address);\n\n                if (GukeerStringUtil.isNullOrEmpty(queryRes))\n                    return null;\n\n                String key = \"weather\" + address;\n                try {\n                    RedisUtil.add(key, queryRes.toString(), redis);\n                    RedisUtil.setExpire(key, 60*120, redis);\n                    RedisUtil.returnResource(redis);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n\n                return queryRes.toString();\n            }\n        }\n        return null;\n    }\n    \n    \n    public static Object getApiWeather(String city) {\n        Properties pro = PropertiesUtil.getProperties(\"db.properties\");\n        String key = pro.getProperty(\"weather.key\");\n        String url = pro.getProperty(\"weather.url\");\n\n        Map param = new HashMap();\n        param.put(\"city\", city);\n        param.put(\"key\", key);\n\n        String res = null;\n        try {\n            res = HttpRequestUtil.post(url, null, null, param);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        if (StringUtils.isEmpty(res))\n            return null;\n\n        JSONObject object = JSONObject.fromObject(res);\n        JSONArray array = JSONArray.fromObject(object.get(\"HeWeather5\").toString());\n\n        if (array.length() > 0)\n            return array.get(0);\n        else\n            return null;\n    }\n    \n    \n    redis配置：\n    \n    \n    \n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd\">\n\n    <!-- 引入jedis配置文件 -->\n\n    <!-- redis连接池的配置 -->\n    <bean id=\"jedisPoolConfig\" class=\"redis.clients.jedis.JedisPoolConfig\">\n        <property name=\"maxTotal\" value=\"${redis.maxActive}\"/>\n        <property name=\"maxIdle\" value=\"${redis.maxIdle}\"/>\n        <property name=\"minIdle\" value=\"${redis.minIdle}\"/>\n        <property name=\"testOnBorrow\" value=\"true\"/>\n        <property name=\"testOnReturn\" value=\"true\"/>\n    </bean>\n\n    <!-- redis的连接池pool，不是必选项：timeout/password  -->\n    <bean id = \"jedisPool\" class=\"redis.clients.jedis.JedisPool\">\n        <constructor-arg index=\"0\" ref=\"jedisPoolConfig\"/>\n        <constructor-arg index=\"1\" value=\"${redis.host}\"/>\n        <constructor-arg index=\"2\" value=\"${redis.port}\" type=\"int\"/>\n        <constructor-arg index=\"3\" value=\"${redis.timeout}\" type=\"int\"/>\n        <constructor-arg index=\"4\" value=\"${redis.password}\"/>\n    </bean>\n\n</beans>\n    \n```","source":"_posts/redis_weather.md","raw":"title: 缓存策略-减少访问次数\ntags: java  redis\ndate: 2017-05-05 13:51:49\n---\n\n# 需求\n\n  ```\n    天气接口，调用限制4000次每天，用户请求次数过多会造成次数上限，使用redis缓存过滤请求\n  ```\n  \n# 实现思路\n```\n    用户调用----查redis中是否有该城市天气数据存在，若不存在，调用接口并存到redis里面，有效期2小时，若存在2小时的天气信息，返回\n```\n\n\n# redis ubuntu安装启动\n```\n\twget http://download.redis.io/releases/redis-2.8.9.tar.gz\n\t\n\ttar xvfz redis-2.8.9.tar.gz\n\t\n\tcd redis-2.8.9\n\t\n\tsudo make\t\n\t\n\tsudo make install\n\t\n\tsudo make test\n\t\n\t\n\t启动 脚本文件\n\tnohup  comman  &  后台启动，关闭终端不关闭\n\t\n\tnohup src/redis-server redis.conf &\n\t\n\t\n\t\n\n```\n\n\n# 实现代码：\n```\n\n\n    @Autowired\n    JedisPool jedisPool;\n    \n    。。。。。\n    \npublic String getWeather(String schoolId) {\n\n        Jedis redis = jedisPool.getResource();\n\n        if (StringUtils.isEmpty(schoolId)) {\n            //未传机构id，是定时器查询，调用接口来查询并存入到数据库中\n        } else {\n            School school = this.selectSchoolById(schoolId);\n            String address = school.getXz().split(\",\")[1];\n            //传机构id，是人为发起天气调用，查询缓存中是否有该城市的天气信息\n            String res = RedisUtil.find(\"weather\" + address, redis);\n\n            if (StringUtils.isNotEmpty(res)) {\n                //缓存中有该城市天气数据，不再调用接口\n                return res;\n            } else {\n                //未查询到天气数据，调用接口查询\n                Object queryRes = getApiWeather(address);\n\n                if (GukeerStringUtil.isNullOrEmpty(queryRes))\n                    return null;\n\n                String key = \"weather\" + address;\n                try {\n                    RedisUtil.add(key, queryRes.toString(), redis);\n                    RedisUtil.setExpire(key, 60*120, redis);\n                    RedisUtil.returnResource(redis);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n\n                return queryRes.toString();\n            }\n        }\n        return null;\n    }\n    \n    \n    public static Object getApiWeather(String city) {\n        Properties pro = PropertiesUtil.getProperties(\"db.properties\");\n        String key = pro.getProperty(\"weather.key\");\n        String url = pro.getProperty(\"weather.url\");\n\n        Map param = new HashMap();\n        param.put(\"city\", city);\n        param.put(\"key\", key);\n\n        String res = null;\n        try {\n            res = HttpRequestUtil.post(url, null, null, param);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        if (StringUtils.isEmpty(res))\n            return null;\n\n        JSONObject object = JSONObject.fromObject(res);\n        JSONArray array = JSONArray.fromObject(object.get(\"HeWeather5\").toString());\n\n        if (array.length() > 0)\n            return array.get(0);\n        else\n            return null;\n    }\n    \n    \n    redis配置：\n    \n    \n    \n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd\">\n\n    <!-- 引入jedis配置文件 -->\n\n    <!-- redis连接池的配置 -->\n    <bean id=\"jedisPoolConfig\" class=\"redis.clients.jedis.JedisPoolConfig\">\n        <property name=\"maxTotal\" value=\"${redis.maxActive}\"/>\n        <property name=\"maxIdle\" value=\"${redis.maxIdle}\"/>\n        <property name=\"minIdle\" value=\"${redis.minIdle}\"/>\n        <property name=\"testOnBorrow\" value=\"true\"/>\n        <property name=\"testOnReturn\" value=\"true\"/>\n    </bean>\n\n    <!-- redis的连接池pool，不是必选项：timeout/password  -->\n    <bean id = \"jedisPool\" class=\"redis.clients.jedis.JedisPool\">\n        <constructor-arg index=\"0\" ref=\"jedisPoolConfig\"/>\n        <constructor-arg index=\"1\" value=\"${redis.host}\"/>\n        <constructor-arg index=\"2\" value=\"${redis.port}\" type=\"int\"/>\n        <constructor-arg index=\"3\" value=\"${redis.timeout}\" type=\"int\"/>\n        <constructor-arg index=\"4\" value=\"${redis.password}\"/>\n    </bean>\n\n</beans>\n    \n```","slug":"redis_weather","published":1,"updated":"2018-03-02T08:54:26.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58erb001bawpfsyq2pa96","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">天气接口，调用限制4000次每天，用户请求次数过多会造成次数上限，使用redis缓存过滤请求</div></pre></td></tr></table></figure>\n<h1 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">用户调用----查redis中是否有该城市天气数据存在，若不存在，调用接口并存到redis里面，有效期2小时，若存在2小时的天气信息，返回</div></pre></td></tr></table></figure>\n<h1 id=\"redis-ubuntu安装启动\"><a href=\"#redis-ubuntu安装启动\" class=\"headerlink\" title=\"redis ubuntu安装启动\"></a>redis ubuntu安装启动</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://download.redis.io/releases/redis-2.8.9.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar xvfz redis-2.8.9.tar.gz</div><div class=\"line\"></div><div class=\"line\">cd redis-2.8.9</div><div class=\"line\"></div><div class=\"line\">sudo make\t</div><div class=\"line\"></div><div class=\"line\">sudo make install</div><div class=\"line\"></div><div class=\"line\">sudo make test</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">启动 脚本文件</div><div class=\"line\">nohup  comman  &amp;  后台启动，关闭终端不关闭</div><div class=\"line\"></div><div class=\"line\">nohup src/redis-server redis.conf &amp;</div></pre></td></tr></table></figure>\n<h1 id=\"实现代码：\"><a href=\"#实现代码：\" class=\"headerlink\" title=\"实现代码：\"></a>实现代码：</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    JedisPool jedisPool;</div><div class=\"line\">    </div><div class=\"line\">    。。。。。</div><div class=\"line\">    </div><div class=\"line\">public String getWeather(String schoolId) &#123;</div><div class=\"line\"></div><div class=\"line\">        Jedis redis = jedisPool.getResource();</div><div class=\"line\"></div><div class=\"line\">        if (StringUtils.isEmpty(schoolId)) &#123;</div><div class=\"line\">            //未传机构id，是定时器查询，调用接口来查询并存入到数据库中</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            School school = this.selectSchoolById(schoolId);</div><div class=\"line\">            String address = school.getXz().split(&quot;,&quot;)[1];</div><div class=\"line\">            //传机构id，是人为发起天气调用，查询缓存中是否有该城市的天气信息</div><div class=\"line\">            String res = RedisUtil.find(&quot;weather&quot; + address, redis);</div><div class=\"line\"></div><div class=\"line\">            if (StringUtils.isNotEmpty(res)) &#123;</div><div class=\"line\">                //缓存中有该城市天气数据，不再调用接口</div><div class=\"line\">                return res;</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                //未查询到天气数据，调用接口查询</div><div class=\"line\">                Object queryRes = getApiWeather(address);</div><div class=\"line\"></div><div class=\"line\">                if (GukeerStringUtil.isNullOrEmpty(queryRes))</div><div class=\"line\">                    return null;</div><div class=\"line\"></div><div class=\"line\">                String key = &quot;weather&quot; + address;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    RedisUtil.add(key, queryRes.toString(), redis);</div><div class=\"line\">                    RedisUtil.setExpire(key, 60*120, redis);</div><div class=\"line\">                    RedisUtil.returnResource(redis);</div><div class=\"line\">                &#125; catch (Exception e) &#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                return queryRes.toString();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return null;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    public static Object getApiWeather(String city) &#123;</div><div class=\"line\">        Properties pro = PropertiesUtil.getProperties(&quot;db.properties&quot;);</div><div class=\"line\">        String key = pro.getProperty(&quot;weather.key&quot;);</div><div class=\"line\">        String url = pro.getProperty(&quot;weather.url&quot;);</div><div class=\"line\"></div><div class=\"line\">        Map param = new HashMap();</div><div class=\"line\">        param.put(&quot;city&quot;, city);</div><div class=\"line\">        param.put(&quot;key&quot;, key);</div><div class=\"line\"></div><div class=\"line\">        String res = null;</div><div class=\"line\">        try &#123;</div><div class=\"line\">            res = HttpRequestUtil.post(url, null, null, param);</div><div class=\"line\">        &#125; catch (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        if (StringUtils.isEmpty(res))</div><div class=\"line\">            return null;</div><div class=\"line\"></div><div class=\"line\">        JSONObject object = JSONObject.fromObject(res);</div><div class=\"line\">        JSONArray array = JSONArray.fromObject(object.get(&quot;HeWeather5&quot;).toString());</div><div class=\"line\"></div><div class=\"line\">        if (array.length() &gt; 0)</div><div class=\"line\">            return array.get(0);</div><div class=\"line\">        else</div><div class=\"line\">            return null;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    redis配置：</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 引入jedis配置文件 --&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- redis连接池的配置 --&gt;</div><div class=\"line\">    &lt;bean id=&quot;jedisPoolConfig&quot; class=&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;</div><div class=\"line\">        &lt;property name=&quot;maxTotal&quot; value=&quot;$&#123;redis.maxActive&#125;&quot;/&gt;</div><div class=\"line\">        &lt;property name=&quot;maxIdle&quot; value=&quot;$&#123;redis.maxIdle&#125;&quot;/&gt;</div><div class=\"line\">        &lt;property name=&quot;minIdle&quot; value=&quot;$&#123;redis.minIdle&#125;&quot;/&gt;</div><div class=\"line\">        &lt;property name=&quot;testOnBorrow&quot; value=&quot;true&quot;/&gt;</div><div class=\"line\">        &lt;property name=&quot;testOnReturn&quot; value=&quot;true&quot;/&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- redis的连接池pool，不是必选项：timeout/password  --&gt;</div><div class=\"line\">    &lt;bean id = &quot;jedisPool&quot; class=&quot;redis.clients.jedis.JedisPool&quot;&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;0&quot; ref=&quot;jedisPoolConfig&quot;/&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;1&quot; value=&quot;$&#123;redis.host&#125;&quot;/&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;2&quot; value=&quot;$&#123;redis.port&#125;&quot; type=&quot;int&quot;/&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;3&quot; value=&quot;$&#123;redis.timeout&#125;&quot; type=&quot;int&quot;/&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;4&quot; value=&quot;$&#123;redis.password&#125;&quot;/&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">天气接口，调用限制4000次每天，用户请求次数过多会造成次数上限，使用redis缓存过滤请求</div></pre></td></tr></table></figure>\n<h1 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">用户调用----查redis中是否有该城市天气数据存在，若不存在，调用接口并存到redis里面，有效期2小时，若存在2小时的天气信息，返回</div></pre></td></tr></table></figure>\n<h1 id=\"redis-ubuntu安装启动\"><a href=\"#redis-ubuntu安装启动\" class=\"headerlink\" title=\"redis ubuntu安装启动\"></a>redis ubuntu安装启动</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://download.redis.io/releases/redis-2.8.9.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar xvfz redis-2.8.9.tar.gz</div><div class=\"line\"></div><div class=\"line\">cd redis-2.8.9</div><div class=\"line\"></div><div class=\"line\">sudo make\t</div><div class=\"line\"></div><div class=\"line\">sudo make install</div><div class=\"line\"></div><div class=\"line\">sudo make test</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">启动 脚本文件</div><div class=\"line\">nohup  comman  &amp;  后台启动，关闭终端不关闭</div><div class=\"line\"></div><div class=\"line\">nohup src/redis-server redis.conf &amp;</div></pre></td></tr></table></figure>\n<h1 id=\"实现代码：\"><a href=\"#实现代码：\" class=\"headerlink\" title=\"实现代码：\"></a>实现代码：</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    @Autowired</div><div class=\"line\">    JedisPool jedisPool;</div><div class=\"line\">    </div><div class=\"line\">    。。。。。</div><div class=\"line\">    </div><div class=\"line\">public String getWeather(String schoolId) &#123;</div><div class=\"line\"></div><div class=\"line\">        Jedis redis = jedisPool.getResource();</div><div class=\"line\"></div><div class=\"line\">        if (StringUtils.isEmpty(schoolId)) &#123;</div><div class=\"line\">            //未传机构id，是定时器查询，调用接口来查询并存入到数据库中</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            School school = this.selectSchoolById(schoolId);</div><div class=\"line\">            String address = school.getXz().split(&quot;,&quot;)[1];</div><div class=\"line\">            //传机构id，是人为发起天气调用，查询缓存中是否有该城市的天气信息</div><div class=\"line\">            String res = RedisUtil.find(&quot;weather&quot; + address, redis);</div><div class=\"line\"></div><div class=\"line\">            if (StringUtils.isNotEmpty(res)) &#123;</div><div class=\"line\">                //缓存中有该城市天气数据，不再调用接口</div><div class=\"line\">                return res;</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                //未查询到天气数据，调用接口查询</div><div class=\"line\">                Object queryRes = getApiWeather(address);</div><div class=\"line\"></div><div class=\"line\">                if (GukeerStringUtil.isNullOrEmpty(queryRes))</div><div class=\"line\">                    return null;</div><div class=\"line\"></div><div class=\"line\">                String key = &quot;weather&quot; + address;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    RedisUtil.add(key, queryRes.toString(), redis);</div><div class=\"line\">                    RedisUtil.setExpire(key, 60*120, redis);</div><div class=\"line\">                    RedisUtil.returnResource(redis);</div><div class=\"line\">                &#125; catch (Exception e) &#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                return queryRes.toString();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return null;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    public static Object getApiWeather(String city) &#123;</div><div class=\"line\">        Properties pro = PropertiesUtil.getProperties(&quot;db.properties&quot;);</div><div class=\"line\">        String key = pro.getProperty(&quot;weather.key&quot;);</div><div class=\"line\">        String url = pro.getProperty(&quot;weather.url&quot;);</div><div class=\"line\"></div><div class=\"line\">        Map param = new HashMap();</div><div class=\"line\">        param.put(&quot;city&quot;, city);</div><div class=\"line\">        param.put(&quot;key&quot;, key);</div><div class=\"line\"></div><div class=\"line\">        String res = null;</div><div class=\"line\">        try &#123;</div><div class=\"line\">            res = HttpRequestUtil.post(url, null, null, param);</div><div class=\"line\">        &#125; catch (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        if (StringUtils.isEmpty(res))</div><div class=\"line\">            return null;</div><div class=\"line\"></div><div class=\"line\">        JSONObject object = JSONObject.fromObject(res);</div><div class=\"line\">        JSONArray array = JSONArray.fromObject(object.get(&quot;HeWeather5&quot;).toString());</div><div class=\"line\"></div><div class=\"line\">        if (array.length() &gt; 0)</div><div class=\"line\">            return array.get(0);</div><div class=\"line\">        else</div><div class=\"line\">            return null;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    redis配置：</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 引入jedis配置文件 --&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- redis连接池的配置 --&gt;</div><div class=\"line\">    &lt;bean id=&quot;jedisPoolConfig&quot; class=&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;</div><div class=\"line\">        &lt;property name=&quot;maxTotal&quot; value=&quot;$&#123;redis.maxActive&#125;&quot;/&gt;</div><div class=\"line\">        &lt;property name=&quot;maxIdle&quot; value=&quot;$&#123;redis.maxIdle&#125;&quot;/&gt;</div><div class=\"line\">        &lt;property name=&quot;minIdle&quot; value=&quot;$&#123;redis.minIdle&#125;&quot;/&gt;</div><div class=\"line\">        &lt;property name=&quot;testOnBorrow&quot; value=&quot;true&quot;/&gt;</div><div class=\"line\">        &lt;property name=&quot;testOnReturn&quot; value=&quot;true&quot;/&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- redis的连接池pool，不是必选项：timeout/password  --&gt;</div><div class=\"line\">    &lt;bean id = &quot;jedisPool&quot; class=&quot;redis.clients.jedis.JedisPool&quot;&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;0&quot; ref=&quot;jedisPoolConfig&quot;/&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;1&quot; value=&quot;$&#123;redis.host&#125;&quot;/&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;2&quot; value=&quot;$&#123;redis.port&#125;&quot; type=&quot;int&quot;/&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;3&quot; value=&quot;$&#123;redis.timeout&#125;&quot; type=&quot;int&quot;/&gt;</div><div class=\"line\">        &lt;constructor-arg index=&quot;4&quot; value=&quot;$&#123;redis.password&#125;&quot;/&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>"},{"title":"状态模式 多个if else","date":"2016-05-03T05:51:49.000Z","_content":"\n# 1 需求\n\n![](state_design_pattern/1.png)\n\n\n```\n实现客户  预定/入住/退订/退房  房间的功能\n```\n\n## 1.1 不太华丽的实现  if-else\n\n常量定义\n\n```\npublic static final int FREEMTIME_STATE = 0;  //空闲状态  \npublic static final int BOOKED_STATE = 1;     //已预订状态  \npublic static final int CHECKIN_STATE = 2;    //入住状态  \nint state = FREEMTIME_STATE;     //初始状态  \n```\n\n客户动作类（预定，入住，退订，退房）\n\n```\n/** \n     * @desc 预订 \n     * @return void \n     */  \n    public void bookRoom(){  \n        if(state == FREEMTIME_STATE){   //空闲可预订  \n            if(count > 0){  \n                System.out.println(\"空闲房间，完成预订...\");  \n                state =  BOOKED_STATE;     //改变状态：已预订  \n                count --;  \n                //房间预订完了,提示客户没有房源了  \n                if(count == 0){  \n                    System.out.println(\"不好意思,房间已经预订完,欢迎您下次光临...\");  \n                }  \n            }  \n            else{  \n                System.out.println(\"不好意思,已经没有房间了....\");  \n            }  \n        }  \n        else if(state == BOOKED_STATE){  \n            System.out.println(\"该房间已经被预订了...\");  \n        }  \n        else if(state == CHECKIN_STATE){  \n            System.out.println(\"该房间已经有人入住了...\");  \n        }  \n    }  \n      \n    /** \n     * @desc 入住 \n     * @return void \n     */  \n    public void checkInRoom(){  \n        if(state == FREEMTIME_STATE){  \n            if(count > 0){  \n                System.out.println(\"空闲房间，入住...\");  \n                state =  CHECKIN_STATE;     //改变状态：已预订  \n                count --;  \n                //房间预订完了,提示客户没有房源了  \n                if(count == 0){  \n                    System.out.println(\"不好意思,房间已经预订完,欢迎您下次光临...\");  \n                }  \n            }  \n            else{  \n                System.out.println(\"不好意思,已经没有房间了....\");  \n            }  \n              \n        }  \n        else if(state == BOOKED_STATE){  \n            if(\"如果该房间是您预订的\"){  \n                System.out.println(\"入住....\");  \n                state = CHECKIN_STATE;  \n            }  \n            else{  \n                System.out.println(\"您没有预订该房间,请先预订...\");  \n            }  \n        }  \n        else if(state == CHECKIN_STATE){  \n            System.out.println(\"该房间已经入住了...\");  \n        }  \n    }  \n      \n    /** \n     * @desc 退订 \n     * @return void \n     */  \n    public void unsubscribeRoom(){  \n        if(state == FREEMTIME_STATE){  \n        }  \n        else if(state == CHECKIN_STATE){  \n              \n        }  \n        else if(state == BOOKED_STATE){  \n            System.out.println(\"已退订房间...\");  \n            state = FREEMTIME_STATE;  \n            count ++;  \n        }  \n    }  \n      \n    /** \n     * @desc 退房 \n     * @return void \n     */  \n    public void checkOutRoom(){  \n        if(state == FREEMTIME_STATE){  \n              \n        }  \n        else if(state == BOOKED_STATE){  \n              \n        }  \n        else if(state == CHECKIN_STATE){  \n            System.out.println(\"已退房..\");  \n            state = FREEMTIME_STATE;  \n            count++;  \n        }  \n    }  \n```\n\n当添加状态的时候，例如：损坏房间  则需要每个操作都要判断是否损坏房间\n\n\n# 2 使用状态模式 华丽实现 \n\n## 2.1 模式定义 \n1. 在很多情况下，一个对象的行为取决于它的一个或多个变化的属性，这些属性我们称之为状态，这个对象称之为状态对象。对于状态对象而已，它的行为依赖于它的状态，比如你要预订房间，那么只有当该房间为空闲时你才能预订，你想入住该房间也只有当你预订了该房间或者该房间为空闲时。对于这样的一个对象，当它在于外部事件产生互动的时候，其内部状态就会发生改变，从而使得他的行为也随之发生改变。\n2. 那么何为状态模式呢？所谓状态模式就是允许对象在内部状态发生改变时改变它的行为，对象看起来好像修改了它的类。\n \n\n![](state_design_pattern/2.png)\n\n\t 1.  状态模式包含如下角色： \n     2.  Context: 环境类。可以包括一些内部状态。 \n     3.  State: 抽象状态类。State定义了一个所有具体状态的共同接口，任何状态都实现这个相同的接口，这样一来，状态之间就可以互相转换了。 \n     4.  ConcreteState:具体状态类。具体状态类，用于处理来自Context的请求，每一个ConcreteState都提供了它对自己请求的实现，所以，当Context改变状态时行为也会跟着改变。\n\n# 3 代码实现\n\n\n![](state_design_pattern/3.png)\n\n## 3.1 状态接口代码：State.java\n```\npublic interface State {  \n    /**  \n     * @desc 预订房间  \n     * @return void  \n     */  \n    public void bookRoom();  \n      \n    /**  \n     * @desc 退订房间  \n     * @return void  \n     */  \n    public void unsubscribeRoom();  \n      \n    /**  \n     * @desc 入住  \n     * @return void  \n     */  \n    public void checkInRoom();  \n      \n    /**  \n     * @desc 退房  \n     * @return void  \n     */  \n    public void checkOutRoom();  \n      \n}  \n       然后是房间类  \npublic class Room {  \n    /*  \n     * 房间的三个状态  \n     */  \n    State freeTimeState;    //空闲状态  \n    State checkInState;     //入住状态  \n    State bookedState;      //预订状态  \n  \n    State state ;    \n      \n    public Room(){  \n        freeTimeState = new FreeTimeState(this);  \n        checkInState = new CheckInState(this);  \n        bookedState = new BookedState(this);  \n          \n        state = freeTimeState ;  //初始状态为空闲  \n    }  \n      \n    /**  \n     * @desc 预订房间  \n     * @return void  \n     */  \n    public void bookRoom(){  \n        state.bookRoom();  \n    }  \n      \n    /**  \n     * @desc 退订房间  \n     * @return void  \n     */  \n    public void unsubscribeRoom(){  \n        state.unsubscribeRoom();  \n    }  \n      \n    /**  \n     * @desc 入住  \n     * @return void  \n     */  \n    public void checkInRoom(){  \n        state.checkInRoom();  \n    }  \n      \n    /**  \n     * @desc 退房  \n     * @return void  \n     */  \n    public void checkOutRoom(){  \n        state.checkOutRoom();  \n    }  \n  \n    public String toString(){  \n        return \"该房间的状态是:\"+getState().getClass().getName();  \n    }  \n      \n    /*  \n     * getter和setter方法  \n     */  \n      \n    public State getFreeTimeState() {  \n        return freeTimeState;  \n    }  \n  \n    public void setFreeTimeState(State freeTimeState) {  \n        this.freeTimeState = freeTimeState;  \n    }  \n  \n    public State getCheckInState() {  \n        return checkInState;  \n    }  \n  \n    public void setCheckInState(State checkInState) {  \n        this.checkInState = checkInState;  \n    }  \n  \n    public State getBookedState() {  \n        return bookedState;  \n    }  \n  \n    public void setBookedState(State bookedState) {  \n        this.bookedState = bookedState;  \n    }  \n  \n    public State getState() {  \n        return state;  \n    }  \n  \n    public void setState(State state) {  \n        this.state = state;  \n    }  \n  \n}  \n```\n\n## 3.2 状态接口实现类：空闲，预定，入住\n```\n\n/**  \n * @project: design_state   \n * @date 2013-8-24  \n * @Description: 空闲状态只能预订和入住 \n */  \npublic class FreeTimeState implements State {  \n      \n    Room hotelManagement;  \n      \n    public FreeTimeState(Room hotelManagement){  \n        this.hotelManagement = hotelManagement;  \n    }  \n      \n      \n    public void bookRoom() {  \n        System.out.println(\"您已经成功预订了...\");  \n        hotelManagement.setState(hotelManagement.getBookedState());   //状态变成已经预订  \n    }  \n  \n    public void checkInRoom() {  \n        System.out.println(\"您已经成功入住了...\");  \n        hotelManagement.setState(hotelManagement.getCheckInState());   //状态变成已经入住  \n    }  \n  \n    public void checkOutRoom() {  \n        //不需要做操作  \n    }  \n  \n    public void unsubscribeRoom() {  \n        //不需要做操作  \n    }  \n  \n}  \n\n\n\n/**  \n * @project: design_state   \n * @date 2013-8-24  \n * @Description: 入住状态房间只能退房 \n */  \n\npublic class BookedState implements State {  \n    Room hotelManagement;  \n      \n    public BookedState(Room hotelManagement) {  \n        this.hotelManagement = hotelManagement;  \n    }  \n  \n    public void bookRoom() {  \n        System.out.println(\"该房间已近给预定了...\");  \n    }  \n  \n    public void checkInRoom() {  \n        System.out.println(\"入住成功...\");   \n        hotelManagement.setState(hotelManagement.getCheckInState());         //状态变成入住  \n    }  \n  \n    public void checkOutRoom() {  \n        //不需要做操作  \n    }  \n  \n    public void unsubscribeRoom() {  \n        System.out.println(\"退订成功,欢迎下次光临...\");  \n        hotelManagement.setState(hotelManagement.getFreeTimeState());   //变成空闲状态  \n    }  \n  \n}  \n\n\n\n/**  \n * @project: design_state   \n * @date 2013-8-24  \n * @Description: 入住可以退房 \n */  \n\n\npublic class CheckInState implements State {  \n    Room hotelManagement;  \n    public CheckInState(Room hotelManagement) {  \n        this.hotelManagement = hotelManagement;  \n    }  \n  \n    public void bookRoom() {  \n        System.out.println(\"该房间已经入住了...\");  \n    }  \n  \n    public void checkInRoom() {  \n        System.out.println(\"该房间已经入住了...\");  \n    }  \n  \n    public void checkOutRoom() {  \n        System.out.println(\"退房成功....\");  \n        hotelManagement.setState(hotelManagement.getFreeTimeState());     //状态变成空闲  \n    }  \n  \n    public void unsubscribeRoom() {  \n        //不需要做操作  \n    }  \n  \n}  \n```\n\n## 3.3 测试类\n```\npublic class Test {  \n    public static void main(String[] args) {  \n        //有3间房  \n        Room[] rooms = new Room[2];  \n        //初始化  \n        for(int i = 0 ; i < rooms.length ; i++){  \n            rooms[i] = new Room();  \n        }  \n        //第一间房  \n        rooms[0].bookRoom();    //预订  \n        rooms[0].checkInRoom();   //入住  \n        rooms[0].bookRoom();    //预订  \n        System.out.println(rooms[0]);  \n        System.out.println(\"---------------------------\");  \n          \n        //第二间房  \n        rooms[1].checkInRoom();  \n        rooms[1].bookRoom();  \n        rooms[1].checkOutRoom();  \n        rooms[1].bookRoom();  \n        System.out.println(rooms[1]);  \n    }  \n  \n}  \n```\n\n![](state_design_pattern/4.png)\n# 4总结\n\n## 1. 优点\n 1. 封装了转换规则。 \n 2. 枚举可能的状态，在枚举状态之前需要确定状态种类。 \n 3. 将所有与某个状态有关的行为放到一个类中，并且可以方便地增加新的状态，只需要改变对象状态即可改变对象的行为。 \n 4. 允许状态转换逻辑与状态对象合成一体，而不是某一个巨大的条件语句块。 \n 5. 可以让多个环境对象共享一个状态对象，从而减少系统中对象的个数。\n  \n## 2. 缺点\n1. 状态模式的使用必然会增加系统类和对象的个数。 \n2. 状态模式的结构与实现都较为复杂，如果使用不当将导致程序结构和代码的混乱。   \n3. 状态模式对“开闭原则”的支持并不太好，对于可以切换状态的状态模式，增加新的状态类需要修改那些负责状态转换的源代码，否则无法切换到新增状态；而且修改某个状态类的行为也需修改对应类的源代码。\n\n# 五、模式适用场景\n1. 对象的行为依赖于它的状态（属性）并且可以根据它的状态改变而改变它的相关行为。 \n2. 代码中包含大量与对象状态有关的条件语句\n# 六、模式总结\n 1. 状态模式允许一个对象基于内部状态而拥有不同的行为。\n 2. Context会将行为委托给当前状态对象。\n 3. 状态模式对“开闭原则”支持不是很好。","source":"_posts/state_design_pattern.md","raw":"---\ntitle: 状态模式 多个if else\ndate: 2016-05-03 13:51:49\ntags: java\n---\n\n# 1 需求\n\n![](state_design_pattern/1.png)\n\n\n```\n实现客户  预定/入住/退订/退房  房间的功能\n```\n\n## 1.1 不太华丽的实现  if-else\n\n常量定义\n\n```\npublic static final int FREEMTIME_STATE = 0;  //空闲状态  \npublic static final int BOOKED_STATE = 1;     //已预订状态  \npublic static final int CHECKIN_STATE = 2;    //入住状态  \nint state = FREEMTIME_STATE;     //初始状态  \n```\n\n客户动作类（预定，入住，退订，退房）\n\n```\n/** \n     * @desc 预订 \n     * @return void \n     */  \n    public void bookRoom(){  \n        if(state == FREEMTIME_STATE){   //空闲可预订  \n            if(count > 0){  \n                System.out.println(\"空闲房间，完成预订...\");  \n                state =  BOOKED_STATE;     //改变状态：已预订  \n                count --;  \n                //房间预订完了,提示客户没有房源了  \n                if(count == 0){  \n                    System.out.println(\"不好意思,房间已经预订完,欢迎您下次光临...\");  \n                }  \n            }  \n            else{  \n                System.out.println(\"不好意思,已经没有房间了....\");  \n            }  \n        }  \n        else if(state == BOOKED_STATE){  \n            System.out.println(\"该房间已经被预订了...\");  \n        }  \n        else if(state == CHECKIN_STATE){  \n            System.out.println(\"该房间已经有人入住了...\");  \n        }  \n    }  \n      \n    /** \n     * @desc 入住 \n     * @return void \n     */  \n    public void checkInRoom(){  \n        if(state == FREEMTIME_STATE){  \n            if(count > 0){  \n                System.out.println(\"空闲房间，入住...\");  \n                state =  CHECKIN_STATE;     //改变状态：已预订  \n                count --;  \n                //房间预订完了,提示客户没有房源了  \n                if(count == 0){  \n                    System.out.println(\"不好意思,房间已经预订完,欢迎您下次光临...\");  \n                }  \n            }  \n            else{  \n                System.out.println(\"不好意思,已经没有房间了....\");  \n            }  \n              \n        }  \n        else if(state == BOOKED_STATE){  \n            if(\"如果该房间是您预订的\"){  \n                System.out.println(\"入住....\");  \n                state = CHECKIN_STATE;  \n            }  \n            else{  \n                System.out.println(\"您没有预订该房间,请先预订...\");  \n            }  \n        }  \n        else if(state == CHECKIN_STATE){  \n            System.out.println(\"该房间已经入住了...\");  \n        }  \n    }  \n      \n    /** \n     * @desc 退订 \n     * @return void \n     */  \n    public void unsubscribeRoom(){  \n        if(state == FREEMTIME_STATE){  \n        }  \n        else if(state == CHECKIN_STATE){  \n              \n        }  \n        else if(state == BOOKED_STATE){  \n            System.out.println(\"已退订房间...\");  \n            state = FREEMTIME_STATE;  \n            count ++;  \n        }  \n    }  \n      \n    /** \n     * @desc 退房 \n     * @return void \n     */  \n    public void checkOutRoom(){  \n        if(state == FREEMTIME_STATE){  \n              \n        }  \n        else if(state == BOOKED_STATE){  \n              \n        }  \n        else if(state == CHECKIN_STATE){  \n            System.out.println(\"已退房..\");  \n            state = FREEMTIME_STATE;  \n            count++;  \n        }  \n    }  \n```\n\n当添加状态的时候，例如：损坏房间  则需要每个操作都要判断是否损坏房间\n\n\n# 2 使用状态模式 华丽实现 \n\n## 2.1 模式定义 \n1. 在很多情况下，一个对象的行为取决于它的一个或多个变化的属性，这些属性我们称之为状态，这个对象称之为状态对象。对于状态对象而已，它的行为依赖于它的状态，比如你要预订房间，那么只有当该房间为空闲时你才能预订，你想入住该房间也只有当你预订了该房间或者该房间为空闲时。对于这样的一个对象，当它在于外部事件产生互动的时候，其内部状态就会发生改变，从而使得他的行为也随之发生改变。\n2. 那么何为状态模式呢？所谓状态模式就是允许对象在内部状态发生改变时改变它的行为，对象看起来好像修改了它的类。\n \n\n![](state_design_pattern/2.png)\n\n\t 1.  状态模式包含如下角色： \n     2.  Context: 环境类。可以包括一些内部状态。 \n     3.  State: 抽象状态类。State定义了一个所有具体状态的共同接口，任何状态都实现这个相同的接口，这样一来，状态之间就可以互相转换了。 \n     4.  ConcreteState:具体状态类。具体状态类，用于处理来自Context的请求，每一个ConcreteState都提供了它对自己请求的实现，所以，当Context改变状态时行为也会跟着改变。\n\n# 3 代码实现\n\n\n![](state_design_pattern/3.png)\n\n## 3.1 状态接口代码：State.java\n```\npublic interface State {  \n    /**  \n     * @desc 预订房间  \n     * @return void  \n     */  \n    public void bookRoom();  \n      \n    /**  \n     * @desc 退订房间  \n     * @return void  \n     */  \n    public void unsubscribeRoom();  \n      \n    /**  \n     * @desc 入住  \n     * @return void  \n     */  \n    public void checkInRoom();  \n      \n    /**  \n     * @desc 退房  \n     * @return void  \n     */  \n    public void checkOutRoom();  \n      \n}  \n       然后是房间类  \npublic class Room {  \n    /*  \n     * 房间的三个状态  \n     */  \n    State freeTimeState;    //空闲状态  \n    State checkInState;     //入住状态  \n    State bookedState;      //预订状态  \n  \n    State state ;    \n      \n    public Room(){  \n        freeTimeState = new FreeTimeState(this);  \n        checkInState = new CheckInState(this);  \n        bookedState = new BookedState(this);  \n          \n        state = freeTimeState ;  //初始状态为空闲  \n    }  \n      \n    /**  \n     * @desc 预订房间  \n     * @return void  \n     */  \n    public void bookRoom(){  \n        state.bookRoom();  \n    }  \n      \n    /**  \n     * @desc 退订房间  \n     * @return void  \n     */  \n    public void unsubscribeRoom(){  \n        state.unsubscribeRoom();  \n    }  \n      \n    /**  \n     * @desc 入住  \n     * @return void  \n     */  \n    public void checkInRoom(){  \n        state.checkInRoom();  \n    }  \n      \n    /**  \n     * @desc 退房  \n     * @return void  \n     */  \n    public void checkOutRoom(){  \n        state.checkOutRoom();  \n    }  \n  \n    public String toString(){  \n        return \"该房间的状态是:\"+getState().getClass().getName();  \n    }  \n      \n    /*  \n     * getter和setter方法  \n     */  \n      \n    public State getFreeTimeState() {  \n        return freeTimeState;  \n    }  \n  \n    public void setFreeTimeState(State freeTimeState) {  \n        this.freeTimeState = freeTimeState;  \n    }  \n  \n    public State getCheckInState() {  \n        return checkInState;  \n    }  \n  \n    public void setCheckInState(State checkInState) {  \n        this.checkInState = checkInState;  \n    }  \n  \n    public State getBookedState() {  \n        return bookedState;  \n    }  \n  \n    public void setBookedState(State bookedState) {  \n        this.bookedState = bookedState;  \n    }  \n  \n    public State getState() {  \n        return state;  \n    }  \n  \n    public void setState(State state) {  \n        this.state = state;  \n    }  \n  \n}  \n```\n\n## 3.2 状态接口实现类：空闲，预定，入住\n```\n\n/**  \n * @project: design_state   \n * @date 2013-8-24  \n * @Description: 空闲状态只能预订和入住 \n */  \npublic class FreeTimeState implements State {  \n      \n    Room hotelManagement;  \n      \n    public FreeTimeState(Room hotelManagement){  \n        this.hotelManagement = hotelManagement;  \n    }  \n      \n      \n    public void bookRoom() {  \n        System.out.println(\"您已经成功预订了...\");  \n        hotelManagement.setState(hotelManagement.getBookedState());   //状态变成已经预订  \n    }  \n  \n    public void checkInRoom() {  \n        System.out.println(\"您已经成功入住了...\");  \n        hotelManagement.setState(hotelManagement.getCheckInState());   //状态变成已经入住  \n    }  \n  \n    public void checkOutRoom() {  \n        //不需要做操作  \n    }  \n  \n    public void unsubscribeRoom() {  \n        //不需要做操作  \n    }  \n  \n}  \n\n\n\n/**  \n * @project: design_state   \n * @date 2013-8-24  \n * @Description: 入住状态房间只能退房 \n */  \n\npublic class BookedState implements State {  \n    Room hotelManagement;  \n      \n    public BookedState(Room hotelManagement) {  \n        this.hotelManagement = hotelManagement;  \n    }  \n  \n    public void bookRoom() {  \n        System.out.println(\"该房间已近给预定了...\");  \n    }  \n  \n    public void checkInRoom() {  \n        System.out.println(\"入住成功...\");   \n        hotelManagement.setState(hotelManagement.getCheckInState());         //状态变成入住  \n    }  \n  \n    public void checkOutRoom() {  \n        //不需要做操作  \n    }  \n  \n    public void unsubscribeRoom() {  \n        System.out.println(\"退订成功,欢迎下次光临...\");  \n        hotelManagement.setState(hotelManagement.getFreeTimeState());   //变成空闲状态  \n    }  \n  \n}  \n\n\n\n/**  \n * @project: design_state   \n * @date 2013-8-24  \n * @Description: 入住可以退房 \n */  \n\n\npublic class CheckInState implements State {  \n    Room hotelManagement;  \n    public CheckInState(Room hotelManagement) {  \n        this.hotelManagement = hotelManagement;  \n    }  \n  \n    public void bookRoom() {  \n        System.out.println(\"该房间已经入住了...\");  \n    }  \n  \n    public void checkInRoom() {  \n        System.out.println(\"该房间已经入住了...\");  \n    }  \n  \n    public void checkOutRoom() {  \n        System.out.println(\"退房成功....\");  \n        hotelManagement.setState(hotelManagement.getFreeTimeState());     //状态变成空闲  \n    }  \n  \n    public void unsubscribeRoom() {  \n        //不需要做操作  \n    }  \n  \n}  \n```\n\n## 3.3 测试类\n```\npublic class Test {  \n    public static void main(String[] args) {  \n        //有3间房  \n        Room[] rooms = new Room[2];  \n        //初始化  \n        for(int i = 0 ; i < rooms.length ; i++){  \n            rooms[i] = new Room();  \n        }  \n        //第一间房  \n        rooms[0].bookRoom();    //预订  \n        rooms[0].checkInRoom();   //入住  \n        rooms[0].bookRoom();    //预订  \n        System.out.println(rooms[0]);  \n        System.out.println(\"---------------------------\");  \n          \n        //第二间房  \n        rooms[1].checkInRoom();  \n        rooms[1].bookRoom();  \n        rooms[1].checkOutRoom();  \n        rooms[1].bookRoom();  \n        System.out.println(rooms[1]);  \n    }  \n  \n}  \n```\n\n![](state_design_pattern/4.png)\n# 4总结\n\n## 1. 优点\n 1. 封装了转换规则。 \n 2. 枚举可能的状态，在枚举状态之前需要确定状态种类。 \n 3. 将所有与某个状态有关的行为放到一个类中，并且可以方便地增加新的状态，只需要改变对象状态即可改变对象的行为。 \n 4. 允许状态转换逻辑与状态对象合成一体，而不是某一个巨大的条件语句块。 \n 5. 可以让多个环境对象共享一个状态对象，从而减少系统中对象的个数。\n  \n## 2. 缺点\n1. 状态模式的使用必然会增加系统类和对象的个数。 \n2. 状态模式的结构与实现都较为复杂，如果使用不当将导致程序结构和代码的混乱。   \n3. 状态模式对“开闭原则”的支持并不太好，对于可以切换状态的状态模式，增加新的状态类需要修改那些负责状态转换的源代码，否则无法切换到新增状态；而且修改某个状态类的行为也需修改对应类的源代码。\n\n# 五、模式适用场景\n1. 对象的行为依赖于它的状态（属性）并且可以根据它的状态改变而改变它的相关行为。 \n2. 代码中包含大量与对象状态有关的条件语句\n# 六、模式总结\n 1. 状态模式允许一个对象基于内部状态而拥有不同的行为。\n 2. Context会将行为委托给当前状态对象。\n 3. 状态模式对“开闭原则”支持不是很好。","slug":"state_design_pattern","published":1,"updated":"2017-07-19T10:40:28.614Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58erd001cawpfbve02axm","content":"<h1 id=\"1-需求\"><a href=\"#1-需求\" class=\"headerlink\" title=\"1 需求\"></a>1 需求</h1><p><img src=\"/2016/05/03/state_design_pattern/1.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">实现客户  预定/入住/退订/退房  房间的功能</div></pre></td></tr></table></figure>\n<h2 id=\"1-1-不太华丽的实现-if-else\"><a href=\"#1-1-不太华丽的实现-if-else\" class=\"headerlink\" title=\"1.1 不太华丽的实现  if-else\"></a>1.1 不太华丽的实现  if-else</h2><p>常量定义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static final int FREEMTIME_STATE = 0;  //空闲状态  </div><div class=\"line\">public static final int BOOKED_STATE = 1;     //已预订状态  </div><div class=\"line\">public static final int CHECKIN_STATE = 2;    //入住状态  </div><div class=\"line\">int state = FREEMTIME_STATE;     //初始状态</div></pre></td></tr></table></figure>\n<p>客户动作类（预定，入住，退订，退房）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div></pre></td><td class=\"code\"><pre><div class=\"line\">/** </div><div class=\"line\">     * @desc 预订 </div><div class=\"line\">     * @return void </div><div class=\"line\">     */  </div><div class=\"line\">    public void bookRoom()&#123;  </div><div class=\"line\">        if(state == FREEMTIME_STATE)&#123;   //空闲可预订  </div><div class=\"line\">            if(count &gt; 0)&#123;  </div><div class=\"line\">                System.out.println(&quot;空闲房间，完成预订...&quot;);  </div><div class=\"line\">                state =  BOOKED_STATE;     //改变状态：已预订  </div><div class=\"line\">                count --;  </div><div class=\"line\">                //房间预订完了,提示客户没有房源了  </div><div class=\"line\">                if(count == 0)&#123;  </div><div class=\"line\">                    System.out.println(&quot;不好意思,房间已经预订完,欢迎您下次光临...&quot;);  </div><div class=\"line\">                &#125;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            else&#123;  </div><div class=\"line\">                System.out.println(&quot;不好意思,已经没有房间了....&quot;);  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == BOOKED_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;该房间已经被预订了...&quot;);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == CHECKIN_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;该房间已经有人入住了...&quot;);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /** </div><div class=\"line\">     * @desc 入住 </div><div class=\"line\">     * @return void </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkInRoom()&#123;  </div><div class=\"line\">        if(state == FREEMTIME_STATE)&#123;  </div><div class=\"line\">            if(count &gt; 0)&#123;  </div><div class=\"line\">                System.out.println(&quot;空闲房间，入住...&quot;);  </div><div class=\"line\">                state =  CHECKIN_STATE;     //改变状态：已预订  </div><div class=\"line\">                count --;  </div><div class=\"line\">                //房间预订完了,提示客户没有房源了  </div><div class=\"line\">                if(count == 0)&#123;  </div><div class=\"line\">                    System.out.println(&quot;不好意思,房间已经预订完,欢迎您下次光临...&quot;);  </div><div class=\"line\">                &#125;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            else&#123;  </div><div class=\"line\">                System.out.println(&quot;不好意思,已经没有房间了....&quot;);  </div><div class=\"line\">            &#125;  </div><div class=\"line\">              </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == BOOKED_STATE)&#123;  </div><div class=\"line\">            if(&quot;如果该房间是您预订的&quot;)&#123;  </div><div class=\"line\">                System.out.println(&quot;入住....&quot;);  </div><div class=\"line\">                state = CHECKIN_STATE;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            else&#123;  </div><div class=\"line\">                System.out.println(&quot;您没有预订该房间,请先预订...&quot;);  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == CHECKIN_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;该房间已经入住了...&quot;);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /** </div><div class=\"line\">     * @desc 退订 </div><div class=\"line\">     * @return void </div><div class=\"line\">     */  </div><div class=\"line\">    public void unsubscribeRoom()&#123;  </div><div class=\"line\">        if(state == FREEMTIME_STATE)&#123;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == CHECKIN_STATE)&#123;  </div><div class=\"line\">              </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == BOOKED_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;已退订房间...&quot;);  </div><div class=\"line\">            state = FREEMTIME_STATE;  </div><div class=\"line\">            count ++;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /** </div><div class=\"line\">     * @desc 退房 </div><div class=\"line\">     * @return void </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkOutRoom()&#123;  </div><div class=\"line\">        if(state == FREEMTIME_STATE)&#123;  </div><div class=\"line\">              </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == BOOKED_STATE)&#123;  </div><div class=\"line\">              </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == CHECKIN_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;已退房..&quot;);  </div><div class=\"line\">            state = FREEMTIME_STATE;  </div><div class=\"line\">            count++;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>当添加状态的时候，例如：损坏房间  则需要每个操作都要判断是否损坏房间</p>\n<h1 id=\"2-使用状态模式-华丽实现\"><a href=\"#2-使用状态模式-华丽实现\" class=\"headerlink\" title=\"2 使用状态模式 华丽实现\"></a>2 使用状态模式 华丽实现</h1><h2 id=\"2-1-模式定义\"><a href=\"#2-1-模式定义\" class=\"headerlink\" title=\"2.1 模式定义\"></a>2.1 模式定义</h2><ol>\n<li>在很多情况下，一个对象的行为取决于它的一个或多个变化的属性，这些属性我们称之为状态，这个对象称之为状态对象。对于状态对象而已，它的行为依赖于它的状态，比如你要预订房间，那么只有当该房间为空闲时你才能预订，你想入住该房间也只有当你预订了该房间或者该房间为空闲时。对于这样的一个对象，当它在于外部事件产生互动的时候，其内部状态就会发生改变，从而使得他的行为也随之发生改变。</li>\n<li>那么何为状态模式呢？所谓状态模式就是允许对象在内部状态发生改变时改变它的行为，对象看起来好像修改了它的类。</li>\n</ol>\n<p><img src=\"/2016/05/03/state_design_pattern/2.png\" alt=\"\"></p>\n<pre><code>1.  状态模式包含如下角色： \n2.  Context: 环境类。可以包括一些内部状态。 \n3.  State: 抽象状态类。State定义了一个所有具体状态的共同接口，任何状态都实现这个相同的接口，这样一来，状态之间就可以互相转换了。 \n4.  ConcreteState:具体状态类。具体状态类，用于处理来自Context的请求，每一个ConcreteState都提供了它对自己请求的实现，所以，当Context改变状态时行为也会跟着改变。\n</code></pre><h1 id=\"3-代码实现\"><a href=\"#3-代码实现\" class=\"headerlink\" title=\"3 代码实现\"></a>3 代码实现</h1><p><img src=\"/2016/05/03/state_design_pattern/3.png\" alt=\"\"></p>\n<h2 id=\"3-1-状态接口代码：State-java\"><a href=\"#3-1-状态接口代码：State-java\" class=\"headerlink\" title=\"3.1 状态接口代码：State.java\"></a>3.1 状态接口代码：State.java</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface State &#123;  </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 预订房间  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void bookRoom();  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 退订房间  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void unsubscribeRoom();  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 入住  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkInRoom();  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 退房  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkOutRoom();  </div><div class=\"line\">      </div><div class=\"line\">&#125;  </div><div class=\"line\">       然后是房间类  </div><div class=\"line\">public class Room &#123;  </div><div class=\"line\">    /*  </div><div class=\"line\">     * 房间的三个状态  </div><div class=\"line\">     */  </div><div class=\"line\">    State freeTimeState;    //空闲状态  </div><div class=\"line\">    State checkInState;     //入住状态  </div><div class=\"line\">    State bookedState;      //预订状态  </div><div class=\"line\">  </div><div class=\"line\">    State state ;    </div><div class=\"line\">      </div><div class=\"line\">    public Room()&#123;  </div><div class=\"line\">        freeTimeState = new FreeTimeState(this);  </div><div class=\"line\">        checkInState = new CheckInState(this);  </div><div class=\"line\">        bookedState = new BookedState(this);  </div><div class=\"line\">          </div><div class=\"line\">        state = freeTimeState ;  //初始状态为空闲  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 预订房间  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void bookRoom()&#123;  </div><div class=\"line\">        state.bookRoom();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 退订房间  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void unsubscribeRoom()&#123;  </div><div class=\"line\">        state.unsubscribeRoom();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 入住  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkInRoom()&#123;  </div><div class=\"line\">        state.checkInRoom();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 退房  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkOutRoom()&#123;  </div><div class=\"line\">        state.checkOutRoom();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public String toString()&#123;  </div><div class=\"line\">        return &quot;该房间的状态是:&quot;+getState().getClass().getName();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /*  </div><div class=\"line\">     * getter和setter方法  </div><div class=\"line\">     */  </div><div class=\"line\">      </div><div class=\"line\">    public State getFreeTimeState() &#123;  </div><div class=\"line\">        return freeTimeState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void setFreeTimeState(State freeTimeState) &#123;  </div><div class=\"line\">        this.freeTimeState = freeTimeState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public State getCheckInState() &#123;  </div><div class=\"line\">        return checkInState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void setCheckInState(State checkInState) &#123;  </div><div class=\"line\">        this.checkInState = checkInState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public State getBookedState() &#123;  </div><div class=\"line\">        return bookedState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void setBookedState(State bookedState) &#123;  </div><div class=\"line\">        this.bookedState = bookedState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public State getState() &#123;  </div><div class=\"line\">        return state;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void setState(State state) &#123;  </div><div class=\"line\">        this.state = state;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-2-状态接口实现类：空闲，预定，入住\"><a href=\"#3-2-状态接口实现类：空闲，预定，入住\" class=\"headerlink\" title=\"3.2 状态接口实现类：空闲，预定，入住\"></a>3.2 状态接口实现类：空闲，预定，入住</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">/**  </div><div class=\"line\"> * @project: design_state   </div><div class=\"line\"> * @date 2013-8-24  </div><div class=\"line\"> * @Description: 空闲状态只能预订和入住 </div><div class=\"line\"> */  </div><div class=\"line\">public class FreeTimeState implements State &#123;  </div><div class=\"line\">      </div><div class=\"line\">    Room hotelManagement;  </div><div class=\"line\">      </div><div class=\"line\">    public FreeTimeState(Room hotelManagement)&#123;  </div><div class=\"line\">        this.hotelManagement = hotelManagement;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">      </div><div class=\"line\">    public void bookRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;您已经成功预订了...&quot;);  </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getBookedState());   //状态变成已经预订  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkInRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;您已经成功入住了...&quot;);  </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getCheckInState());   //状态变成已经入住  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkOutRoom() &#123;  </div><div class=\"line\">        //不需要做操作  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void unsubscribeRoom() &#123;  </div><div class=\"line\">        //不需要做操作  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/**  </div><div class=\"line\"> * @project: design_state   </div><div class=\"line\"> * @date 2013-8-24  </div><div class=\"line\"> * @Description: 入住状态房间只能退房 </div><div class=\"line\"> */  </div><div class=\"line\"></div><div class=\"line\">public class BookedState implements State &#123;  </div><div class=\"line\">    Room hotelManagement;  </div><div class=\"line\">      </div><div class=\"line\">    public BookedState(Room hotelManagement) &#123;  </div><div class=\"line\">        this.hotelManagement = hotelManagement;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void bookRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;该房间已近给预定了...&quot;);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkInRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;入住成功...&quot;);   </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getCheckInState());         //状态变成入住  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkOutRoom() &#123;  </div><div class=\"line\">        //不需要做操作  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void unsubscribeRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;退订成功,欢迎下次光临...&quot;);  </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getFreeTimeState());   //变成空闲状态  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/**  </div><div class=\"line\"> * @project: design_state   </div><div class=\"line\"> * @date 2013-8-24  </div><div class=\"line\"> * @Description: 入住可以退房 </div><div class=\"line\"> */  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">public class CheckInState implements State &#123;  </div><div class=\"line\">    Room hotelManagement;  </div><div class=\"line\">    public CheckInState(Room hotelManagement) &#123;  </div><div class=\"line\">        this.hotelManagement = hotelManagement;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void bookRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;该房间已经入住了...&quot;);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkInRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;该房间已经入住了...&quot;);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkOutRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;退房成功....&quot;);  </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getFreeTimeState());     //状态变成空闲  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void unsubscribeRoom() &#123;  </div><div class=\"line\">        //不需要做操作  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-3-测试类\"><a href=\"#3-3-测试类\" class=\"headerlink\" title=\"3.3 测试类\"></a>3.3 测试类</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class Test &#123;  </div><div class=\"line\">    public static void main(String[] args) &#123;  </div><div class=\"line\">        //有3间房  </div><div class=\"line\">        Room[] rooms = new Room[2];  </div><div class=\"line\">        //初始化  </div><div class=\"line\">        for(int i = 0 ; i &lt; rooms.length ; i++)&#123;  </div><div class=\"line\">            rooms[i] = new Room();  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        //第一间房  </div><div class=\"line\">        rooms[0].bookRoom();    //预订  </div><div class=\"line\">        rooms[0].checkInRoom();   //入住  </div><div class=\"line\">        rooms[0].bookRoom();    //预订  </div><div class=\"line\">        System.out.println(rooms[0]);  </div><div class=\"line\">        System.out.println(&quot;---------------------------&quot;);  </div><div class=\"line\">          </div><div class=\"line\">        //第二间房  </div><div class=\"line\">        rooms[1].checkInRoom();  </div><div class=\"line\">        rooms[1].bookRoom();  </div><div class=\"line\">        rooms[1].checkOutRoom();  </div><div class=\"line\">        rooms[1].bookRoom();  </div><div class=\"line\">        System.out.println(rooms[1]);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"/2016/05/03/state_design_pattern/4.png\" alt=\"\"></p>\n<h1 id=\"4总结\"><a href=\"#4总结\" class=\"headerlink\" title=\"4总结\"></a>4总结</h1><h2 id=\"1-优点\"><a href=\"#1-优点\" class=\"headerlink\" title=\"1. 优点\"></a>1. 优点</h2><ol>\n<li>封装了转换规则。 </li>\n<li>枚举可能的状态，在枚举状态之前需要确定状态种类。 </li>\n<li>将所有与某个状态有关的行为放到一个类中，并且可以方便地增加新的状态，只需要改变对象状态即可改变对象的行为。 </li>\n<li>允许状态转换逻辑与状态对象合成一体，而不是某一个巨大的条件语句块。 </li>\n<li>可以让多个环境对象共享一个状态对象，从而减少系统中对象的个数。</li>\n</ol>\n<h2 id=\"2-缺点\"><a href=\"#2-缺点\" class=\"headerlink\" title=\"2. 缺点\"></a>2. 缺点</h2><ol>\n<li>状态模式的使用必然会增加系统类和对象的个数。 </li>\n<li>状态模式的结构与实现都较为复杂，如果使用不当将导致程序结构和代码的混乱。   </li>\n<li>状态模式对“开闭原则”的支持并不太好，对于可以切换状态的状态模式，增加新的状态类需要修改那些负责状态转换的源代码，否则无法切换到新增状态；而且修改某个状态类的行为也需修改对应类的源代码。</li>\n</ol>\n<h1 id=\"五、模式适用场景\"><a href=\"#五、模式适用场景\" class=\"headerlink\" title=\"五、模式适用场景\"></a>五、模式适用场景</h1><ol>\n<li>对象的行为依赖于它的状态（属性）并且可以根据它的状态改变而改变它的相关行为。 </li>\n<li>代码中包含大量与对象状态有关的条件语句<h1 id=\"六、模式总结\"><a href=\"#六、模式总结\" class=\"headerlink\" title=\"六、模式总结\"></a>六、模式总结</h1><ol>\n<li>状态模式允许一个对象基于内部状态而拥有不同的行为。</li>\n<li>Context会将行为委托给当前状态对象。</li>\n<li>状态模式对“开闭原则”支持不是很好。</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-需求\"><a href=\"#1-需求\" class=\"headerlink\" title=\"1 需求\"></a>1 需求</h1><p><img src=\"/2016/05/03/state_design_pattern/1.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">实现客户  预定/入住/退订/退房  房间的功能</div></pre></td></tr></table></figure>\n<h2 id=\"1-1-不太华丽的实现-if-else\"><a href=\"#1-1-不太华丽的实现-if-else\" class=\"headerlink\" title=\"1.1 不太华丽的实现  if-else\"></a>1.1 不太华丽的实现  if-else</h2><p>常量定义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static final int FREEMTIME_STATE = 0;  //空闲状态  </div><div class=\"line\">public static final int BOOKED_STATE = 1;     //已预订状态  </div><div class=\"line\">public static final int CHECKIN_STATE = 2;    //入住状态  </div><div class=\"line\">int state = FREEMTIME_STATE;     //初始状态</div></pre></td></tr></table></figure>\n<p>客户动作类（预定，入住，退订，退房）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div></pre></td><td class=\"code\"><pre><div class=\"line\">/** </div><div class=\"line\">     * @desc 预订 </div><div class=\"line\">     * @return void </div><div class=\"line\">     */  </div><div class=\"line\">    public void bookRoom()&#123;  </div><div class=\"line\">        if(state == FREEMTIME_STATE)&#123;   //空闲可预订  </div><div class=\"line\">            if(count &gt; 0)&#123;  </div><div class=\"line\">                System.out.println(&quot;空闲房间，完成预订...&quot;);  </div><div class=\"line\">                state =  BOOKED_STATE;     //改变状态：已预订  </div><div class=\"line\">                count --;  </div><div class=\"line\">                //房间预订完了,提示客户没有房源了  </div><div class=\"line\">                if(count == 0)&#123;  </div><div class=\"line\">                    System.out.println(&quot;不好意思,房间已经预订完,欢迎您下次光临...&quot;);  </div><div class=\"line\">                &#125;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            else&#123;  </div><div class=\"line\">                System.out.println(&quot;不好意思,已经没有房间了....&quot;);  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == BOOKED_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;该房间已经被预订了...&quot;);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == CHECKIN_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;该房间已经有人入住了...&quot;);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /** </div><div class=\"line\">     * @desc 入住 </div><div class=\"line\">     * @return void </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkInRoom()&#123;  </div><div class=\"line\">        if(state == FREEMTIME_STATE)&#123;  </div><div class=\"line\">            if(count &gt; 0)&#123;  </div><div class=\"line\">                System.out.println(&quot;空闲房间，入住...&quot;);  </div><div class=\"line\">                state =  CHECKIN_STATE;     //改变状态：已预订  </div><div class=\"line\">                count --;  </div><div class=\"line\">                //房间预订完了,提示客户没有房源了  </div><div class=\"line\">                if(count == 0)&#123;  </div><div class=\"line\">                    System.out.println(&quot;不好意思,房间已经预订完,欢迎您下次光临...&quot;);  </div><div class=\"line\">                &#125;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            else&#123;  </div><div class=\"line\">                System.out.println(&quot;不好意思,已经没有房间了....&quot;);  </div><div class=\"line\">            &#125;  </div><div class=\"line\">              </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == BOOKED_STATE)&#123;  </div><div class=\"line\">            if(&quot;如果该房间是您预订的&quot;)&#123;  </div><div class=\"line\">                System.out.println(&quot;入住....&quot;);  </div><div class=\"line\">                state = CHECKIN_STATE;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            else&#123;  </div><div class=\"line\">                System.out.println(&quot;您没有预订该房间,请先预订...&quot;);  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == CHECKIN_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;该房间已经入住了...&quot;);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /** </div><div class=\"line\">     * @desc 退订 </div><div class=\"line\">     * @return void </div><div class=\"line\">     */  </div><div class=\"line\">    public void unsubscribeRoom()&#123;  </div><div class=\"line\">        if(state == FREEMTIME_STATE)&#123;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == CHECKIN_STATE)&#123;  </div><div class=\"line\">              </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == BOOKED_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;已退订房间...&quot;);  </div><div class=\"line\">            state = FREEMTIME_STATE;  </div><div class=\"line\">            count ++;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /** </div><div class=\"line\">     * @desc 退房 </div><div class=\"line\">     * @return void </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkOutRoom()&#123;  </div><div class=\"line\">        if(state == FREEMTIME_STATE)&#123;  </div><div class=\"line\">              </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == BOOKED_STATE)&#123;  </div><div class=\"line\">              </div><div class=\"line\">        &#125;  </div><div class=\"line\">        else if(state == CHECKIN_STATE)&#123;  </div><div class=\"line\">            System.out.println(&quot;已退房..&quot;);  </div><div class=\"line\">            state = FREEMTIME_STATE;  </div><div class=\"line\">            count++;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>当添加状态的时候，例如：损坏房间  则需要每个操作都要判断是否损坏房间</p>\n<h1 id=\"2-使用状态模式-华丽实现\"><a href=\"#2-使用状态模式-华丽实现\" class=\"headerlink\" title=\"2 使用状态模式 华丽实现\"></a>2 使用状态模式 华丽实现</h1><h2 id=\"2-1-模式定义\"><a href=\"#2-1-模式定义\" class=\"headerlink\" title=\"2.1 模式定义\"></a>2.1 模式定义</h2><ol>\n<li>在很多情况下，一个对象的行为取决于它的一个或多个变化的属性，这些属性我们称之为状态，这个对象称之为状态对象。对于状态对象而已，它的行为依赖于它的状态，比如你要预订房间，那么只有当该房间为空闲时你才能预订，你想入住该房间也只有当你预订了该房间或者该房间为空闲时。对于这样的一个对象，当它在于外部事件产生互动的时候，其内部状态就会发生改变，从而使得他的行为也随之发生改变。</li>\n<li>那么何为状态模式呢？所谓状态模式就是允许对象在内部状态发生改变时改变它的行为，对象看起来好像修改了它的类。</li>\n</ol>\n<p><img src=\"/2016/05/03/state_design_pattern/2.png\" alt=\"\"></p>\n<pre><code>1.  状态模式包含如下角色： \n2.  Context: 环境类。可以包括一些内部状态。 \n3.  State: 抽象状态类。State定义了一个所有具体状态的共同接口，任何状态都实现这个相同的接口，这样一来，状态之间就可以互相转换了。 \n4.  ConcreteState:具体状态类。具体状态类，用于处理来自Context的请求，每一个ConcreteState都提供了它对自己请求的实现，所以，当Context改变状态时行为也会跟着改变。\n</code></pre><h1 id=\"3-代码实现\"><a href=\"#3-代码实现\" class=\"headerlink\" title=\"3 代码实现\"></a>3 代码实现</h1><p><img src=\"/2016/05/03/state_design_pattern/3.png\" alt=\"\"></p>\n<h2 id=\"3-1-状态接口代码：State-java\"><a href=\"#3-1-状态接口代码：State-java\" class=\"headerlink\" title=\"3.1 状态接口代码：State.java\"></a>3.1 状态接口代码：State.java</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface State &#123;  </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 预订房间  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void bookRoom();  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 退订房间  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void unsubscribeRoom();  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 入住  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkInRoom();  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 退房  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkOutRoom();  </div><div class=\"line\">      </div><div class=\"line\">&#125;  </div><div class=\"line\">       然后是房间类  </div><div class=\"line\">public class Room &#123;  </div><div class=\"line\">    /*  </div><div class=\"line\">     * 房间的三个状态  </div><div class=\"line\">     */  </div><div class=\"line\">    State freeTimeState;    //空闲状态  </div><div class=\"line\">    State checkInState;     //入住状态  </div><div class=\"line\">    State bookedState;      //预订状态  </div><div class=\"line\">  </div><div class=\"line\">    State state ;    </div><div class=\"line\">      </div><div class=\"line\">    public Room()&#123;  </div><div class=\"line\">        freeTimeState = new FreeTimeState(this);  </div><div class=\"line\">        checkInState = new CheckInState(this);  </div><div class=\"line\">        bookedState = new BookedState(this);  </div><div class=\"line\">          </div><div class=\"line\">        state = freeTimeState ;  //初始状态为空闲  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 预订房间  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void bookRoom()&#123;  </div><div class=\"line\">        state.bookRoom();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 退订房间  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void unsubscribeRoom()&#123;  </div><div class=\"line\">        state.unsubscribeRoom();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 入住  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkInRoom()&#123;  </div><div class=\"line\">        state.checkInRoom();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /**  </div><div class=\"line\">     * @desc 退房  </div><div class=\"line\">     * @return void  </div><div class=\"line\">     */  </div><div class=\"line\">    public void checkOutRoom()&#123;  </div><div class=\"line\">        state.checkOutRoom();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public String toString()&#123;  </div><div class=\"line\">        return &quot;该房间的状态是:&quot;+getState().getClass().getName();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    /*  </div><div class=\"line\">     * getter和setter方法  </div><div class=\"line\">     */  </div><div class=\"line\">      </div><div class=\"line\">    public State getFreeTimeState() &#123;  </div><div class=\"line\">        return freeTimeState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void setFreeTimeState(State freeTimeState) &#123;  </div><div class=\"line\">        this.freeTimeState = freeTimeState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public State getCheckInState() &#123;  </div><div class=\"line\">        return checkInState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void setCheckInState(State checkInState) &#123;  </div><div class=\"line\">        this.checkInState = checkInState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public State getBookedState() &#123;  </div><div class=\"line\">        return bookedState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void setBookedState(State bookedState) &#123;  </div><div class=\"line\">        this.bookedState = bookedState;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public State getState() &#123;  </div><div class=\"line\">        return state;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void setState(State state) &#123;  </div><div class=\"line\">        this.state = state;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-2-状态接口实现类：空闲，预定，入住\"><a href=\"#3-2-状态接口实现类：空闲，预定，入住\" class=\"headerlink\" title=\"3.2 状态接口实现类：空闲，预定，入住\"></a>3.2 状态接口实现类：空闲，预定，入住</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">/**  </div><div class=\"line\"> * @project: design_state   </div><div class=\"line\"> * @date 2013-8-24  </div><div class=\"line\"> * @Description: 空闲状态只能预订和入住 </div><div class=\"line\"> */  </div><div class=\"line\">public class FreeTimeState implements State &#123;  </div><div class=\"line\">      </div><div class=\"line\">    Room hotelManagement;  </div><div class=\"line\">      </div><div class=\"line\">    public FreeTimeState(Room hotelManagement)&#123;  </div><div class=\"line\">        this.hotelManagement = hotelManagement;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">      </div><div class=\"line\">    public void bookRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;您已经成功预订了...&quot;);  </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getBookedState());   //状态变成已经预订  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkInRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;您已经成功入住了...&quot;);  </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getCheckInState());   //状态变成已经入住  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkOutRoom() &#123;  </div><div class=\"line\">        //不需要做操作  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void unsubscribeRoom() &#123;  </div><div class=\"line\">        //不需要做操作  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/**  </div><div class=\"line\"> * @project: design_state   </div><div class=\"line\"> * @date 2013-8-24  </div><div class=\"line\"> * @Description: 入住状态房间只能退房 </div><div class=\"line\"> */  </div><div class=\"line\"></div><div class=\"line\">public class BookedState implements State &#123;  </div><div class=\"line\">    Room hotelManagement;  </div><div class=\"line\">      </div><div class=\"line\">    public BookedState(Room hotelManagement) &#123;  </div><div class=\"line\">        this.hotelManagement = hotelManagement;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void bookRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;该房间已近给预定了...&quot;);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkInRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;入住成功...&quot;);   </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getCheckInState());         //状态变成入住  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkOutRoom() &#123;  </div><div class=\"line\">        //不需要做操作  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void unsubscribeRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;退订成功,欢迎下次光临...&quot;);  </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getFreeTimeState());   //变成空闲状态  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/**  </div><div class=\"line\"> * @project: design_state   </div><div class=\"line\"> * @date 2013-8-24  </div><div class=\"line\"> * @Description: 入住可以退房 </div><div class=\"line\"> */  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">public class CheckInState implements State &#123;  </div><div class=\"line\">    Room hotelManagement;  </div><div class=\"line\">    public CheckInState(Room hotelManagement) &#123;  </div><div class=\"line\">        this.hotelManagement = hotelManagement;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void bookRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;该房间已经入住了...&quot;);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkInRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;该房间已经入住了...&quot;);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void checkOutRoom() &#123;  </div><div class=\"line\">        System.out.println(&quot;退房成功....&quot;);  </div><div class=\"line\">        hotelManagement.setState(hotelManagement.getFreeTimeState());     //状态变成空闲  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    public void unsubscribeRoom() &#123;  </div><div class=\"line\">        //不需要做操作  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-3-测试类\"><a href=\"#3-3-测试类\" class=\"headerlink\" title=\"3.3 测试类\"></a>3.3 测试类</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class Test &#123;  </div><div class=\"line\">    public static void main(String[] args) &#123;  </div><div class=\"line\">        //有3间房  </div><div class=\"line\">        Room[] rooms = new Room[2];  </div><div class=\"line\">        //初始化  </div><div class=\"line\">        for(int i = 0 ; i &lt; rooms.length ; i++)&#123;  </div><div class=\"line\">            rooms[i] = new Room();  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        //第一间房  </div><div class=\"line\">        rooms[0].bookRoom();    //预订  </div><div class=\"line\">        rooms[0].checkInRoom();   //入住  </div><div class=\"line\">        rooms[0].bookRoom();    //预订  </div><div class=\"line\">        System.out.println(rooms[0]);  </div><div class=\"line\">        System.out.println(&quot;---------------------------&quot;);  </div><div class=\"line\">          </div><div class=\"line\">        //第二间房  </div><div class=\"line\">        rooms[1].checkInRoom();  </div><div class=\"line\">        rooms[1].bookRoom();  </div><div class=\"line\">        rooms[1].checkOutRoom();  </div><div class=\"line\">        rooms[1].bookRoom();  </div><div class=\"line\">        System.out.println(rooms[1]);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"/2016/05/03/state_design_pattern/4.png\" alt=\"\"></p>\n<h1 id=\"4总结\"><a href=\"#4总结\" class=\"headerlink\" title=\"4总结\"></a>4总结</h1><h2 id=\"1-优点\"><a href=\"#1-优点\" class=\"headerlink\" title=\"1. 优点\"></a>1. 优点</h2><ol>\n<li>封装了转换规则。 </li>\n<li>枚举可能的状态，在枚举状态之前需要确定状态种类。 </li>\n<li>将所有与某个状态有关的行为放到一个类中，并且可以方便地增加新的状态，只需要改变对象状态即可改变对象的行为。 </li>\n<li>允许状态转换逻辑与状态对象合成一体，而不是某一个巨大的条件语句块。 </li>\n<li>可以让多个环境对象共享一个状态对象，从而减少系统中对象的个数。</li>\n</ol>\n<h2 id=\"2-缺点\"><a href=\"#2-缺点\" class=\"headerlink\" title=\"2. 缺点\"></a>2. 缺点</h2><ol>\n<li>状态模式的使用必然会增加系统类和对象的个数。 </li>\n<li>状态模式的结构与实现都较为复杂，如果使用不当将导致程序结构和代码的混乱。   </li>\n<li>状态模式对“开闭原则”的支持并不太好，对于可以切换状态的状态模式，增加新的状态类需要修改那些负责状态转换的源代码，否则无法切换到新增状态；而且修改某个状态类的行为也需修改对应类的源代码。</li>\n</ol>\n<h1 id=\"五、模式适用场景\"><a href=\"#五、模式适用场景\" class=\"headerlink\" title=\"五、模式适用场景\"></a>五、模式适用场景</h1><ol>\n<li>对象的行为依赖于它的状态（属性）并且可以根据它的状态改变而改变它的相关行为。 </li>\n<li>代码中包含大量与对象状态有关的条件语句<h1 id=\"六、模式总结\"><a href=\"#六、模式总结\" class=\"headerlink\" title=\"六、模式总结\"></a>六、模式总结</h1><ol>\n<li>状态模式允许一个对象基于内部状态而拥有不同的行为。</li>\n<li>Context会将行为委托给当前状态对象。</li>\n<li>状态模式对“开闭原则”支持不是很好。</li>\n</ol>\n</li>\n</ol>\n"},{"title":"docker 时区问题，迁移数据问题","date":"2017-05-05T05:51:49.000Z","_content":"\n\n# 问题1\n```\n 项目在使用docker部署的时候，发现docke容器里面的时区和服务器的时间相差8个小时。\n 尽管使用 -v /etc/localtime:/etc/localtime 将服务器时间和容器挂载同步了，但是容器里的tomcat的时区仍然差8个小时。\n \n```\n\n# 说明\n\n```\n\n -v /etc/localtime:/etc/localtime\n    在启动的时候，使用这个命令，仅仅是将服务器和容器里系统的时间挂载了，你可能进入到容器里面再执行\n“date” 命令看到，容器里面的时间的确是更改过来了，但是容器里面的tomcat运行的环境的日期，实际上仍未更改。\n    因为我们在pull获取这个tomcat镜像的时候，这个tomcat容器的时区已经固定了，所以我们唯一的办法是在编译这个tomcat镜像的时候，就将本地服务器的时间和这个镜像绑定起来。\n\n```\n\n# 解决办法（超简单）\n\n使用dockerFile编译镜像。 Dockerfile如下\n```\n        # Pull base image  \n        FROM tomcat:latest  \n        ENV TZ=Asia/Shanghai\n        RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n  \n```\n执行如下命令\n```\n 命令格式：\n \n       $docker build -t image_name Dockerfile_path\n\n $:docker build -t timetomcat/timetomcat .\n```\n然后后边启动容器的时候，使用编译的这个tomcat即可\n\n如图\n\n![logo](timeDocker/1.png)\n\n\n\n# docker 容器迁移\n说明\n```\n\tdocker部署的服务器发生变化的时候，比如数据库，想部署到一个新的地址，这些数据迁移有很多办法：\n\t\n\t针对数据库：\n\t1  使用mysql 的主从复制备份，在项目运行期间，将mysql服务器备份到多个地址，具体请看地址：https://zhangjy520.github.io/\n\t\n\t2  使用启动mysql的时候，使用 -v 挂载 将本地的路径和容器路径绑定，然后迁移的时候将本地的路径复制到新服务器即可\n\t-v /home/mysql/master/data/db-conf:/etc/mysql/ -v /home/mysql/master/data/db-data:/var/lib/mysql\n\t\n\t3  导出mysql数据库呗，再导入到新的地址，比较low\n\t\n\t4  使用docker的容器迁移。这篇博客主要讲的是docker，这里我们主要讲讲如何使用docker迁移\n\n```\n\n\n## 解决办法（超简单） 容器迁移\n\n\nexport  /  import\n```\n\t源服务器上执行\n\t1  docker export 83271b648212 >time.tar    //导出容器，这里这个数字是容器id，会得到一个 tar压缩包\n\t\t\n\t\t解释：这个压缩包打开可以看到，其实是一个linux服务器的目录结构，这个命令将容器以及容器运行的环境打包了\n\t\n\t在目的服务器上执行\n\t2  cat time.tar | sudo docker import - time:v2  //导入容器，导入得到一个镜像，使用 带command /bin/bash  的docker run\n\t\t即可得到之前的容器包括文件\n\t\t\n\t\t\n\t启动镜像\n\t3  sudo docker run -itd --name import_test -p 8087:8080  time:v2 /bin/bash\n```\n![logo](timeDocker/2.png)\n![logo](timeDocker/3.png)\n![logo](timeDocker/4.png)\n![logo](timeDocker/5.png)\n\nsave\t/\tload\n\n```\n\t1  \tsudo docker save web > web.tar\n\t\n\t2\tsudo docker load < web.tar\n\n```","source":"_posts/timeDocker.md","raw":"###### ---\ntitle: docker 时区问题，迁移数据问题\ndate: 2017-05-05 13:51:49\ntags: docker  ubuntu\n---\n\n\n# 问题1\n```\n 项目在使用docker部署的时候，发现docke容器里面的时区和服务器的时间相差8个小时。\n 尽管使用 -v /etc/localtime:/etc/localtime 将服务器时间和容器挂载同步了，但是容器里的tomcat的时区仍然差8个小时。\n \n```\n\n# 说明\n\n```\n\n -v /etc/localtime:/etc/localtime\n    在启动的时候，使用这个命令，仅仅是将服务器和容器里系统的时间挂载了，你可能进入到容器里面再执行\n“date” 命令看到，容器里面的时间的确是更改过来了，但是容器里面的tomcat运行的环境的日期，实际上仍未更改。\n    因为我们在pull获取这个tomcat镜像的时候，这个tomcat容器的时区已经固定了，所以我们唯一的办法是在编译这个tomcat镜像的时候，就将本地服务器的时间和这个镜像绑定起来。\n\n```\n\n# 解决办法（超简单）\n\n使用dockerFile编译镜像。 Dockerfile如下\n```\n        # Pull base image  \n        FROM tomcat:latest  \n        ENV TZ=Asia/Shanghai\n        RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n  \n```\n执行如下命令\n```\n 命令格式：\n \n       $docker build -t image_name Dockerfile_path\n\n $:docker build -t timetomcat/timetomcat .\n```\n然后后边启动容器的时候，使用编译的这个tomcat即可\n\n如图\n\n![logo](timeDocker/1.png)\n\n\n\n# docker 容器迁移\n说明\n```\n\tdocker部署的服务器发生变化的时候，比如数据库，想部署到一个新的地址，这些数据迁移有很多办法：\n\t\n\t针对数据库：\n\t1  使用mysql 的主从复制备份，在项目运行期间，将mysql服务器备份到多个地址，具体请看地址：https://zhangjy520.github.io/\n\t\n\t2  使用启动mysql的时候，使用 -v 挂载 将本地的路径和容器路径绑定，然后迁移的时候将本地的路径复制到新服务器即可\n\t-v /home/mysql/master/data/db-conf:/etc/mysql/ -v /home/mysql/master/data/db-data:/var/lib/mysql\n\t\n\t3  导出mysql数据库呗，再导入到新的地址，比较low\n\t\n\t4  使用docker的容器迁移。这篇博客主要讲的是docker，这里我们主要讲讲如何使用docker迁移\n\n```\n\n\n## 解决办法（超简单） 容器迁移\n\n\nexport  /  import\n```\n\t源服务器上执行\n\t1  docker export 83271b648212 >time.tar    //导出容器，这里这个数字是容器id，会得到一个 tar压缩包\n\t\t\n\t\t解释：这个压缩包打开可以看到，其实是一个linux服务器的目录结构，这个命令将容器以及容器运行的环境打包了\n\t\n\t在目的服务器上执行\n\t2  cat time.tar | sudo docker import - time:v2  //导入容器，导入得到一个镜像，使用 带command /bin/bash  的docker run\n\t\t即可得到之前的容器包括文件\n\t\t\n\t\t\n\t启动镜像\n\t3  sudo docker run -itd --name import_test -p 8087:8080  time:v2 /bin/bash\n```\n![logo](timeDocker/2.png)\n![logo](timeDocker/3.png)\n![logo](timeDocker/4.png)\n![logo](timeDocker/5.png)\n\nsave\t/\tload\n\n```\n\t1  \tsudo docker save web > web.tar\n\t\n\t2\tsudo docker load < web.tar\n\n```","slug":"timeDocker","published":1,"updated":"2017-07-19T10:40:28.618Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58erf001dawpfs2tjyvoq","content":"<h1 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">项目在使用docker部署的时候，发现docke容器里面的时区和服务器的时间相差8个小时。</div><div class=\"line\">尽管使用 -v /etc/localtime:/etc/localtime 将服务器时间和容器挂载同步了，但是容器里的tomcat的时区仍然差8个小时。</div></pre></td></tr></table></figure>\n<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"> -v /etc/localtime:/etc/localtime</div><div class=\"line\">    在启动的时候，使用这个命令，仅仅是将服务器和容器里系统的时间挂载了，你可能进入到容器里面再执行</div><div class=\"line\">“date” 命令看到，容器里面的时间的确是更改过来了，但是容器里面的tomcat运行的环境的日期，实际上仍未更改。</div><div class=\"line\">    因为我们在pull获取这个tomcat镜像的时候，这个tomcat容器的时区已经固定了，所以我们唯一的办法是在编译这个tomcat镜像的时候，就将本地服务器的时间和这个镜像绑定起来。</div></pre></td></tr></table></figure>\n<h1 id=\"解决办法（超简单）\"><a href=\"#解决办法（超简单）\" class=\"headerlink\" title=\"解决办法（超简单）\"></a>解决办法（超简单）</h1><p>使用dockerFile编译镜像。 Dockerfile如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Pull base image  </div><div class=\"line\">FROM tomcat:latest  </div><div class=\"line\">ENV TZ=Asia/Shanghai</div><div class=\"line\">RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone</div></pre></td></tr></table></figure></p>\n<p>执行如下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令格式：</div><div class=\"line\"></div><div class=\"line\">      $docker build -t image_name Dockerfile_path</div><div class=\"line\"></div><div class=\"line\">$:docker build -t timetomcat/timetomcat .</div></pre></td></tr></table></figure></p>\n<p>然后后边启动容器的时候，使用编译的这个tomcat即可</p>\n<p>如图</p>\n<p><img src=\"/2017/05/05/timeDocker/1.png\" alt=\"logo\"></p>\n<h1 id=\"docker-容器迁移\"><a href=\"#docker-容器迁移\" class=\"headerlink\" title=\"docker 容器迁移\"></a>docker 容器迁移</h1><p>说明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker部署的服务器发生变化的时候，比如数据库，想部署到一个新的地址，这些数据迁移有很多办法：</div><div class=\"line\"></div><div class=\"line\">针对数据库：</div><div class=\"line\">1  使用mysql 的主从复制备份，在项目运行期间，将mysql服务器备份到多个地址，具体请看地址：https://zhangjy520.github.io/</div><div class=\"line\"></div><div class=\"line\">2  使用启动mysql的时候，使用 -v 挂载 将本地的路径和容器路径绑定，然后迁移的时候将本地的路径复制到新服务器即可</div><div class=\"line\">-v /home/mysql/master/data/db-conf:/etc/mysql/ -v /home/mysql/master/data/db-data:/var/lib/mysql</div><div class=\"line\"></div><div class=\"line\">3  导出mysql数据库呗，再导入到新的地址，比较low</div><div class=\"line\"></div><div class=\"line\">4  使用docker的容器迁移。这篇博客主要讲的是docker，这里我们主要讲讲如何使用docker迁移</div></pre></td></tr></table></figure></p>\n<h2 id=\"解决办法（超简单）-容器迁移\"><a href=\"#解决办法（超简单）-容器迁移\" class=\"headerlink\" title=\"解决办法（超简单） 容器迁移\"></a>解决办法（超简单） 容器迁移</h2><p>export  /  import<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">源服务器上执行</div><div class=\"line\">1  docker export 83271b648212 &gt;time.tar    //导出容器，这里这个数字是容器id，会得到一个 tar压缩包</div><div class=\"line\">\t</div><div class=\"line\">\t解释：这个压缩包打开可以看到，其实是一个linux服务器的目录结构，这个命令将容器以及容器运行的环境打包了</div><div class=\"line\"></div><div class=\"line\">在目的服务器上执行</div><div class=\"line\">2  cat time.tar | sudo docker import - time:v2  //导入容器，导入得到一个镜像，使用 带command /bin/bash  的docker run</div><div class=\"line\">\t即可得到之前的容器包括文件</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">启动镜像</div><div class=\"line\">3  sudo docker run -itd --name import_test -p 8087:8080  time:v2 /bin/bash</div></pre></td></tr></table></figure></p>\n<p><img src=\"/2017/05/05/timeDocker/2.png\" alt=\"logo\"><br><img src=\"/2017/05/05/timeDocker/3.png\" alt=\"logo\"><br><img src=\"/2017/05/05/timeDocker/4.png\" alt=\"logo\"><br><img src=\"/2017/05/05/timeDocker/5.png\" alt=\"logo\"></p>\n<p>save    /    load</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1  \tsudo docker save web &gt; web.tar</div><div class=\"line\"></div><div class=\"line\">2\tsudo docker load &lt; web.tar</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">项目在使用docker部署的时候，发现docke容器里面的时区和服务器的时间相差8个小时。</div><div class=\"line\">尽管使用 -v /etc/localtime:/etc/localtime 将服务器时间和容器挂载同步了，但是容器里的tomcat的时区仍然差8个小时。</div></pre></td></tr></table></figure>\n<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"> -v /etc/localtime:/etc/localtime</div><div class=\"line\">    在启动的时候，使用这个命令，仅仅是将服务器和容器里系统的时间挂载了，你可能进入到容器里面再执行</div><div class=\"line\">“date” 命令看到，容器里面的时间的确是更改过来了，但是容器里面的tomcat运行的环境的日期，实际上仍未更改。</div><div class=\"line\">    因为我们在pull获取这个tomcat镜像的时候，这个tomcat容器的时区已经固定了，所以我们唯一的办法是在编译这个tomcat镜像的时候，就将本地服务器的时间和这个镜像绑定起来。</div></pre></td></tr></table></figure>\n<h1 id=\"解决办法（超简单）\"><a href=\"#解决办法（超简单）\" class=\"headerlink\" title=\"解决办法（超简单）\"></a>解决办法（超简单）</h1><p>使用dockerFile编译镜像。 Dockerfile如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Pull base image  </div><div class=\"line\">FROM tomcat:latest  </div><div class=\"line\">ENV TZ=Asia/Shanghai</div><div class=\"line\">RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone</div></pre></td></tr></table></figure></p>\n<p>执行如下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令格式：</div><div class=\"line\"></div><div class=\"line\">      $docker build -t image_name Dockerfile_path</div><div class=\"line\"></div><div class=\"line\">$:docker build -t timetomcat/timetomcat .</div></pre></td></tr></table></figure></p>\n<p>然后后边启动容器的时候，使用编译的这个tomcat即可</p>\n<p>如图</p>\n<p><img src=\"/2017/05/05/timeDocker/1.png\" alt=\"logo\"></p>\n<h1 id=\"docker-容器迁移\"><a href=\"#docker-容器迁移\" class=\"headerlink\" title=\"docker 容器迁移\"></a>docker 容器迁移</h1><p>说明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker部署的服务器发生变化的时候，比如数据库，想部署到一个新的地址，这些数据迁移有很多办法：</div><div class=\"line\"></div><div class=\"line\">针对数据库：</div><div class=\"line\">1  使用mysql 的主从复制备份，在项目运行期间，将mysql服务器备份到多个地址，具体请看地址：https://zhangjy520.github.io/</div><div class=\"line\"></div><div class=\"line\">2  使用启动mysql的时候，使用 -v 挂载 将本地的路径和容器路径绑定，然后迁移的时候将本地的路径复制到新服务器即可</div><div class=\"line\">-v /home/mysql/master/data/db-conf:/etc/mysql/ -v /home/mysql/master/data/db-data:/var/lib/mysql</div><div class=\"line\"></div><div class=\"line\">3  导出mysql数据库呗，再导入到新的地址，比较low</div><div class=\"line\"></div><div class=\"line\">4  使用docker的容器迁移。这篇博客主要讲的是docker，这里我们主要讲讲如何使用docker迁移</div></pre></td></tr></table></figure></p>\n<h2 id=\"解决办法（超简单）-容器迁移\"><a href=\"#解决办法（超简单）-容器迁移\" class=\"headerlink\" title=\"解决办法（超简单） 容器迁移\"></a>解决办法（超简单） 容器迁移</h2><p>export  /  import<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">源服务器上执行</div><div class=\"line\">1  docker export 83271b648212 &gt;time.tar    //导出容器，这里这个数字是容器id，会得到一个 tar压缩包</div><div class=\"line\">\t</div><div class=\"line\">\t解释：这个压缩包打开可以看到，其实是一个linux服务器的目录结构，这个命令将容器以及容器运行的环境打包了</div><div class=\"line\"></div><div class=\"line\">在目的服务器上执行</div><div class=\"line\">2  cat time.tar | sudo docker import - time:v2  //导入容器，导入得到一个镜像，使用 带command /bin/bash  的docker run</div><div class=\"line\">\t即可得到之前的容器包括文件</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">启动镜像</div><div class=\"line\">3  sudo docker run -itd --name import_test -p 8087:8080  time:v2 /bin/bash</div></pre></td></tr></table></figure></p>\n<p><img src=\"/2017/05/05/timeDocker/2.png\" alt=\"logo\"><br><img src=\"/2017/05/05/timeDocker/3.png\" alt=\"logo\"><br><img src=\"/2017/05/05/timeDocker/4.png\" alt=\"logo\"><br><img src=\"/2017/05/05/timeDocker/5.png\" alt=\"logo\"></p>\n<p>save    /    load</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1  \tsudo docker save web &gt; web.tar</div><div class=\"line\"></div><div class=\"line\">2\tsudo docker load &lt; web.tar</div></pre></td></tr></table></figure>"},{"title":"使用CountDownLatch实现多线程同步","author":"zjy","date":"2018-09-20T05:32:40.000Z","_content":"## 大批量数据处理–分批多线程\n\t需求：如果有一批大量的数据需要处理，单线程显然会显得很慢，我们把这一大批数据分为多个小批，然后多线程同步处理， \n    并等所有子线程都处理完毕之后再继续执行下面的操作。使用CountDownLatch。\n    \n## 原理\n\t利用 \n     new CountDownLatch(100);//给定count初始值100\n     CountDownLatch.await();//如果count不为0，则会阻塞当前线程，为0，当前线程继续执行\n     CountDownLatch.countDown();//调用一次，count--;\n     每个子线程执行完毕调用减一方法，主线程使用await等待。最终所有子线程执行完毕，主线程继续执行\n     \n## 代码如下\n\t\tpackage com.jbns.easymaster.service.report.util;\n\n        import java.util.Random;\n        import java.util.concurrent.CountDownLatch;\n        import java.util.concurrent.ExecutorService;\n        import java.util.concurrent.Executors;\n        import java.util.concurrent.TimeUnit;\n\n        public class ThreadUtil {\n            public static void main(String[] args) {\n                ExecutorService executor = Executors.newCachedThreadPool();\n\n                CountDownLatch latch = new CountDownLatch(100);\n                long begin = System.currentTimeMillis();\n                for (int i = 0; i < 100; i++) {\n                    Worker w1 = new Worker(latch, \"\" + (i + 1) + \"\");\n                    executor.execute(w1);\n                }\n\n                //如果是当前主线程直接写latch.await.否则再起个父线程\n                /*WorkerOver workerOver = new WorkerOver(latch);\n                executor.execute(workerOver);*/\n\n                System.out.println(\"主线程在等待所有子线程处理完毕\");\n                try {\n                    latch.await();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(\"所有子线程执行完毕，继续执行主线程,耗时:\" + (System.currentTimeMillis() - begin));\n                executor.shutdown();\n            }\n        }\n\n        class WorkerOver implements Runnable {\n\n            private CountDownLatch downLatch;\n\n            public WorkerOver(CountDownLatch downLatch) {\n                this.downLatch = downLatch;\n            }\n\n            public void run() {\n                System.out.println(\"主线程在等待所有子线程处理完毕\");\n                try {\n                    this.downLatch.await();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(\"所有子线程执行完毕，继续执行主线程\");\n            }\n        }\n\n        class Worker implements Runnable {\n\n            private CountDownLatch downLatch;\n            private String name;\n\n            public Worker(CountDownLatch downLatch, String name) {\n                this.downLatch = downLatch;\n                this.name = name;\n            }\n\n            public void run() {\n                this.startWork();\n                try {\n                    //TODO 写各个子线程需要处理的业务逻辑(这里就是每条数据的具体业务处理)\n                    TimeUnit.SECONDS.sleep(new Random().nextInt(10));\n                } catch (InterruptedException ie) {\n                    ie.printStackTrace();\n                }\n                System.out.println(\"子线程:\" + this.name + \"处理完毕！\");\n                this.downLatch.countDown();\n            }\n\n            public void startWork() {\n                System.out.println(\"子线程：\" + this.name + \" ,开始处理业务逻辑!\");\n            }\n        }","source":"_posts/使用CountDownLatch实现多线程同步.md","raw":"title: 使用CountDownLatch实现多线程同步\nauthor: zjy\ndate: 2018-09-20 13:32:40\ntags:\n---\n## 大批量数据处理–分批多线程\n\t需求：如果有一批大量的数据需要处理，单线程显然会显得很慢，我们把这一大批数据分为多个小批，然后多线程同步处理， \n    并等所有子线程都处理完毕之后再继续执行下面的操作。使用CountDownLatch。\n    \n## 原理\n\t利用 \n     new CountDownLatch(100);//给定count初始值100\n     CountDownLatch.await();//如果count不为0，则会阻塞当前线程，为0，当前线程继续执行\n     CountDownLatch.countDown();//调用一次，count--;\n     每个子线程执行完毕调用减一方法，主线程使用await等待。最终所有子线程执行完毕，主线程继续执行\n     \n## 代码如下\n\t\tpackage com.jbns.easymaster.service.report.util;\n\n        import java.util.Random;\n        import java.util.concurrent.CountDownLatch;\n        import java.util.concurrent.ExecutorService;\n        import java.util.concurrent.Executors;\n        import java.util.concurrent.TimeUnit;\n\n        public class ThreadUtil {\n            public static void main(String[] args) {\n                ExecutorService executor = Executors.newCachedThreadPool();\n\n                CountDownLatch latch = new CountDownLatch(100);\n                long begin = System.currentTimeMillis();\n                for (int i = 0; i < 100; i++) {\n                    Worker w1 = new Worker(latch, \"\" + (i + 1) + \"\");\n                    executor.execute(w1);\n                }\n\n                //如果是当前主线程直接写latch.await.否则再起个父线程\n                /*WorkerOver workerOver = new WorkerOver(latch);\n                executor.execute(workerOver);*/\n\n                System.out.println(\"主线程在等待所有子线程处理完毕\");\n                try {\n                    latch.await();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(\"所有子线程执行完毕，继续执行主线程,耗时:\" + (System.currentTimeMillis() - begin));\n                executor.shutdown();\n            }\n        }\n\n        class WorkerOver implements Runnable {\n\n            private CountDownLatch downLatch;\n\n            public WorkerOver(CountDownLatch downLatch) {\n                this.downLatch = downLatch;\n            }\n\n            public void run() {\n                System.out.println(\"主线程在等待所有子线程处理完毕\");\n                try {\n                    this.downLatch.await();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(\"所有子线程执行完毕，继续执行主线程\");\n            }\n        }\n\n        class Worker implements Runnable {\n\n            private CountDownLatch downLatch;\n            private String name;\n\n            public Worker(CountDownLatch downLatch, String name) {\n                this.downLatch = downLatch;\n                this.name = name;\n            }\n\n            public void run() {\n                this.startWork();\n                try {\n                    //TODO 写各个子线程需要处理的业务逻辑(这里就是每条数据的具体业务处理)\n                    TimeUnit.SECONDS.sleep(new Random().nextInt(10));\n                } catch (InterruptedException ie) {\n                    ie.printStackTrace();\n                }\n                System.out.println(\"子线程:\" + this.name + \"处理完毕！\");\n                this.downLatch.countDown();\n            }\n\n            public void startWork() {\n                System.out.println(\"子线程：\" + this.name + \" ,开始处理业务逻辑!\");\n            }\n        }","slug":"使用CountDownLatch实现多线程同步","published":1,"updated":"2018-09-20T05:35:57.533Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58erj001gawpfeh79yehw","content":"<h2 id=\"大批量数据处理–分批多线程\"><a href=\"#大批量数据处理–分批多线程\" class=\"headerlink\" title=\"大批量数据处理–分批多线程\"></a>大批量数据处理–分批多线程</h2><pre><code>需求：如果有一批大量的数据需要处理，单线程显然会显得很慢，我们把这一大批数据分为多个小批，然后多线程同步处理， \n并等所有子线程都处理完毕之后再继续执行下面的操作。使用CountDownLatch。\n</code></pre><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><pre><code>利用 \n new CountDownLatch(100);//给定count初始值100\n CountDownLatch.await();//如果count不为0，则会阻塞当前线程，为0，当前线程继续执行\n CountDownLatch.countDown();//调用一次，count--;\n 每个子线程执行完毕调用减一方法，主线程使用await等待。最终所有子线程执行完毕，主线程继续执行\n</code></pre><h2 id=\"代码如下\"><a href=\"#代码如下\" class=\"headerlink\" title=\"代码如下\"></a>代码如下</h2><pre><code>package com.jbns.easymaster.service.report.util;\n\nimport java.util.Random;\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.TimeUnit;\n\npublic class ThreadUtil {\n    public static void main(String[] args) {\n        ExecutorService executor = Executors.newCachedThreadPool();\n\n        CountDownLatch latch = new CountDownLatch(100);\n        long begin = System.currentTimeMillis();\n        for (int i = 0; i &lt; 100; i++) {\n            Worker w1 = new Worker(latch, &quot;&quot; + (i + 1) + &quot;&quot;);\n            executor.execute(w1);\n        }\n\n        //如果是当前主线程直接写latch.await.否则再起个父线程\n        /*WorkerOver workerOver = new WorkerOver(latch);\n        executor.execute(workerOver);*/\n\n        System.out.println(&quot;主线程在等待所有子线程处理完毕&quot;);\n        try {\n            latch.await();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        System.out.println(&quot;所有子线程执行完毕，继续执行主线程,耗时:&quot; + (System.currentTimeMillis() - begin));\n        executor.shutdown();\n    }\n}\n\nclass WorkerOver implements Runnable {\n\n    private CountDownLatch downLatch;\n\n    public WorkerOver(CountDownLatch downLatch) {\n        this.downLatch = downLatch;\n    }\n\n    public void run() {\n        System.out.println(&quot;主线程在等待所有子线程处理完毕&quot;);\n        try {\n            this.downLatch.await();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        System.out.println(&quot;所有子线程执行完毕，继续执行主线程&quot;);\n    }\n}\n\nclass Worker implements Runnable {\n\n    private CountDownLatch downLatch;\n    private String name;\n\n    public Worker(CountDownLatch downLatch, String name) {\n        this.downLatch = downLatch;\n        this.name = name;\n    }\n\n    public void run() {\n        this.startWork();\n        try {\n            //TODO 写各个子线程需要处理的业务逻辑(这里就是每条数据的具体业务处理)\n            TimeUnit.SECONDS.sleep(new Random().nextInt(10));\n        } catch (InterruptedException ie) {\n            ie.printStackTrace();\n        }\n        System.out.println(&quot;子线程:&quot; + this.name + &quot;处理完毕！&quot;);\n        this.downLatch.countDown();\n    }\n\n    public void startWork() {\n        System.out.println(&quot;子线程：&quot; + this.name + &quot; ,开始处理业务逻辑!&quot;);\n    }\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"大批量数据处理–分批多线程\"><a href=\"#大批量数据处理–分批多线程\" class=\"headerlink\" title=\"大批量数据处理–分批多线程\"></a>大批量数据处理–分批多线程</h2><pre><code>需求：如果有一批大量的数据需要处理，单线程显然会显得很慢，我们把这一大批数据分为多个小批，然后多线程同步处理， \n并等所有子线程都处理完毕之后再继续执行下面的操作。使用CountDownLatch。\n</code></pre><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><pre><code>利用 \n new CountDownLatch(100);//给定count初始值100\n CountDownLatch.await();//如果count不为0，则会阻塞当前线程，为0，当前线程继续执行\n CountDownLatch.countDown();//调用一次，count--;\n 每个子线程执行完毕调用减一方法，主线程使用await等待。最终所有子线程执行完毕，主线程继续执行\n</code></pre><h2 id=\"代码如下\"><a href=\"#代码如下\" class=\"headerlink\" title=\"代码如下\"></a>代码如下</h2><pre><code>package com.jbns.easymaster.service.report.util;\n\nimport java.util.Random;\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.TimeUnit;\n\npublic class ThreadUtil {\n    public static void main(String[] args) {\n        ExecutorService executor = Executors.newCachedThreadPool();\n\n        CountDownLatch latch = new CountDownLatch(100);\n        long begin = System.currentTimeMillis();\n        for (int i = 0; i &lt; 100; i++) {\n            Worker w1 = new Worker(latch, &quot;&quot; + (i + 1) + &quot;&quot;);\n            executor.execute(w1);\n        }\n\n        //如果是当前主线程直接写latch.await.否则再起个父线程\n        /*WorkerOver workerOver = new WorkerOver(latch);\n        executor.execute(workerOver);*/\n\n        System.out.println(&quot;主线程在等待所有子线程处理完毕&quot;);\n        try {\n            latch.await();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        System.out.println(&quot;所有子线程执行完毕，继续执行主线程,耗时:&quot; + (System.currentTimeMillis() - begin));\n        executor.shutdown();\n    }\n}\n\nclass WorkerOver implements Runnable {\n\n    private CountDownLatch downLatch;\n\n    public WorkerOver(CountDownLatch downLatch) {\n        this.downLatch = downLatch;\n    }\n\n    public void run() {\n        System.out.println(&quot;主线程在等待所有子线程处理完毕&quot;);\n        try {\n            this.downLatch.await();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        System.out.println(&quot;所有子线程执行完毕，继续执行主线程&quot;);\n    }\n}\n\nclass Worker implements Runnable {\n\n    private CountDownLatch downLatch;\n    private String name;\n\n    public Worker(CountDownLatch downLatch, String name) {\n        this.downLatch = downLatch;\n        this.name = name;\n    }\n\n    public void run() {\n        this.startWork();\n        try {\n            //TODO 写各个子线程需要处理的业务逻辑(这里就是每条数据的具体业务处理)\n            TimeUnit.SECONDS.sleep(new Random().nextInt(10));\n        } catch (InterruptedException ie) {\n            ie.printStackTrace();\n        }\n        System.out.println(&quot;子线程:&quot; + this.name + &quot;处理完毕！&quot;);\n        this.downLatch.countDown();\n    }\n\n    public void startWork() {\n        System.out.println(&quot;子线程：&quot; + this.name + &quot; ,开始处理业务逻辑!&quot;);\n    }\n}\n</code></pre>"},{"title":"异构数据库同步方案1-触发器","author":"zjy","date":"2018-03-19T05:42:00.000Z","_content":"# 需求描述\n\t\t已有系统A作为基础数据提供方，有未知的一批应用app1，app2，app3.....等，需要对接到系统A的基础数据，要求数据实时异步同步，增量更新。现需要提供一套数据同步的可行性方案。\n        \n        \n# 分析\n\t\n    \t一批未知应用对接系统A，需要实时更新，系统A运行 产生的数据变更实时同步到各个应用中。\n\n# 设计1-触发器\n\t由系统A编写对接说明，具体技术实现：注解反射生成每个表对应的临时表+触发器(增删改触发器)。数据变动映射到临时表，系统A提供定时查询任务，查询各个临时表的同步状态，并推送到各个队列。第三方应用监听对应队列，各应用自行实现对应表的入库代码结构。\n    \n# 设计2-canal\n## canal介绍\n\tgithub:https://github.com/alibaba/canal\n    canal是应阿里巴巴存在杭州和美国的双机房部署，存在跨机房同步的业务需求而提出的。\n      早期，阿里巴巴B2B公司因为存在杭州和美国双机房部署，存在跨机房同步的业务需求。不过早期的数据库同步业务，主要是基于trigger的方式获取增量变更，不过从2010年开始，阿里系公司开始逐步的尝试基于数据库的日志解析，获取增量变更进行同步，由此衍生出了增量订阅&消费的业务，从此开启了一段新纪元。ps. 目前内部使用的同步，已经支持mysql5.x和Oracle部分版本的日志解析\n      \n      基于日志增量订阅&消费支持的业务：\n      \n      数据库镜像\n      数据库实时备份\n      多级索引 (卖家和买家各自分库索引)\n      search build\n      业务cache刷新\n      价格变化等重要业务消息\n      keyword：数据库同步，增量订阅&消费\n## canal 工作原理\n\n\n![canal工作原理](异构数据库同步方案1-触发器/pasted-1.png)\n\n\n## 部署canal服务端\n\n部署步骤自己百度，说下需要注意的地方：canal/conf/canal.properties\n  \n    #network config(这里改一下超时时间,接收的数据大小kb，否则课表大量数据容易报end of stream when reading header)\n    canal.instance.network.receiveBufferSize = 163840\n    canal.instance.network.sendBufferSize = 163840\n    canal.instance.network.soTimeout = 300\n\n如果客户端出现了 end of stream when reading header 错误，除了改上面的配置，可以优化修改一下客户端的batchsize，因为一次取得数据过大也可能导致这个问题。客户端代码如下：","source":"_posts/异构数据库同步方案1-触发器.md","raw":"title: 异构数据库同步方案1-触发器\nauthor: zjy\ntags: []\ncategories: []\ndate: 2018-03-19 13:42:00\n---\n# 需求描述\n\t\t已有系统A作为基础数据提供方，有未知的一批应用app1，app2，app3.....等，需要对接到系统A的基础数据，要求数据实时异步同步，增量更新。现需要提供一套数据同步的可行性方案。\n        \n        \n# 分析\n\t\n    \t一批未知应用对接系统A，需要实时更新，系统A运行 产生的数据变更实时同步到各个应用中。\n\n# 设计1-触发器\n\t由系统A编写对接说明，具体技术实现：注解反射生成每个表对应的临时表+触发器(增删改触发器)。数据变动映射到临时表，系统A提供定时查询任务，查询各个临时表的同步状态，并推送到各个队列。第三方应用监听对应队列，各应用自行实现对应表的入库代码结构。\n    \n# 设计2-canal\n## canal介绍\n\tgithub:https://github.com/alibaba/canal\n    canal是应阿里巴巴存在杭州和美国的双机房部署，存在跨机房同步的业务需求而提出的。\n      早期，阿里巴巴B2B公司因为存在杭州和美国双机房部署，存在跨机房同步的业务需求。不过早期的数据库同步业务，主要是基于trigger的方式获取增量变更，不过从2010年开始，阿里系公司开始逐步的尝试基于数据库的日志解析，获取增量变更进行同步，由此衍生出了增量订阅&消费的业务，从此开启了一段新纪元。ps. 目前内部使用的同步，已经支持mysql5.x和Oracle部分版本的日志解析\n      \n      基于日志增量订阅&消费支持的业务：\n      \n      数据库镜像\n      数据库实时备份\n      多级索引 (卖家和买家各自分库索引)\n      search build\n      业务cache刷新\n      价格变化等重要业务消息\n      keyword：数据库同步，增量订阅&消费\n## canal 工作原理\n\n\n![canal工作原理](异构数据库同步方案1-触发器/pasted-1.png)\n\n\n## 部署canal服务端\n\n部署步骤自己百度，说下需要注意的地方：canal/conf/canal.properties\n  \n    #network config(这里改一下超时时间,接收的数据大小kb，否则课表大量数据容易报end of stream when reading header)\n    canal.instance.network.receiveBufferSize = 163840\n    canal.instance.network.sendBufferSize = 163840\n    canal.instance.network.soTimeout = 300\n\n如果客户端出现了 end of stream when reading header 错误，除了改上面的配置，可以优化修改一下客户端的batchsize，因为一次取得数据过大也可能导致这个问题。客户端代码如下：","slug":"异构数据库同步方案1-触发器","published":1,"updated":"2018-05-31T06:47:25.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58erm001iawpfn8qw9ksl","content":"<h1 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h1><pre><code>已有系统A作为基础数据提供方，有未知的一批应用app1，app2，app3.....等，需要对接到系统A的基础数据，要求数据实时异步同步，增量更新。现需要提供一套数据同步的可行性方案。\n</code></pre><h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1><pre><code>一批未知应用对接系统A，需要实时更新，系统A运行 产生的数据变更实时同步到各个应用中。\n</code></pre><h1 id=\"设计1-触发器\"><a href=\"#设计1-触发器\" class=\"headerlink\" title=\"设计1-触发器\"></a>设计1-触发器</h1><pre><code>由系统A编写对接说明，具体技术实现：注解反射生成每个表对应的临时表+触发器(增删改触发器)。数据变动映射到临时表，系统A提供定时查询任务，查询各个临时表的同步状态，并推送到各个队列。第三方应用监听对应队列，各应用自行实现对应表的入库代码结构。\n</code></pre><h1 id=\"设计2-canal\"><a href=\"#设计2-canal\" class=\"headerlink\" title=\"设计2-canal\"></a>设计2-canal</h1><h2 id=\"canal介绍\"><a href=\"#canal介绍\" class=\"headerlink\" title=\"canal介绍\"></a>canal介绍</h2><pre><code>github:https://github.com/alibaba/canal\ncanal是应阿里巴巴存在杭州和美国的双机房部署，存在跨机房同步的业务需求而提出的。\n  早期，阿里巴巴B2B公司因为存在杭州和美国双机房部署，存在跨机房同步的业务需求。不过早期的数据库同步业务，主要是基于trigger的方式获取增量变更，不过从2010年开始，阿里系公司开始逐步的尝试基于数据库的日志解析，获取增量变更进行同步，由此衍生出了增量订阅&amp;消费的业务，从此开启了一段新纪元。ps. 目前内部使用的同步，已经支持mysql5.x和Oracle部分版本的日志解析\n\n  基于日志增量订阅&amp;消费支持的业务：\n\n  数据库镜像\n  数据库实时备份\n  多级索引 (卖家和买家各自分库索引)\n  search build\n  业务cache刷新\n  价格变化等重要业务消息\n  keyword：数据库同步，增量订阅&amp;消费\n</code></pre><h2 id=\"canal-工作原理\"><a href=\"#canal-工作原理\" class=\"headerlink\" title=\"canal 工作原理\"></a>canal 工作原理</h2><p><img src=\"/2018/03/19/异构数据库同步方案1-触发器/pasted-1.png\" alt=\"canal工作原理\"></p>\n<h2 id=\"部署canal服务端\"><a href=\"#部署canal服务端\" class=\"headerlink\" title=\"部署canal服务端\"></a>部署canal服务端</h2><p>部署步骤自己百度，说下需要注意的地方：canal/conf/canal.properties</p>\n<pre><code>#network config(这里改一下超时时间,接收的数据大小kb，否则课表大量数据容易报end of stream when reading header)\ncanal.instance.network.receiveBufferSize = 163840\ncanal.instance.network.sendBufferSize = 163840\ncanal.instance.network.soTimeout = 300\n</code></pre><p>如果客户端出现了 end of stream when reading header 错误，除了改上面的配置，可以优化修改一下客户端的batchsize，因为一次取得数据过大也可能导致这个问题。客户端代码如下：</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h1><pre><code>已有系统A作为基础数据提供方，有未知的一批应用app1，app2，app3.....等，需要对接到系统A的基础数据，要求数据实时异步同步，增量更新。现需要提供一套数据同步的可行性方案。\n</code></pre><h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1><pre><code>一批未知应用对接系统A，需要实时更新，系统A运行 产生的数据变更实时同步到各个应用中。\n</code></pre><h1 id=\"设计1-触发器\"><a href=\"#设计1-触发器\" class=\"headerlink\" title=\"设计1-触发器\"></a>设计1-触发器</h1><pre><code>由系统A编写对接说明，具体技术实现：注解反射生成每个表对应的临时表+触发器(增删改触发器)。数据变动映射到临时表，系统A提供定时查询任务，查询各个临时表的同步状态，并推送到各个队列。第三方应用监听对应队列，各应用自行实现对应表的入库代码结构。\n</code></pre><h1 id=\"设计2-canal\"><a href=\"#设计2-canal\" class=\"headerlink\" title=\"设计2-canal\"></a>设计2-canal</h1><h2 id=\"canal介绍\"><a href=\"#canal介绍\" class=\"headerlink\" title=\"canal介绍\"></a>canal介绍</h2><pre><code>github:https://github.com/alibaba/canal\ncanal是应阿里巴巴存在杭州和美国的双机房部署，存在跨机房同步的业务需求而提出的。\n  早期，阿里巴巴B2B公司因为存在杭州和美国双机房部署，存在跨机房同步的业务需求。不过早期的数据库同步业务，主要是基于trigger的方式获取增量变更，不过从2010年开始，阿里系公司开始逐步的尝试基于数据库的日志解析，获取增量变更进行同步，由此衍生出了增量订阅&amp;消费的业务，从此开启了一段新纪元。ps. 目前内部使用的同步，已经支持mysql5.x和Oracle部分版本的日志解析\n\n  基于日志增量订阅&amp;消费支持的业务：\n\n  数据库镜像\n  数据库实时备份\n  多级索引 (卖家和买家各自分库索引)\n  search build\n  业务cache刷新\n  价格变化等重要业务消息\n  keyword：数据库同步，增量订阅&amp;消费\n</code></pre><h2 id=\"canal-工作原理\"><a href=\"#canal-工作原理\" class=\"headerlink\" title=\"canal 工作原理\"></a>canal 工作原理</h2><p><img src=\"/2018/03/19/异构数据库同步方案1-触发器/pasted-1.png\" alt=\"canal工作原理\"></p>\n<h2 id=\"部署canal服务端\"><a href=\"#部署canal服务端\" class=\"headerlink\" title=\"部署canal服务端\"></a>部署canal服务端</h2><p>部署步骤自己百度，说下需要注意的地方：canal/conf/canal.properties</p>\n<pre><code>#network config(这里改一下超时时间,接收的数据大小kb，否则课表大量数据容易报end of stream when reading header)\ncanal.instance.network.receiveBufferSize = 163840\ncanal.instance.network.sendBufferSize = 163840\ncanal.instance.network.soTimeout = 300\n</code></pre><p>如果客户端出现了 end of stream when reading header 错误，除了改上面的配置，可以优化修改一下客户端的batchsize，因为一次取得数据过大也可能导致这个问题。客户端代码如下：</p>\n"},{"title":"怎样为我的博客添加图片","author":"zjy","date":"2018-05-09T02:04:42.000Z","_content":"# 当前可能是最笨的方法\n\n1 admin 的settings下面设置图片的上传地址\n\n![upload successful](怎样为我的博客添加图片/1.png)\n\n2 直接复制粘贴到markdown编辑器。会得到如下格式的一串代码\n\t\n\t![upload_successful](paste/pasted-0.png)\n   \n   将这串代码改成\n   \n\t![attr](你的博客标题/pasted-0.png)\n    \n然后在服务器后台/home/git_hub/blog/zjy/source/paste能看到这个图片 paste-*.png\n\n3 在/home/git_hub/blog/zjy/source/_posts目录下新建和你的博客名字一模一样的文件夹，将图片拷贝进去\n\t使用 \n\t\n    ![logo](你的博客标题/pasted-0.png)\n   即可访问复制的图片\n   \n# 注意前面不要有斜杠！！！！","source":"_posts/怎样为我的博客添加图片.md","raw":"title: 怎样为我的博客添加图片\nauthor: zjy\ndate: 2018-05-09 10:04:42\ntags:\n---\n# 当前可能是最笨的方法\n\n1 admin 的settings下面设置图片的上传地址\n\n![upload successful](怎样为我的博客添加图片/1.png)\n\n2 直接复制粘贴到markdown编辑器。会得到如下格式的一串代码\n\t\n\t![upload_successful](paste/pasted-0.png)\n   \n   将这串代码改成\n   \n\t![attr](你的博客标题/pasted-0.png)\n    \n然后在服务器后台/home/git_hub/blog/zjy/source/paste能看到这个图片 paste-*.png\n\n3 在/home/git_hub/blog/zjy/source/_posts目录下新建和你的博客名字一模一样的文件夹，将图片拷贝进去\n\t使用 \n\t\n    ![logo](你的博客标题/pasted-0.png)\n   即可访问复制的图片\n   \n# 注意前面不要有斜杠！！！！","slug":"怎样为我的博客添加图片","published":1,"updated":"2018-05-31T06:46:20.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58ern001kawpfdkfrg25s","content":"<h1 id=\"当前可能是最笨的方法\"><a href=\"#当前可能是最笨的方法\" class=\"headerlink\" title=\"当前可能是最笨的方法\"></a>当前可能是最笨的方法</h1><p>1 admin 的settings下面设置图片的上传地址</p>\n<p><img src=\"/2018/05/09/怎样为我的博客添加图片/1.png\" alt=\"upload successful\"></p>\n<p>2 直接复制粘贴到markdown编辑器。会得到如下格式的一串代码</p>\n<pre><code>![upload_successful](paste/pasted-0.png)\n</code></pre><p>   将这串代码改成</p>\n<pre><code>![attr](你的博客标题/pasted-0.png)\n</code></pre><p>然后在服务器后台/home/git_hub/blog/zjy/source/paste能看到这个图片 paste-*.png</p>\n<p>3 在/home/git_hub/blog/zjy/source/_posts目录下新建和你的博客名字一模一样的文件夹，将图片拷贝进去<br>    使用 </p>\n<pre><code>![logo](你的博客标题/pasted-0.png)\n</code></pre><p>   即可访问复制的图片</p>\n<h1 id=\"注意前面不要有斜杠！！！！\"><a href=\"#注意前面不要有斜杠！！！！\" class=\"headerlink\" title=\"注意前面不要有斜杠！！！！\"></a>注意前面不要有斜杠！！！！</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"当前可能是最笨的方法\"><a href=\"#当前可能是最笨的方法\" class=\"headerlink\" title=\"当前可能是最笨的方法\"></a>当前可能是最笨的方法</h1><p>1 admin 的settings下面设置图片的上传地址</p>\n<p><img src=\"/2018/05/09/怎样为我的博客添加图片/1.png\" alt=\"upload successful\"></p>\n<p>2 直接复制粘贴到markdown编辑器。会得到如下格式的一串代码</p>\n<pre><code>![upload_successful](paste/pasted-0.png)\n</code></pre><p>   将这串代码改成</p>\n<pre><code>![attr](你的博客标题/pasted-0.png)\n</code></pre><p>然后在服务器后台/home/git_hub/blog/zjy/source/paste能看到这个图片 paste-*.png</p>\n<p>3 在/home/git_hub/blog/zjy/source/_posts目录下新建和你的博客名字一模一样的文件夹，将图片拷贝进去<br>    使用 </p>\n<pre><code>![logo](你的博客标题/pasted-0.png)\n</code></pre><p>   即可访问复制的图片</p>\n<h1 id=\"注意前面不要有斜杠！！！！\"><a href=\"#注意前面不要有斜杠！！！！\" class=\"headerlink\" title=\"注意前面不要有斜杠！！！！\"></a>注意前面不要有斜杠！！！！</h1>"},{"title":"批处理脚本初识","author":"zjy","date":"2018-05-08T08:05:52.000Z","_content":"title: 批处理脚本初识\nauthor: zjy\ndate: 2018-05-08 16:05:52\ntags:\n---\n# 需求：删除定义的路径下的所有文件+文件夹\n\n# 代码如下\n## 配置文件 reload.txt内容如下\n\tD:\\jar\\com\\jbns\n    D:\\jar\\org\n## 批处理文件 package.bat内容如下\n\t@echo off & setlocal enabledelayedexpansion\n    set i=0\n    for /f \"eol=/delims=\" %%b in (%cd%\\reload.txt) do ( \n        echo %%b \n        rd /q /s %%b\n        set /a \"bds[!i!]=%%b\",i=i+1\n    ) \n    mvn clean package & pause\n    \n    \n## 解释\n\t读取reload.txt文件，并且逐行删除该文件夹下的所有文件。之后进行mvn clean package的时候\n    会自动去重新下载私服上最新的jar包。\n    \n    注意：批处理文件或者shell脚本或者python文件，在 = 赋值的时候，注意等号左右的空格。\n    其中 %cd% 是当前的路径值\n    \n    注意：package.bat,pom.xml,reload.txt文件的路径\n    \n## 项目文件结构\n![logo](批处理脚本初识/jiegou.png)\n\n### 最后附上pom.xml内容\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n      <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n          <modelVersion>4.0.0</modelVersion>\n\n          <groupId>com.jbns</groupId>\n          <artifactId>EIM</artifactId>\n          <packaging>war</packaging>\n          <version>1.0-SNAPSHOT</version>\n\n          <properties>\n              <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n              <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n              <jbns.version>1.0</jbns.version>\n              <java.version>1.7</java.version>\n          </properties>\n\n          <dependencies>\n              <dependency>\n                  <groupId>junit</groupId>\n                  <artifactId>junit</artifactId>\n                  <version>3.8.1</version>\n                  <scope>test</scope>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-engine</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-bpmn-model</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-bpmn-converter</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-image-generator</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-process-validation</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-spring</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-beans</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.springframework</groupId>\n                  <artifactId>spring-aop</artifactId>\n                  <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-expression</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.springframework</groupId>\n                  <artifactId>spring-jdbc</artifactId>\n                  <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.springframework</groupId>\n                  <artifactId>spring-tx</artifactId>\n                  <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.codehaus.groovy</groupId>\n                <artifactId>groovy-all</artifactId>\n                <version>2.4.3</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-pool</groupId>\n                <artifactId>commons-pool</artifactId>\n                <version>1.6</version>\n              </dependency>\n              <!-- dependency>\n                  <groupId>org.apache</groupId>\n                  <artifactId>commons.dbcp</artifactId>\n                  <version>1.2.1</version>\n              </dependency -->\n              <dependency>\n                <groupId>commons-logging</groupId>\n                <artifactId>commons-logging</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>3.6</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-annotations</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.slf4j</groupId>\n                  <artifactId>slf4j-api</artifactId>\n                  <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>redis.clients</groupId>\n                <artifactId>jedis</artifactId>\n                <version>2.9.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework.data</groupId>\n                <artifactId>spring-data-redis</artifactId>\n                <version>1.8.8.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework.data</groupId>\n                <artifactId>spring-data-keyvalue</artifactId>\n                <version>1.2.8.RELEASE</version>\n              </dependency>\n                      <dependency>\n                <groupId>org.springframework.data</groupId>\n                <artifactId>spring-data-commons</artifactId>\n                <version>1.13.8.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>druid</artifactId>\n                <version>1.1.5</version>\n              </dependency>\n              <dependency>\n                <groupId>org.mybatis</groupId>\n                <artifactId>mybatis</artifactId>\n                <version>3.4.5</version>\n              </dependency>\n              <dependency>\n                <groupId>org.mybatis</groupId>\n                <artifactId>mybatis-spring</artifactId>\n                <version>1.3.1</version>\n              </dependency>\n              <dependency>\n                <groupId>com.github.pagehelper</groupId>\n                <artifactId>pagehelper</artifactId>\n                <version>5.0.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>net.sf.jsqlparser</groupId>\n                  <artifactId>jsqlparser</artifactId>\n                  <version>0.9.5</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.apache.empire-db</groupId>\n                  <artifactId>empire-db</artifactId>\n                  <version>2.4.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>net.sf.json-lib</groupId>\n                  <artifactId>json-lib</artifactId>\n                  <version>2.4</version>\n                  <classifier>jdk15</classifier>\n              </dependency>\n              <dependency>\n                  <groupId>wsdl4j</groupId>\n                  <artifactId>wsdl4j</artifactId>\n                  <version>1.6.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>dom4j</groupId>\n                  <artifactId>dom4j</artifactId>\n                  <version>1.6.1</version>\n                  <exclusions>  \n                       <exclusion>  \n                           <groupId>xml-apis</groupId>  \n                           <artifactId>xml-apis</artifactId>  \n                       </exclusion>  \n                  </exclusions> \n              </dependency>\n              <dependency>\n                <groupId>axis</groupId>\n                <artifactId>axis_webservice</artifactId>\n                <version>1.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.quartz-scheduler</groupId>\n                <artifactId>quartz</artifactId>\n                <version>2.3.0</version>\n              </dependency>\n              <dependency>\n                <groupId>com.google.code.gson</groupId>\n                <artifactId>gson</artifactId>\n                <version>2.8.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-web</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.aspectj</groupId>\n                <artifactId>aspectjweaver</artifactId>\n                <version>1.8.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.beanshell</groupId>\n                <artifactId>bsh</artifactId>\n                <version>2.0b4</version>\n              </dependency>\n              <dependency>\n                <groupId>org.freemarker</groupId>\n                <artifactId>freemarker</artifactId>\n                <version>2.3.21</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-all</artifactId>\n                <version>1.3.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.ant</groupId>\n                <artifactId>ant</artifactId>\n                <version>1.10.1</version>\n              </dependency>\n              <dependency>\n                <groupId>aopalliance</groupId>\n                <artifactId>aopalliance</artifactId>\n                <version>1.0</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml</groupId>\n                <artifactId>classmate</artifactId>\n                <version>1.3.1</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-fileupload</groupId>\n                <artifactId>commons-fileupload</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.sun</groupId>\n                  <artifactId>comm</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-beanutils</groupId>\n                <artifactId>commons-beanutils</artifactId>\n                <version>1.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-codec</groupId>\n                <artifactId>commons-codec</artifactId>\n                <version>1.10</version>\n              </dependency>\n              <dependency>\n                  <groupId>commons-collections</groupId>\n                  <artifactId>commons-collections</artifactId>\n                  <version>3.2.1</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-digester</groupId>\n                <artifactId>commons-digester</artifactId>\n                <version>2.0</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-discovery</groupId>\n                <artifactId>commons-discovery</artifactId>\n                <version>0.5</version>\n              </dependency>\n              <dependency>\n                  <groupId>commons-io</groupId>\n                  <artifactId>commons-io</artifactId>\n                  <version>2.4</version>\n              </dependency>\n              <dependency>\n                  <groupId>commons-lang</groupId>\n                  <artifactId>commons-lang</artifactId>\n                  <version>2.6</version>\n              </dependency>\n              <dependency>\n                  <groupId>commons-net</groupId>\n                  <artifactId>commons-net</artifactId>\n                  <version>3.5</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-pool2</artifactId>\n                <version>2.4.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>cxf</groupId>\n                  <artifactId>cxf</artifactId>\n                  <version>2.6.16</version>\n              </dependency>\n              <dependency>\n                <groupId>net.sf.ezmorph</groupId>\n                <artifactId>ezmorph</artifactId>\n                <version>1.0.6</version>\n              </dependency>\n              <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>fastjson</artifactId>\n                <version>1.2.40</version>\n              </dependency>\n              <dependency>\n                <groupId>ch.ethz.ganymed</groupId>\n                <artifactId>ganymed-ssh2</artifactId>\n                <version>262</version>\n              </dependency>\n              <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>18.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpclient</artifactId>\n                <version>4.5.4</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpcore</artifactId>\n                <version>4.4.7</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpmime</artifactId>\n                <version>4.4.1</version>\n              </dependency>\n              <dependency>\n                <groupId>com.itextpdf</groupId>\n                <artifactId>itextpdf</artifactId>\n                <version>5.5.10</version>\n              </dependency>\n              <dependency>\n                <groupId>com.itextpdf</groupId>\n                <artifactId>itext-pdfa</artifactId>\n                <version>5.5.10</version>\n              </dependency>\n              <dependency>\n                <groupId>com.itextpdf</groupId>\n                <artifactId>itext-xtra</artifactId>\n                <version>5.5.10</version>\n                <exclusions>  \n                   <exclusion>  \n                       <groupId>org.apache.commons</groupId>  \n                       <artifactId>commons-imaging</artifactId>  \n                   </exclusion>  \n                </exclusions> \n              </dependency>\n              <dependency>\n                <groupId>org.codehaus.jackson</groupId>\n                <artifactId>jackson-core-asl</artifactId>\n                <version>1.9.13</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.dataformat</groupId>\n                <artifactId>jackson-dataformat-xml</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.codehaus.jackson</groupId>\n                <artifactId>jackson-mapper-asl</artifactId>\n                <version>1.9.13</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.module</groupId>\n                <artifactId>jackson-module-jaxb-annotations</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml.bind</groupId>\n                <artifactId>jaxb-api</artifactId>\n                <version>2.3.0</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml</groupId>\n                <artifactId>jaxb-impl</artifactId>\n                <version>2.1</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml</groupId>\n                <artifactId>jaxb-xjc</artifactId>\n                <version>2.0EA3</version>\n              </dependency>\n              <dependency>\n                <groupId>org.jdom</groupId>\n                <artifactId>jaxen-core</artifactId>\n                <version>1.0-FCS</version>\n              </dependency>\n              <dependency>\n                <groupId>org.jdom</groupId>\n                <artifactId>jaxen-jdom</artifactId>\n                <version>1.0-FCS</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml.ws</groupId>\n                <artifactId>jaxws-api</artifactId>\n                <version>2.1</version>\n              </dependency>\n              <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jcl-over-slf4j</artifactId>\n                <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>org.jdom</groupId>\n                <artifactId>jdom</artifactId>\n                <version>1.1</version>\n              </dependency>\n              <dependency>\n                  <groupId>joda-time</groupId>\n                  <artifactId>joda-time</artifactId>\n                  <version>2.9.9</version>\n              </dependency>\n              <dependency>\n                  <groupId>json</groupId>\n                  <artifactId>json</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.servlet</groupId>\n                <artifactId>jstl</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jul-to-slf4j</artifactId>\n                <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>log4j</groupId>\n                <artifactId>log4j</artifactId>\n                <version>1.2.17</version>\n              </dependency>\n              <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>log4j-over-slf4j</artifactId>\n                <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-classic</artifactId>\n                <version>1.1.7</version>\n              </dependency>\n              <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-core</artifactId>\n                <version>1.1.7</version>\n              </dependency>\n              <dependency>\n                <groupId>org.logback-extensions</groupId>\n                <artifactId>logback-ext-spring</artifactId>\n                <version>0.1.4</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.sun</groupId>\n                  <artifactId>mail</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                <groupId>org.mapstruct</groupId>\n                <artifactId>mapstruct</artifactId>\n                <version>1.0.0.Final</version>\n              </dependency>\n              <dependency>\n                <groupId>net.percederberg.mibble</groupId>\n                <artifactId>mibble-mibs</artifactId>\n                <version>2.9.3</version>\n              </dependency>\n              <dependency>\n                <groupId>net.percederberg.mibble</groupId>\n                <artifactId>mibble-parser</artifactId>\n                <version>2.9.3</version>\n              </dependency>\n              <dependency>\n                <groupId>gephi.toolkit</groupId>\n                <artifactId>gephi-toolkit</artifactId>\n                <version>${jbns.version}</version>\n              </dependency>\n              <!-- dependency>\n                  <groupId>multiTenancy</groupId>\n                  <artifactId>multiTenancy</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency -->\n              <dependency>\n                <groupId>mysql</groupId>\n                <artifactId>mysql-connector-java</artifactId>\n                <version>5.1.25</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.neethi</groupId>\n                <artifactId>neethi</artifactId>\n                <version>3.0.1</version>\n              </dependency>\n              <dependency>\n                <groupId>com.belerweb</groupId>\n                <artifactId>pinyin4j</artifactId>\n                <version>2.5.1</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi</artifactId>\n                <version>3.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi-contrib</artifactId>\n                <version>3.2-FINAL</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi-ooxml</artifactId>\n                <version>3.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi-ooxml-schemas</artifactId>\n                <version>3.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi-scratchpad</artifactId>\n                <version>3.1-FINAL</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml.soap</groupId>\n                <artifactId>saaj-api</artifactId>\n                <version>1.3.5</version>\n              </dependency>\n              <dependency>\n                <groupId>com.sun.xml.messaging.saaj</groupId>\n                <artifactId>saaj-impl</artifactId>\n                <version>1.4.0</version>\n              </dependency>\n              <dependency>\n                <groupId>saxpath</groupId>\n                <artifactId>saxpath</artifactId>\n                <version>1.0-FCS</version>\n              </dependency>\n              <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>log4j-over-slf4j</artifactId>\n                <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>org.snmp4j</groupId>\n                <artifactId>snmp4j</artifactId>\n                <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-context</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-core</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>io.springfox</groupId>\n                <artifactId>springfox-schema</artifactId>\n                <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                <groupId>io.springfox</groupId>\n                <artifactId>springfox-spi</artifactId>\n                <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                <groupId>io.springfox</groupId>\n                <artifactId>springfox-spring-web</artifactId>\n                <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>io.springfox</groupId>\n                  <artifactId>springfox-swagger2</artifactId>\n                  <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>io.springfox</groupId>\n                  <artifactId>springfox-swagger-common</artifactId>\n                  <version>2.5.0</version>\n              </dependency>\n              <!--需要用自己的-->\n              <dependency>\n                  <groupId>io.springfox</groupId>\n                  <artifactId>springfox-swagger-ui</artifactId>\n                  <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-jdbc</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-orm</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework.plugin</groupId>\n                <artifactId>spring-plugin-core</artifactId>\n                <version>1.2.0.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework.plugin</groupId>\n                <artifactId>spring-plugin-metadata</artifactId>\n                <version>1.2.0.RELEASE</version>\n              </dependency>\n              <!-- dependency>\n                  <groupId>spring-security-config</groupId>\n                  <artifactId>spring-security-config</artifactId>\n                  <version>3.2.10.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>spring-security-core</groupId>\n                  <artifactId>spring-security-core</artifactId>\n                  <version>3.2.10.RELEASE</version>\n              </dependency\n              <dependency>\n                  <groupId>spring-security-oauth2</groupId>\n                  <artifactId>spring-security-oauth2</artifactId>\n                  <version>2.1.0.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>spring-security-web</groupId>\n                  <artifactId>spring-security-web</artifactId>\n                  <version>3.2.10.RELEASE</version>\n              </dependency -->\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-test</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-webmvc</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <!--dependency>\n                  <groupId>sqljdbc4</groupId>\n                  <artifactId>sqljdbc4</artifactId>\n                  <version>4.0.2206.100</version>\n              </dependency-->\n              <dependency>\n                <groupId>io.swagger</groupId>\n                <artifactId>swagger-annotations</artifactId>\n                <version>1.5.9</version>\n              </dependency>\n              <dependency>\n                <groupId>io.swagger</groupId>\n                <artifactId>swagger-models</artifactId>\n                <version>1.5.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-api</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-autotag-core-runtime</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-core</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-jsp</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-request-api</artifactId>\n                <version>1.0.6</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-request-jsp</artifactId>\n                <version>1.0.6</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-request-servlet</artifactId>\n                <version>1.0.6</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-servlet</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-template</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.baidu</groupId>\n                  <artifactId>ueditor</artifactId>\n                  <version>1.1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.validation</groupId>\n                <artifactId>validation-api</artifactId>\n                <version>1.1.0.Final</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.apache</groupId>\n                  <artifactId>wss4j</artifactId>\n                  <version>1.6.4</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.xmlbeans</groupId>\n                <artifactId>xmlbeans</artifactId>\n                <version>2.6.0</version>\n              </dependency>\n              <dependency>\n                <groupId>xml-resolver</groupId>\n                <artifactId>xml-resolver</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.ws.xmlschema</groupId>\n                <artifactId>xmlschema-core</artifactId>\n                <version>2.0.1</version>\n              </dependency>\n              <dependency>\n                <groupId>com.itextpdf.tool</groupId>\n                <artifactId>xmlworker</artifactId>\n                <version>5.5.6</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.apache.tomcat</groupId>\n                  <artifactId>servlet-api</artifactId>\n                  <version>${jbns.version}</version>\n                  <scope>provided</scope>\n              </dependency>\n              <dependency>\n                  <groupId>org.apache.tomcat</groupId>\n                  <artifactId>jsp-api</artifactId>\n                  <version>${jbns.version}</version>\n                  <scope>provided</scope>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>jbnshx-remote</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>sysmanager</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>solution</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>configmgr</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>easyitsm</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>EMIClient</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>EasyAlert</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>agent</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>api-logmgr</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>jxl</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>kernel</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>license</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>lms.node</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>mindterm</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>multiping</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.sinopec</groupId>\n                  <artifactId>siam-am-agent-simple</artifactId>\n                  <version>3.07.RELEASE</version>\n              </dependency>\n          </dependencies>\n          <build>\n              <finalName>${project.artifactId}</finalName>\n              <resources>\n               <resource>\n              <directory>src/main/resources</directory>\n          </resource>\n                  <resource>\n                      <directory>src/main/java</directory>\n                      <includes>\n                          <include>**/*.properties</include>\n                          <include>**/*.xml</include>\n                          <include>**/*.tld</include>\n                      </includes>\n                      <filtering>false</filtering>\n                  </resource>\n              </resources>\n              <pluginManagement>\n              <plugins>\n\n                  <!-- compiler插件, 设定JDK版本 -->\n                  <plugin>\n                      <groupId>org.apache.maven.plugins</groupId>\n                      <artifactId>maven-compiler-plugin</artifactId>\n                      <version>2.3.1</version>\n                      <configuration>\n                          <source>1.7</source>\n                          <target>1.7</target>\n                          <encoding>UTF-8</encoding>\n                          <compilerArguments>\n                              <verbose />\n                              <bootclasspath>${env.JAVA_HOME}\\jre\\lib\\rt.jar;${env.JAVA_HOME}\\jre\\lib\\jce.jar</bootclasspath>\n                          </compilerArguments>\n                      </configuration>\n                  </plugin>\n                  <plugin>\n                      <groupId>org.apache.maven.plugins</groupId>\n                      <artifactId>maven-resources-plugin</artifactId>\n                      <version>2.4.3</version>\n                      <configuration>\n                          <encoding>UTF-8</encoding>\n                      </configuration>\n                  </plugin>\n                  <!-- 将scope为system的jar包拷贝到war里面 -->\n                  <plugin>\n                      <groupId>org.apache.maven.plugins</groupId>\n                      <artifactId>maven-dependency-plugin</artifactId>\n                      <version>2.7</version>\n                      <executions>\n                          <execution>\n                              <phase>compile</phase>\n                              <goals>\n                                  <goal>copy-dependencies</goal>\n                              </goals>\n                          </execution>\n                      </executions>\n                      <configuration>\n                          <includeScope>system</includeScope>\n                          <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</outputDirectory>\n                      </configuration>\n                  </plugin>\n                  <!-- war插件, 将工程打包为war包 -->\n                  <plugin>\n                      <artifactId>maven-war-plugin</artifactId>\n                      <version>2.6</version>\n                  </plugin>\n              </plugins>\n              </pluginManagement>\n          </build>\n      </project>","source":"_posts/批处理脚本初识.md","raw":"title: 批处理脚本初识\nauthor: zjy\ndate: 2018-05-08 16:05:52\ntags:\n---\ntitle: 批处理脚本初识\nauthor: zjy\ndate: 2018-05-08 16:05:52\ntags:\n---\n# 需求：删除定义的路径下的所有文件+文件夹\n\n# 代码如下\n## 配置文件 reload.txt内容如下\n\tD:\\jar\\com\\jbns\n    D:\\jar\\org\n## 批处理文件 package.bat内容如下\n\t@echo off & setlocal enabledelayedexpansion\n    set i=0\n    for /f \"eol=/delims=\" %%b in (%cd%\\reload.txt) do ( \n        echo %%b \n        rd /q /s %%b\n        set /a \"bds[!i!]=%%b\",i=i+1\n    ) \n    mvn clean package & pause\n    \n    \n## 解释\n\t读取reload.txt文件，并且逐行删除该文件夹下的所有文件。之后进行mvn clean package的时候\n    会自动去重新下载私服上最新的jar包。\n    \n    注意：批处理文件或者shell脚本或者python文件，在 = 赋值的时候，注意等号左右的空格。\n    其中 %cd% 是当前的路径值\n    \n    注意：package.bat,pom.xml,reload.txt文件的路径\n    \n## 项目文件结构\n![logo](批处理脚本初识/jiegou.png)\n\n### 最后附上pom.xml内容\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n      <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n          <modelVersion>4.0.0</modelVersion>\n\n          <groupId>com.jbns</groupId>\n          <artifactId>EIM</artifactId>\n          <packaging>war</packaging>\n          <version>1.0-SNAPSHOT</version>\n\n          <properties>\n              <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n              <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n              <jbns.version>1.0</jbns.version>\n              <java.version>1.7</java.version>\n          </properties>\n\n          <dependencies>\n              <dependency>\n                  <groupId>junit</groupId>\n                  <artifactId>junit</artifactId>\n                  <version>3.8.1</version>\n                  <scope>test</scope>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-engine</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-bpmn-model</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-bpmn-converter</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-image-generator</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-process-validation</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.activiti</groupId>\n                  <artifactId>activiti-spring</artifactId>\n                  <version>5.21.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-beans</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.springframework</groupId>\n                  <artifactId>spring-aop</artifactId>\n                  <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-expression</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.springframework</groupId>\n                  <artifactId>spring-jdbc</artifactId>\n                  <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.springframework</groupId>\n                  <artifactId>spring-tx</artifactId>\n                  <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.codehaus.groovy</groupId>\n                <artifactId>groovy-all</artifactId>\n                <version>2.4.3</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-pool</groupId>\n                <artifactId>commons-pool</artifactId>\n                <version>1.6</version>\n              </dependency>\n              <!-- dependency>\n                  <groupId>org.apache</groupId>\n                  <artifactId>commons.dbcp</artifactId>\n                  <version>1.2.1</version>\n              </dependency -->\n              <dependency>\n                <groupId>commons-logging</groupId>\n                <artifactId>commons-logging</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>3.6</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-annotations</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.slf4j</groupId>\n                  <artifactId>slf4j-api</artifactId>\n                  <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>redis.clients</groupId>\n                <artifactId>jedis</artifactId>\n                <version>2.9.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework.data</groupId>\n                <artifactId>spring-data-redis</artifactId>\n                <version>1.8.8.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework.data</groupId>\n                <artifactId>spring-data-keyvalue</artifactId>\n                <version>1.2.8.RELEASE</version>\n              </dependency>\n                      <dependency>\n                <groupId>org.springframework.data</groupId>\n                <artifactId>spring-data-commons</artifactId>\n                <version>1.13.8.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>druid</artifactId>\n                <version>1.1.5</version>\n              </dependency>\n              <dependency>\n                <groupId>org.mybatis</groupId>\n                <artifactId>mybatis</artifactId>\n                <version>3.4.5</version>\n              </dependency>\n              <dependency>\n                <groupId>org.mybatis</groupId>\n                <artifactId>mybatis-spring</artifactId>\n                <version>1.3.1</version>\n              </dependency>\n              <dependency>\n                <groupId>com.github.pagehelper</groupId>\n                <artifactId>pagehelper</artifactId>\n                <version>5.0.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>net.sf.jsqlparser</groupId>\n                  <artifactId>jsqlparser</artifactId>\n                  <version>0.9.5</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.apache.empire-db</groupId>\n                  <artifactId>empire-db</artifactId>\n                  <version>2.4.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>net.sf.json-lib</groupId>\n                  <artifactId>json-lib</artifactId>\n                  <version>2.4</version>\n                  <classifier>jdk15</classifier>\n              </dependency>\n              <dependency>\n                  <groupId>wsdl4j</groupId>\n                  <artifactId>wsdl4j</artifactId>\n                  <version>1.6.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>dom4j</groupId>\n                  <artifactId>dom4j</artifactId>\n                  <version>1.6.1</version>\n                  <exclusions>  \n                       <exclusion>  \n                           <groupId>xml-apis</groupId>  \n                           <artifactId>xml-apis</artifactId>  \n                       </exclusion>  \n                  </exclusions> \n              </dependency>\n              <dependency>\n                <groupId>axis</groupId>\n                <artifactId>axis_webservice</artifactId>\n                <version>1.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.quartz-scheduler</groupId>\n                <artifactId>quartz</artifactId>\n                <version>2.3.0</version>\n              </dependency>\n              <dependency>\n                <groupId>com.google.code.gson</groupId>\n                <artifactId>gson</artifactId>\n                <version>2.8.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-web</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.aspectj</groupId>\n                <artifactId>aspectjweaver</artifactId>\n                <version>1.8.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.beanshell</groupId>\n                <artifactId>bsh</artifactId>\n                <version>2.0b4</version>\n              </dependency>\n              <dependency>\n                <groupId>org.freemarker</groupId>\n                <artifactId>freemarker</artifactId>\n                <version>2.3.21</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-all</artifactId>\n                <version>1.3.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.ant</groupId>\n                <artifactId>ant</artifactId>\n                <version>1.10.1</version>\n              </dependency>\n              <dependency>\n                <groupId>aopalliance</groupId>\n                <artifactId>aopalliance</artifactId>\n                <version>1.0</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml</groupId>\n                <artifactId>classmate</artifactId>\n                <version>1.3.1</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-fileupload</groupId>\n                <artifactId>commons-fileupload</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.sun</groupId>\n                  <artifactId>comm</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-beanutils</groupId>\n                <artifactId>commons-beanutils</artifactId>\n                <version>1.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-codec</groupId>\n                <artifactId>commons-codec</artifactId>\n                <version>1.10</version>\n              </dependency>\n              <dependency>\n                  <groupId>commons-collections</groupId>\n                  <artifactId>commons-collections</artifactId>\n                  <version>3.2.1</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-digester</groupId>\n                <artifactId>commons-digester</artifactId>\n                <version>2.0</version>\n              </dependency>\n              <dependency>\n                <groupId>commons-discovery</groupId>\n                <artifactId>commons-discovery</artifactId>\n                <version>0.5</version>\n              </dependency>\n              <dependency>\n                  <groupId>commons-io</groupId>\n                  <artifactId>commons-io</artifactId>\n                  <version>2.4</version>\n              </dependency>\n              <dependency>\n                  <groupId>commons-lang</groupId>\n                  <artifactId>commons-lang</artifactId>\n                  <version>2.6</version>\n              </dependency>\n              <dependency>\n                  <groupId>commons-net</groupId>\n                  <artifactId>commons-net</artifactId>\n                  <version>3.5</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-pool2</artifactId>\n                <version>2.4.2</version>\n              </dependency>\n              <dependency>\n                  <groupId>cxf</groupId>\n                  <artifactId>cxf</artifactId>\n                  <version>2.6.16</version>\n              </dependency>\n              <dependency>\n                <groupId>net.sf.ezmorph</groupId>\n                <artifactId>ezmorph</artifactId>\n                <version>1.0.6</version>\n              </dependency>\n              <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>fastjson</artifactId>\n                <version>1.2.40</version>\n              </dependency>\n              <dependency>\n                <groupId>ch.ethz.ganymed</groupId>\n                <artifactId>ganymed-ssh2</artifactId>\n                <version>262</version>\n              </dependency>\n              <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>18.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpclient</artifactId>\n                <version>4.5.4</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpcore</artifactId>\n                <version>4.4.7</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpmime</artifactId>\n                <version>4.4.1</version>\n              </dependency>\n              <dependency>\n                <groupId>com.itextpdf</groupId>\n                <artifactId>itextpdf</artifactId>\n                <version>5.5.10</version>\n              </dependency>\n              <dependency>\n                <groupId>com.itextpdf</groupId>\n                <artifactId>itext-pdfa</artifactId>\n                <version>5.5.10</version>\n              </dependency>\n              <dependency>\n                <groupId>com.itextpdf</groupId>\n                <artifactId>itext-xtra</artifactId>\n                <version>5.5.10</version>\n                <exclusions>  \n                   <exclusion>  \n                       <groupId>org.apache.commons</groupId>  \n                       <artifactId>commons-imaging</artifactId>  \n                   </exclusion>  \n                </exclusions> \n              </dependency>\n              <dependency>\n                <groupId>org.codehaus.jackson</groupId>\n                <artifactId>jackson-core-asl</artifactId>\n                <version>1.9.13</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.dataformat</groupId>\n                <artifactId>jackson-dataformat-xml</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.codehaus.jackson</groupId>\n                <artifactId>jackson-mapper-asl</artifactId>\n                <version>1.9.13</version>\n              </dependency>\n              <dependency>\n                <groupId>com.fasterxml.jackson.module</groupId>\n                <artifactId>jackson-module-jaxb-annotations</artifactId>\n                <version>2.9.2</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml.bind</groupId>\n                <artifactId>jaxb-api</artifactId>\n                <version>2.3.0</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml</groupId>\n                <artifactId>jaxb-impl</artifactId>\n                <version>2.1</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml</groupId>\n                <artifactId>jaxb-xjc</artifactId>\n                <version>2.0EA3</version>\n              </dependency>\n              <dependency>\n                <groupId>org.jdom</groupId>\n                <artifactId>jaxen-core</artifactId>\n                <version>1.0-FCS</version>\n              </dependency>\n              <dependency>\n                <groupId>org.jdom</groupId>\n                <artifactId>jaxen-jdom</artifactId>\n                <version>1.0-FCS</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml.ws</groupId>\n                <artifactId>jaxws-api</artifactId>\n                <version>2.1</version>\n              </dependency>\n              <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jcl-over-slf4j</artifactId>\n                <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>org.jdom</groupId>\n                <artifactId>jdom</artifactId>\n                <version>1.1</version>\n              </dependency>\n              <dependency>\n                  <groupId>joda-time</groupId>\n                  <artifactId>joda-time</artifactId>\n                  <version>2.9.9</version>\n              </dependency>\n              <dependency>\n                  <groupId>json</groupId>\n                  <artifactId>json</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.servlet</groupId>\n                <artifactId>jstl</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jul-to-slf4j</artifactId>\n                <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>log4j</groupId>\n                <artifactId>log4j</artifactId>\n                <version>1.2.17</version>\n              </dependency>\n              <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>log4j-over-slf4j</artifactId>\n                <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-classic</artifactId>\n                <version>1.1.7</version>\n              </dependency>\n              <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-core</artifactId>\n                <version>1.1.7</version>\n              </dependency>\n              <dependency>\n                <groupId>org.logback-extensions</groupId>\n                <artifactId>logback-ext-spring</artifactId>\n                <version>0.1.4</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.sun</groupId>\n                  <artifactId>mail</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                <groupId>org.mapstruct</groupId>\n                <artifactId>mapstruct</artifactId>\n                <version>1.0.0.Final</version>\n              </dependency>\n              <dependency>\n                <groupId>net.percederberg.mibble</groupId>\n                <artifactId>mibble-mibs</artifactId>\n                <version>2.9.3</version>\n              </dependency>\n              <dependency>\n                <groupId>net.percederberg.mibble</groupId>\n                <artifactId>mibble-parser</artifactId>\n                <version>2.9.3</version>\n              </dependency>\n              <dependency>\n                <groupId>gephi.toolkit</groupId>\n                <artifactId>gephi-toolkit</artifactId>\n                <version>${jbns.version}</version>\n              </dependency>\n              <!-- dependency>\n                  <groupId>multiTenancy</groupId>\n                  <artifactId>multiTenancy</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency -->\n              <dependency>\n                <groupId>mysql</groupId>\n                <artifactId>mysql-connector-java</artifactId>\n                <version>5.1.25</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.neethi</groupId>\n                <artifactId>neethi</artifactId>\n                <version>3.0.1</version>\n              </dependency>\n              <dependency>\n                <groupId>com.belerweb</groupId>\n                <artifactId>pinyin4j</artifactId>\n                <version>2.5.1</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi</artifactId>\n                <version>3.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi-contrib</artifactId>\n                <version>3.2-FINAL</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi-ooxml</artifactId>\n                <version>3.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi-ooxml-schemas</artifactId>\n                <version>3.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.poi</groupId>\n                <artifactId>poi-scratchpad</artifactId>\n                <version>3.1-FINAL</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.xml.soap</groupId>\n                <artifactId>saaj-api</artifactId>\n                <version>1.3.5</version>\n              </dependency>\n              <dependency>\n                <groupId>com.sun.xml.messaging.saaj</groupId>\n                <artifactId>saaj-impl</artifactId>\n                <version>1.4.0</version>\n              </dependency>\n              <dependency>\n                <groupId>saxpath</groupId>\n                <artifactId>saxpath</artifactId>\n                <version>1.0-FCS</version>\n              </dependency>\n              <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>log4j-over-slf4j</artifactId>\n                <version>1.7.25</version>\n              </dependency>\n              <dependency>\n                <groupId>org.snmp4j</groupId>\n                <artifactId>snmp4j</artifactId>\n                <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-context</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-core</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>io.springfox</groupId>\n                <artifactId>springfox-schema</artifactId>\n                <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                <groupId>io.springfox</groupId>\n                <artifactId>springfox-spi</artifactId>\n                <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                <groupId>io.springfox</groupId>\n                <artifactId>springfox-spring-web</artifactId>\n                <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>io.springfox</groupId>\n                  <artifactId>springfox-swagger2</artifactId>\n                  <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                  <groupId>io.springfox</groupId>\n                  <artifactId>springfox-swagger-common</artifactId>\n                  <version>2.5.0</version>\n              </dependency>\n              <!--需要用自己的-->\n              <dependency>\n                  <groupId>io.springfox</groupId>\n                  <artifactId>springfox-swagger-ui</artifactId>\n                  <version>2.5.0</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-jdbc</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-orm</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework.plugin</groupId>\n                <artifactId>spring-plugin-core</artifactId>\n                <version>1.2.0.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework.plugin</groupId>\n                <artifactId>spring-plugin-metadata</artifactId>\n                <version>1.2.0.RELEASE</version>\n              </dependency>\n              <!-- dependency>\n                  <groupId>spring-security-config</groupId>\n                  <artifactId>spring-security-config</artifactId>\n                  <version>3.2.10.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>spring-security-core</groupId>\n                  <artifactId>spring-security-core</artifactId>\n                  <version>3.2.10.RELEASE</version>\n              </dependency\n              <dependency>\n                  <groupId>spring-security-oauth2</groupId>\n                  <artifactId>spring-security-oauth2</artifactId>\n                  <version>2.1.0.RELEASE</version>\n              </dependency>\n              <dependency>\n                  <groupId>spring-security-web</groupId>\n                  <artifactId>spring-security-web</artifactId>\n                  <version>3.2.10.RELEASE</version>\n              </dependency -->\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-test</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-webmvc</artifactId>\n                <version>4.3.12.RELEASE</version>\n              </dependency>\n              <!--dependency>\n                  <groupId>sqljdbc4</groupId>\n                  <artifactId>sqljdbc4</artifactId>\n                  <version>4.0.2206.100</version>\n              </dependency-->\n              <dependency>\n                <groupId>io.swagger</groupId>\n                <artifactId>swagger-annotations</artifactId>\n                <version>1.5.9</version>\n              </dependency>\n              <dependency>\n                <groupId>io.swagger</groupId>\n                <artifactId>swagger-models</artifactId>\n                <version>1.5.9</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-api</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-autotag-core-runtime</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-core</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-jsp</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-request-api</artifactId>\n                <version>1.0.6</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-request-jsp</artifactId>\n                <version>1.0.6</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-request-servlet</artifactId>\n                <version>1.0.6</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-servlet</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.tiles</groupId>\n                <artifactId>tiles-template</artifactId>\n                <version>3.0.8</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.baidu</groupId>\n                  <artifactId>ueditor</artifactId>\n                  <version>1.1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>javax.validation</groupId>\n                <artifactId>validation-api</artifactId>\n                <version>1.1.0.Final</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.apache</groupId>\n                  <artifactId>wss4j</artifactId>\n                  <version>1.6.4</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.xmlbeans</groupId>\n                <artifactId>xmlbeans</artifactId>\n                <version>2.6.0</version>\n              </dependency>\n              <dependency>\n                <groupId>xml-resolver</groupId>\n                <artifactId>xml-resolver</artifactId>\n                <version>1.2</version>\n              </dependency>\n              <dependency>\n                <groupId>org.apache.ws.xmlschema</groupId>\n                <artifactId>xmlschema-core</artifactId>\n                <version>2.0.1</version>\n              </dependency>\n              <dependency>\n                <groupId>com.itextpdf.tool</groupId>\n                <artifactId>xmlworker</artifactId>\n                <version>5.5.6</version>\n              </dependency>\n              <dependency>\n                  <groupId>org.apache.tomcat</groupId>\n                  <artifactId>servlet-api</artifactId>\n                  <version>${jbns.version}</version>\n                  <scope>provided</scope>\n              </dependency>\n              <dependency>\n                  <groupId>org.apache.tomcat</groupId>\n                  <artifactId>jsp-api</artifactId>\n                  <version>${jbns.version}</version>\n                  <scope>provided</scope>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>jbnshx-remote</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>sysmanager</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>solution</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>configmgr</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>easyitsm</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>EMIClient</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>EasyAlert</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>agent</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>api-logmgr</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>jxl</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>kernel</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>license</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>lms.node</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>mindterm</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.jbns</groupId>\n                  <artifactId>multiping</artifactId>\n                  <version>${jbns.version}</version>\n              </dependency>\n              <dependency>\n                  <groupId>com.sinopec</groupId>\n                  <artifactId>siam-am-agent-simple</artifactId>\n                  <version>3.07.RELEASE</version>\n              </dependency>\n          </dependencies>\n          <build>\n              <finalName>${project.artifactId}</finalName>\n              <resources>\n               <resource>\n              <directory>src/main/resources</directory>\n          </resource>\n                  <resource>\n                      <directory>src/main/java</directory>\n                      <includes>\n                          <include>**/*.properties</include>\n                          <include>**/*.xml</include>\n                          <include>**/*.tld</include>\n                      </includes>\n                      <filtering>false</filtering>\n                  </resource>\n              </resources>\n              <pluginManagement>\n              <plugins>\n\n                  <!-- compiler插件, 设定JDK版本 -->\n                  <plugin>\n                      <groupId>org.apache.maven.plugins</groupId>\n                      <artifactId>maven-compiler-plugin</artifactId>\n                      <version>2.3.1</version>\n                      <configuration>\n                          <source>1.7</source>\n                          <target>1.7</target>\n                          <encoding>UTF-8</encoding>\n                          <compilerArguments>\n                              <verbose />\n                              <bootclasspath>${env.JAVA_HOME}\\jre\\lib\\rt.jar;${env.JAVA_HOME}\\jre\\lib\\jce.jar</bootclasspath>\n                          </compilerArguments>\n                      </configuration>\n                  </plugin>\n                  <plugin>\n                      <groupId>org.apache.maven.plugins</groupId>\n                      <artifactId>maven-resources-plugin</artifactId>\n                      <version>2.4.3</version>\n                      <configuration>\n                          <encoding>UTF-8</encoding>\n                      </configuration>\n                  </plugin>\n                  <!-- 将scope为system的jar包拷贝到war里面 -->\n                  <plugin>\n                      <groupId>org.apache.maven.plugins</groupId>\n                      <artifactId>maven-dependency-plugin</artifactId>\n                      <version>2.7</version>\n                      <executions>\n                          <execution>\n                              <phase>compile</phase>\n                              <goals>\n                                  <goal>copy-dependencies</goal>\n                              </goals>\n                          </execution>\n                      </executions>\n                      <configuration>\n                          <includeScope>system</includeScope>\n                          <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</outputDirectory>\n                      </configuration>\n                  </plugin>\n                  <!-- war插件, 将工程打包为war包 -->\n                  <plugin>\n                      <artifactId>maven-war-plugin</artifactId>\n                      <version>2.6</version>\n                  </plugin>\n              </plugins>\n              </pluginManagement>\n          </build>\n      </project>","slug":"批处理脚本初识","published":1,"updated":"2018-05-09T02:02:07.019Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58ero001mawpfhajp2kyd","content":"<p>title: 批处理脚本初识<br>author: zjy<br>date: 2018-05-08 16:05:52</p>\n<h2 id=\"tags\"><a href=\"#tags\" class=\"headerlink\" title=\"tags:\"></a>tags:</h2><h1 id=\"需求：删除定义的路径下的所有文件-文件夹\"><a href=\"#需求：删除定义的路径下的所有文件-文件夹\" class=\"headerlink\" title=\"需求：删除定义的路径下的所有文件+文件夹\"></a>需求：删除定义的路径下的所有文件+文件夹</h1><h1 id=\"代码如下\"><a href=\"#代码如下\" class=\"headerlink\" title=\"代码如下\"></a>代码如下</h1><h2 id=\"配置文件-reload-txt内容如下\"><a href=\"#配置文件-reload-txt内容如下\" class=\"headerlink\" title=\"配置文件 reload.txt内容如下\"></a>配置文件 reload.txt内容如下</h2><pre><code>D:\\jar\\com\\jbns\nD:\\jar\\org\n</code></pre><h2 id=\"批处理文件-package-bat内容如下\"><a href=\"#批处理文件-package-bat内容如下\" class=\"headerlink\" title=\"批处理文件 package.bat内容如下\"></a>批处理文件 package.bat内容如下</h2><pre><code>@echo off &amp; setlocal enabledelayedexpansion\nset i=0\nfor /f &quot;eol=/delims=&quot; %%b in (%cd%\\reload.txt) do ( \n    echo %%b \n    rd /q /s %%b\n    set /a &quot;bds[!i!]=%%b&quot;,i=i+1\n) \nmvn clean package &amp; pause\n</code></pre><h2 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h2><pre><code>读取reload.txt文件，并且逐行删除该文件夹下的所有文件。之后进行mvn clean package的时候\n会自动去重新下载私服上最新的jar包。\n\n注意：批处理文件或者shell脚本或者python文件，在 = 赋值的时候，注意等号左右的空格。\n其中 %cd% 是当前的路径值\n\n注意：package.bat,pom.xml,reload.txt文件的路径\n</code></pre><h2 id=\"项目文件结构\"><a href=\"#项目文件结构\" class=\"headerlink\" title=\"项目文件结构\"></a>项目文件结构</h2><p><img src=\"/2018/05/08/批处理脚本初识/jiegou.png\" alt=\"logo\"></p>\n<h3 id=\"最后附上pom-xml内容\"><a href=\"#最后附上pom-xml内容\" class=\"headerlink\" title=\"最后附上pom.xml内容\"></a>最后附上pom.xml内容</h3><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n  &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n      xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n      &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n      &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n      &lt;artifactId&gt;EIM&lt;/artifactId&gt;\n      &lt;packaging&gt;war&lt;/packaging&gt;\n      &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n      &lt;properties&gt;\n          &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n          &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n          &lt;jbns.version&gt;1.0&lt;/jbns.version&gt;\n          &lt;java.version&gt;1.7&lt;/java.version&gt;\n      &lt;/properties&gt;\n\n      &lt;dependencies&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;junit&lt;/groupId&gt;\n              &lt;artifactId&gt;junit&lt;/artifactId&gt;\n              &lt;version&gt;3.8.1&lt;/version&gt;\n              &lt;scope&gt;test&lt;/scope&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-bpmn-converter&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-image-generator&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-process-validation&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-aop&lt;/artifactId&gt;\n              &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-expression&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;\n              &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;\n              &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;\n            &lt;artifactId&gt;groovy-all&lt;/artifactId&gt;\n            &lt;version&gt;2.4.3&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-pool&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-pool&lt;/artifactId&gt;\n            &lt;version&gt;1.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!-- dependency&gt;\n              &lt;groupId&gt;org.apache&lt;/groupId&gt;\n              &lt;artifactId&gt;commons.dbcp&lt;/artifactId&gt;\n              &lt;version&gt;1.2.1&lt;/version&gt;\n          &lt;/dependency --&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-logging&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;\n            &lt;version&gt;3.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n              &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;\n              &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;redis.clients&lt;/groupId&gt;\n            &lt;artifactId&gt;jedis&lt;/artifactId&gt;\n            &lt;version&gt;2.9.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;\n            &lt;version&gt;1.8.8.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-data-keyvalue&lt;/artifactId&gt;\n            &lt;version&gt;1.2.8.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n                  &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-data-commons&lt;/artifactId&gt;\n            &lt;version&gt;1.13.8.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;druid&lt;/artifactId&gt;\n            &lt;version&gt;1.1.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;\n            &lt;version&gt;3.4.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;\n            &lt;version&gt;1.3.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;\n            &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;\n            &lt;version&gt;5.0.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;net.sf.jsqlparser&lt;/groupId&gt;\n              &lt;artifactId&gt;jsqlparser&lt;/artifactId&gt;\n              &lt;version&gt;0.9.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.apache.empire-db&lt;/groupId&gt;\n              &lt;artifactId&gt;empire-db&lt;/artifactId&gt;\n              &lt;version&gt;2.4.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;net.sf.json-lib&lt;/groupId&gt;\n              &lt;artifactId&gt;json-lib&lt;/artifactId&gt;\n              &lt;version&gt;2.4&lt;/version&gt;\n              &lt;classifier&gt;jdk15&lt;/classifier&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;wsdl4j&lt;/groupId&gt;\n              &lt;artifactId&gt;wsdl4j&lt;/artifactId&gt;\n              &lt;version&gt;1.6.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;dom4j&lt;/groupId&gt;\n              &lt;artifactId&gt;dom4j&lt;/artifactId&gt;\n              &lt;version&gt;1.6.1&lt;/version&gt;\n              &lt;exclusions&gt;  \n                   &lt;exclusion&gt;  \n                       &lt;groupId&gt;xml-apis&lt;/groupId&gt;  \n                       &lt;artifactId&gt;xml-apis&lt;/artifactId&gt;  \n                   &lt;/exclusion&gt;  \n              &lt;/exclusions&gt; \n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;axis&lt;/groupId&gt;\n            &lt;artifactId&gt;axis_webservice&lt;/artifactId&gt;\n            &lt;version&gt;1.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;\n            &lt;artifactId&gt;quartz&lt;/artifactId&gt;\n            &lt;version&gt;2.3.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;\n            &lt;artifactId&gt;gson&lt;/artifactId&gt;\n            &lt;version&gt;2.8.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-web&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.aspectj&lt;/groupId&gt;\n            &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;\n            &lt;version&gt;1.8.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.beanshell&lt;/groupId&gt;\n            &lt;artifactId&gt;bsh&lt;/artifactId&gt;\n            &lt;version&gt;2.0b4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.freemarker&lt;/groupId&gt;\n            &lt;artifactId&gt;freemarker&lt;/artifactId&gt;\n            &lt;version&gt;2.3.21&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;\n            &lt;artifactId&gt;shiro-all&lt;/artifactId&gt;\n            &lt;version&gt;1.3.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.ant&lt;/groupId&gt;\n            &lt;artifactId&gt;ant&lt;/artifactId&gt;\n            &lt;version&gt;1.10.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;aopalliance&lt;/groupId&gt;\n            &lt;artifactId&gt;aopalliance&lt;/artifactId&gt;\n            &lt;version&gt;1.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml&lt;/groupId&gt;\n            &lt;artifactId&gt;classmate&lt;/artifactId&gt;\n            &lt;version&gt;1.3.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.sun&lt;/groupId&gt;\n              &lt;artifactId&gt;comm&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-beanutils&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-beanutils&lt;/artifactId&gt;\n            &lt;version&gt;1.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-codec&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-codec&lt;/artifactId&gt;\n            &lt;version&gt;1.10&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;commons-collections&lt;/groupId&gt;\n              &lt;artifactId&gt;commons-collections&lt;/artifactId&gt;\n              &lt;version&gt;3.2.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-digester&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-digester&lt;/artifactId&gt;\n            &lt;version&gt;2.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-discovery&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-discovery&lt;/artifactId&gt;\n            &lt;version&gt;0.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;commons-io&lt;/groupId&gt;\n              &lt;artifactId&gt;commons-io&lt;/artifactId&gt;\n              &lt;version&gt;2.4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;commons-lang&lt;/groupId&gt;\n              &lt;artifactId&gt;commons-lang&lt;/artifactId&gt;\n              &lt;version&gt;2.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;commons-net&lt;/groupId&gt;\n              &lt;artifactId&gt;commons-net&lt;/artifactId&gt;\n              &lt;version&gt;3.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;\n            &lt;version&gt;2.4.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;cxf&lt;/groupId&gt;\n              &lt;artifactId&gt;cxf&lt;/artifactId&gt;\n              &lt;version&gt;2.6.16&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;net.sf.ezmorph&lt;/groupId&gt;\n            &lt;artifactId&gt;ezmorph&lt;/artifactId&gt;\n            &lt;version&gt;1.0.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;1.2.40&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;ch.ethz.ganymed&lt;/groupId&gt;\n            &lt;artifactId&gt;ganymed-ssh2&lt;/artifactId&gt;\n            &lt;version&gt;262&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.google.guava&lt;/groupId&gt;\n            &lt;artifactId&gt;guava&lt;/artifactId&gt;\n            &lt;version&gt;18.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;\n            &lt;artifactId&gt;httpclient&lt;/artifactId&gt;\n            &lt;version&gt;4.5.4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;\n            &lt;artifactId&gt;httpcore&lt;/artifactId&gt;\n            &lt;version&gt;4.4.7&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;\n            &lt;artifactId&gt;httpmime&lt;/artifactId&gt;\n            &lt;version&gt;4.4.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;\n            &lt;artifactId&gt;itextpdf&lt;/artifactId&gt;\n            &lt;version&gt;5.5.10&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;\n            &lt;artifactId&gt;itext-pdfa&lt;/artifactId&gt;\n            &lt;version&gt;5.5.10&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;\n            &lt;artifactId&gt;itext-xtra&lt;/artifactId&gt;\n            &lt;version&gt;5.5.10&lt;/version&gt;\n            &lt;exclusions&gt;  \n               &lt;exclusion&gt;  \n                   &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;  \n                   &lt;artifactId&gt;commons-imaging&lt;/artifactId&gt;  \n               &lt;/exclusion&gt;  \n            &lt;/exclusions&gt; \n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-core-asl&lt;/artifactId&gt;\n            &lt;version&gt;1.9.13&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-dataformat-xml&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;\n            &lt;version&gt;1.9.13&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.module&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-module-jaxb-annotations&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml.bind&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxb-api&lt;/artifactId&gt;\n            &lt;version&gt;2.3.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxb-impl&lt;/artifactId&gt;\n            &lt;version&gt;2.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxb-xjc&lt;/artifactId&gt;\n            &lt;version&gt;2.0EA3&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.jdom&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxen-core&lt;/artifactId&gt;\n            &lt;version&gt;1.0-FCS&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.jdom&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxen-jdom&lt;/artifactId&gt;\n            &lt;version&gt;1.0-FCS&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml.ws&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxws-api&lt;/artifactId&gt;\n            &lt;version&gt;2.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt;\n            &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.jdom&lt;/groupId&gt;\n            &lt;artifactId&gt;jdom&lt;/artifactId&gt;\n            &lt;version&gt;1.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;joda-time&lt;/groupId&gt;\n              &lt;artifactId&gt;joda-time&lt;/artifactId&gt;\n              &lt;version&gt;2.9.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;json&lt;/groupId&gt;\n              &lt;artifactId&gt;json&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n            &lt;artifactId&gt;jstl&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;jul-to-slf4j&lt;/artifactId&gt;\n            &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;log4j&lt;/groupId&gt;\n            &lt;artifactId&gt;log4j&lt;/artifactId&gt;\n            &lt;version&gt;1.2.17&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;\n            &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;\n            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;\n            &lt;version&gt;1.1.7&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;\n            &lt;artifactId&gt;logback-core&lt;/artifactId&gt;\n            &lt;version&gt;1.1.7&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.logback-extensions&lt;/groupId&gt;\n            &lt;artifactId&gt;logback-ext-spring&lt;/artifactId&gt;\n            &lt;version&gt;0.1.4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.sun&lt;/groupId&gt;\n              &lt;artifactId&gt;mail&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.mapstruct&lt;/groupId&gt;\n            &lt;artifactId&gt;mapstruct&lt;/artifactId&gt;\n            &lt;version&gt;1.0.0.Final&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;net.percederberg.mibble&lt;/groupId&gt;\n            &lt;artifactId&gt;mibble-mibs&lt;/artifactId&gt;\n            &lt;version&gt;2.9.3&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;net.percederberg.mibble&lt;/groupId&gt;\n            &lt;artifactId&gt;mibble-parser&lt;/artifactId&gt;\n            &lt;version&gt;2.9.3&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;gephi.toolkit&lt;/groupId&gt;\n            &lt;artifactId&gt;gephi-toolkit&lt;/artifactId&gt;\n            &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!-- dependency&gt;\n              &lt;groupId&gt;multiTenancy&lt;/groupId&gt;\n              &lt;artifactId&gt;multiTenancy&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency --&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;version&gt;5.1.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.neethi&lt;/groupId&gt;\n            &lt;artifactId&gt;neethi&lt;/artifactId&gt;\n            &lt;version&gt;3.0.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.belerweb&lt;/groupId&gt;\n            &lt;artifactId&gt;pinyin4j&lt;/artifactId&gt;\n            &lt;version&gt;2.5.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi&lt;/artifactId&gt;\n            &lt;version&gt;3.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi-contrib&lt;/artifactId&gt;\n            &lt;version&gt;3.2-FINAL&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;\n            &lt;version&gt;3.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi-ooxml-schemas&lt;/artifactId&gt;\n            &lt;version&gt;3.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi-scratchpad&lt;/artifactId&gt;\n            &lt;version&gt;3.1-FINAL&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml.soap&lt;/groupId&gt;\n            &lt;artifactId&gt;saaj-api&lt;/artifactId&gt;\n            &lt;version&gt;1.3.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.sun.xml.messaging.saaj&lt;/groupId&gt;\n            &lt;artifactId&gt;saaj-impl&lt;/artifactId&gt;\n            &lt;version&gt;1.4.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;saxpath&lt;/groupId&gt;\n            &lt;artifactId&gt;saxpath&lt;/artifactId&gt;\n            &lt;version&gt;1.0-FCS&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;\n            &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.snmp4j&lt;/groupId&gt;\n            &lt;artifactId&gt;snmp4j&lt;/artifactId&gt;\n            &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-core&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n            &lt;artifactId&gt;springfox-schema&lt;/artifactId&gt;\n            &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n            &lt;artifactId&gt;springfox-spi&lt;/artifactId&gt;\n            &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n            &lt;artifactId&gt;springfox-spring-web&lt;/artifactId&gt;\n            &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n              &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;\n              &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n              &lt;artifactId&gt;springfox-swagger-common&lt;/artifactId&gt;\n              &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!--需要用自己的--&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n              &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;\n              &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-orm&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.plugin&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-plugin-core&lt;/artifactId&gt;\n            &lt;version&gt;1.2.0.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.plugin&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-plugin-metadata&lt;/artifactId&gt;\n            &lt;version&gt;1.2.0.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!-- dependency&gt;\n              &lt;groupId&gt;spring-security-config&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-security-config&lt;/artifactId&gt;\n              &lt;version&gt;3.2.10.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;spring-security-core&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-security-core&lt;/artifactId&gt;\n              &lt;version&gt;3.2.10.RELEASE&lt;/version&gt;\n          &lt;/dependency\n          &lt;dependency&gt;\n              &lt;groupId&gt;spring-security-oauth2&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-security-oauth2&lt;/artifactId&gt;\n              &lt;version&gt;2.1.0.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;spring-security-web&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-security-web&lt;/artifactId&gt;\n              &lt;version&gt;3.2.10.RELEASE&lt;/version&gt;\n          &lt;/dependency --&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-test&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!--dependency&gt;\n              &lt;groupId&gt;sqljdbc4&lt;/groupId&gt;\n              &lt;artifactId&gt;sqljdbc4&lt;/artifactId&gt;\n              &lt;version&gt;4.0.2206.100&lt;/version&gt;\n          &lt;/dependency--&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.swagger&lt;/groupId&gt;\n            &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt;\n            &lt;version&gt;1.5.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.swagger&lt;/groupId&gt;\n            &lt;artifactId&gt;swagger-models&lt;/artifactId&gt;\n            &lt;version&gt;1.5.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-api&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-autotag-core-runtime&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-core&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-jsp&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-request-api&lt;/artifactId&gt;\n            &lt;version&gt;1.0.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-request-jsp&lt;/artifactId&gt;\n            &lt;version&gt;1.0.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-request-servlet&lt;/artifactId&gt;\n            &lt;version&gt;1.0.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-servlet&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-template&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.baidu&lt;/groupId&gt;\n              &lt;artifactId&gt;ueditor&lt;/artifactId&gt;\n              &lt;version&gt;1.1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.validation&lt;/groupId&gt;\n            &lt;artifactId&gt;validation-api&lt;/artifactId&gt;\n            &lt;version&gt;1.1.0.Final&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.apache&lt;/groupId&gt;\n              &lt;artifactId&gt;wss4j&lt;/artifactId&gt;\n              &lt;version&gt;1.6.4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.xmlbeans&lt;/groupId&gt;\n            &lt;artifactId&gt;xmlbeans&lt;/artifactId&gt;\n            &lt;version&gt;2.6.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;xml-resolver&lt;/groupId&gt;\n            &lt;artifactId&gt;xml-resolver&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.ws.xmlschema&lt;/groupId&gt;\n            &lt;artifactId&gt;xmlschema-core&lt;/artifactId&gt;\n            &lt;version&gt;2.0.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.itextpdf.tool&lt;/groupId&gt;\n            &lt;artifactId&gt;xmlworker&lt;/artifactId&gt;\n            &lt;version&gt;5.5.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;\n              &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n              &lt;scope&gt;provided&lt;/scope&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;\n              &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n              &lt;scope&gt;provided&lt;/scope&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;jbnshx-remote&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;sysmanager&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;solution&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;configmgr&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;easyitsm&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;EMIClient&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;EasyAlert&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;agent&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;api-logmgr&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;jxl&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;kernel&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;license&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;lms.node&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;mindterm&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;multiping&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.sinopec&lt;/groupId&gt;\n              &lt;artifactId&gt;siam-am-agent-simple&lt;/artifactId&gt;\n              &lt;version&gt;3.07.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n      &lt;/dependencies&gt;\n      &lt;build&gt;\n          &lt;finalName&gt;${project.artifactId}&lt;/finalName&gt;\n          &lt;resources&gt;\n           &lt;resource&gt;\n          &lt;directory&gt;src/main/resources&lt;/directory&gt;\n      &lt;/resource&gt;\n              &lt;resource&gt;\n                  &lt;directory&gt;src/main/java&lt;/directory&gt;\n                  &lt;includes&gt;\n                      &lt;include&gt;**/*.properties&lt;/include&gt;\n                      &lt;include&gt;**/*.xml&lt;/include&gt;\n                      &lt;include&gt;**/*.tld&lt;/include&gt;\n                  &lt;/includes&gt;\n                  &lt;filtering&gt;false&lt;/filtering&gt;\n              &lt;/resource&gt;\n          &lt;/resources&gt;\n          &lt;pluginManagement&gt;\n          &lt;plugins&gt;\n\n              &lt;!-- compiler插件, 设定JDK版本 --&gt;\n              &lt;plugin&gt;\n                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                  &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                  &lt;version&gt;2.3.1&lt;/version&gt;\n                  &lt;configuration&gt;\n                      &lt;source&gt;1.7&lt;/source&gt;\n                      &lt;target&gt;1.7&lt;/target&gt;\n                      &lt;encoding&gt;UTF-8&lt;/encoding&gt;\n                      &lt;compilerArguments&gt;\n                          &lt;verbose /&gt;\n                          &lt;bootclasspath&gt;${env.JAVA_HOME}\\jre\\lib\\rt.jar;${env.JAVA_HOME}\\jre\\lib\\jce.jar&lt;/bootclasspath&gt;\n                      &lt;/compilerArguments&gt;\n                  &lt;/configuration&gt;\n              &lt;/plugin&gt;\n              &lt;plugin&gt;\n                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                  &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;\n                  &lt;version&gt;2.4.3&lt;/version&gt;\n                  &lt;configuration&gt;\n                      &lt;encoding&gt;UTF-8&lt;/encoding&gt;\n                  &lt;/configuration&gt;\n              &lt;/plugin&gt;\n              &lt;!-- 将scope为system的jar包拷贝到war里面 --&gt;\n              &lt;plugin&gt;\n                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                  &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\n                  &lt;version&gt;2.7&lt;/version&gt;\n                  &lt;executions&gt;\n                      &lt;execution&gt;\n                          &lt;phase&gt;compile&lt;/phase&gt;\n                          &lt;goals&gt;\n                              &lt;goal&gt;copy-dependencies&lt;/goal&gt;\n                          &lt;/goals&gt;\n                      &lt;/execution&gt;\n                  &lt;/executions&gt;\n                  &lt;configuration&gt;\n                      &lt;includeScope&gt;system&lt;/includeScope&gt;\n                      &lt;outputDirectory&gt;${project.build.directory}/${project.build.finalName}/WEB-INF/lib&lt;/outputDirectory&gt;\n                  &lt;/configuration&gt;\n              &lt;/plugin&gt;\n              &lt;!-- war插件, 将工程打包为war包 --&gt;\n              &lt;plugin&gt;\n                  &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;\n                  &lt;version&gt;2.6&lt;/version&gt;\n              &lt;/plugin&gt;\n          &lt;/plugins&gt;\n          &lt;/pluginManagement&gt;\n      &lt;/build&gt;\n  &lt;/project&gt;\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>title: 批处理脚本初识<br>author: zjy<br>date: 2018-05-08 16:05:52</p>\n<h2 id=\"tags\"><a href=\"#tags\" class=\"headerlink\" title=\"tags:\"></a>tags:</h2><h1 id=\"需求：删除定义的路径下的所有文件-文件夹\"><a href=\"#需求：删除定义的路径下的所有文件-文件夹\" class=\"headerlink\" title=\"需求：删除定义的路径下的所有文件+文件夹\"></a>需求：删除定义的路径下的所有文件+文件夹</h1><h1 id=\"代码如下\"><a href=\"#代码如下\" class=\"headerlink\" title=\"代码如下\"></a>代码如下</h1><h2 id=\"配置文件-reload-txt内容如下\"><a href=\"#配置文件-reload-txt内容如下\" class=\"headerlink\" title=\"配置文件 reload.txt内容如下\"></a>配置文件 reload.txt内容如下</h2><pre><code>D:\\jar\\com\\jbns\nD:\\jar\\org\n</code></pre><h2 id=\"批处理文件-package-bat内容如下\"><a href=\"#批处理文件-package-bat内容如下\" class=\"headerlink\" title=\"批处理文件 package.bat内容如下\"></a>批处理文件 package.bat内容如下</h2><pre><code>@echo off &amp; setlocal enabledelayedexpansion\nset i=0\nfor /f &quot;eol=/delims=&quot; %%b in (%cd%\\reload.txt) do ( \n    echo %%b \n    rd /q /s %%b\n    set /a &quot;bds[!i!]=%%b&quot;,i=i+1\n) \nmvn clean package &amp; pause\n</code></pre><h2 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h2><pre><code>读取reload.txt文件，并且逐行删除该文件夹下的所有文件。之后进行mvn clean package的时候\n会自动去重新下载私服上最新的jar包。\n\n注意：批处理文件或者shell脚本或者python文件，在 = 赋值的时候，注意等号左右的空格。\n其中 %cd% 是当前的路径值\n\n注意：package.bat,pom.xml,reload.txt文件的路径\n</code></pre><h2 id=\"项目文件结构\"><a href=\"#项目文件结构\" class=\"headerlink\" title=\"项目文件结构\"></a>项目文件结构</h2><p><img src=\"/2018/05/08/批处理脚本初识/jiegou.png\" alt=\"logo\"></p>\n<h3 id=\"最后附上pom-xml内容\"><a href=\"#最后附上pom-xml内容\" class=\"headerlink\" title=\"最后附上pom.xml内容\"></a>最后附上pom.xml内容</h3><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n  &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n      xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n      &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n      &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n      &lt;artifactId&gt;EIM&lt;/artifactId&gt;\n      &lt;packaging&gt;war&lt;/packaging&gt;\n      &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n      &lt;properties&gt;\n          &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n          &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n          &lt;jbns.version&gt;1.0&lt;/jbns.version&gt;\n          &lt;java.version&gt;1.7&lt;/java.version&gt;\n      &lt;/properties&gt;\n\n      &lt;dependencies&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;junit&lt;/groupId&gt;\n              &lt;artifactId&gt;junit&lt;/artifactId&gt;\n              &lt;version&gt;3.8.1&lt;/version&gt;\n              &lt;scope&gt;test&lt;/scope&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-bpmn-converter&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-image-generator&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-process-validation&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.activiti&lt;/groupId&gt;\n              &lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;\n              &lt;version&gt;5.21.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-aop&lt;/artifactId&gt;\n              &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-expression&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;\n              &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;\n              &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;\n            &lt;artifactId&gt;groovy-all&lt;/artifactId&gt;\n            &lt;version&gt;2.4.3&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-pool&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-pool&lt;/artifactId&gt;\n            &lt;version&gt;1.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!-- dependency&gt;\n              &lt;groupId&gt;org.apache&lt;/groupId&gt;\n              &lt;artifactId&gt;commons.dbcp&lt;/artifactId&gt;\n              &lt;version&gt;1.2.1&lt;/version&gt;\n          &lt;/dependency --&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-logging&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;\n            &lt;version&gt;3.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n              &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;\n              &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;redis.clients&lt;/groupId&gt;\n            &lt;artifactId&gt;jedis&lt;/artifactId&gt;\n            &lt;version&gt;2.9.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;\n            &lt;version&gt;1.8.8.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-data-keyvalue&lt;/artifactId&gt;\n            &lt;version&gt;1.2.8.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n                  &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-data-commons&lt;/artifactId&gt;\n            &lt;version&gt;1.13.8.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;druid&lt;/artifactId&gt;\n            &lt;version&gt;1.1.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;\n            &lt;version&gt;3.4.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;\n            &lt;version&gt;1.3.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;\n            &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;\n            &lt;version&gt;5.0.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;net.sf.jsqlparser&lt;/groupId&gt;\n              &lt;artifactId&gt;jsqlparser&lt;/artifactId&gt;\n              &lt;version&gt;0.9.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.apache.empire-db&lt;/groupId&gt;\n              &lt;artifactId&gt;empire-db&lt;/artifactId&gt;\n              &lt;version&gt;2.4.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;net.sf.json-lib&lt;/groupId&gt;\n              &lt;artifactId&gt;json-lib&lt;/artifactId&gt;\n              &lt;version&gt;2.4&lt;/version&gt;\n              &lt;classifier&gt;jdk15&lt;/classifier&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;wsdl4j&lt;/groupId&gt;\n              &lt;artifactId&gt;wsdl4j&lt;/artifactId&gt;\n              &lt;version&gt;1.6.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;dom4j&lt;/groupId&gt;\n              &lt;artifactId&gt;dom4j&lt;/artifactId&gt;\n              &lt;version&gt;1.6.1&lt;/version&gt;\n              &lt;exclusions&gt;  \n                   &lt;exclusion&gt;  \n                       &lt;groupId&gt;xml-apis&lt;/groupId&gt;  \n                       &lt;artifactId&gt;xml-apis&lt;/artifactId&gt;  \n                   &lt;/exclusion&gt;  \n              &lt;/exclusions&gt; \n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;axis&lt;/groupId&gt;\n            &lt;artifactId&gt;axis_webservice&lt;/artifactId&gt;\n            &lt;version&gt;1.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;\n            &lt;artifactId&gt;quartz&lt;/artifactId&gt;\n            &lt;version&gt;2.3.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;\n            &lt;artifactId&gt;gson&lt;/artifactId&gt;\n            &lt;version&gt;2.8.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-web&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.aspectj&lt;/groupId&gt;\n            &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;\n            &lt;version&gt;1.8.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.beanshell&lt;/groupId&gt;\n            &lt;artifactId&gt;bsh&lt;/artifactId&gt;\n            &lt;version&gt;2.0b4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.freemarker&lt;/groupId&gt;\n            &lt;artifactId&gt;freemarker&lt;/artifactId&gt;\n            &lt;version&gt;2.3.21&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;\n            &lt;artifactId&gt;shiro-all&lt;/artifactId&gt;\n            &lt;version&gt;1.3.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.ant&lt;/groupId&gt;\n            &lt;artifactId&gt;ant&lt;/artifactId&gt;\n            &lt;version&gt;1.10.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;aopalliance&lt;/groupId&gt;\n            &lt;artifactId&gt;aopalliance&lt;/artifactId&gt;\n            &lt;version&gt;1.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml&lt;/groupId&gt;\n            &lt;artifactId&gt;classmate&lt;/artifactId&gt;\n            &lt;version&gt;1.3.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.sun&lt;/groupId&gt;\n              &lt;artifactId&gt;comm&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-beanutils&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-beanutils&lt;/artifactId&gt;\n            &lt;version&gt;1.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-codec&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-codec&lt;/artifactId&gt;\n            &lt;version&gt;1.10&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;commons-collections&lt;/groupId&gt;\n              &lt;artifactId&gt;commons-collections&lt;/artifactId&gt;\n              &lt;version&gt;3.2.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-digester&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-digester&lt;/artifactId&gt;\n            &lt;version&gt;2.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;commons-discovery&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-discovery&lt;/artifactId&gt;\n            &lt;version&gt;0.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;commons-io&lt;/groupId&gt;\n              &lt;artifactId&gt;commons-io&lt;/artifactId&gt;\n              &lt;version&gt;2.4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;commons-lang&lt;/groupId&gt;\n              &lt;artifactId&gt;commons-lang&lt;/artifactId&gt;\n              &lt;version&gt;2.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;commons-net&lt;/groupId&gt;\n              &lt;artifactId&gt;commons-net&lt;/artifactId&gt;\n              &lt;version&gt;3.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n            &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;\n            &lt;version&gt;2.4.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;cxf&lt;/groupId&gt;\n              &lt;artifactId&gt;cxf&lt;/artifactId&gt;\n              &lt;version&gt;2.6.16&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;net.sf.ezmorph&lt;/groupId&gt;\n            &lt;artifactId&gt;ezmorph&lt;/artifactId&gt;\n            &lt;version&gt;1.0.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;1.2.40&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;ch.ethz.ganymed&lt;/groupId&gt;\n            &lt;artifactId&gt;ganymed-ssh2&lt;/artifactId&gt;\n            &lt;version&gt;262&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.google.guava&lt;/groupId&gt;\n            &lt;artifactId&gt;guava&lt;/artifactId&gt;\n            &lt;version&gt;18.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;\n            &lt;artifactId&gt;httpclient&lt;/artifactId&gt;\n            &lt;version&gt;4.5.4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;\n            &lt;artifactId&gt;httpcore&lt;/artifactId&gt;\n            &lt;version&gt;4.4.7&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;\n            &lt;artifactId&gt;httpmime&lt;/artifactId&gt;\n            &lt;version&gt;4.4.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;\n            &lt;artifactId&gt;itextpdf&lt;/artifactId&gt;\n            &lt;version&gt;5.5.10&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;\n            &lt;artifactId&gt;itext-pdfa&lt;/artifactId&gt;\n            &lt;version&gt;5.5.10&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;\n            &lt;artifactId&gt;itext-xtra&lt;/artifactId&gt;\n            &lt;version&gt;5.5.10&lt;/version&gt;\n            &lt;exclusions&gt;  \n               &lt;exclusion&gt;  \n                   &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;  \n                   &lt;artifactId&gt;commons-imaging&lt;/artifactId&gt;  \n               &lt;/exclusion&gt;  \n            &lt;/exclusions&gt; \n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-core-asl&lt;/artifactId&gt;\n            &lt;version&gt;1.9.13&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-dataformat-xml&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;\n            &lt;version&gt;1.9.13&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.module&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-module-jaxb-annotations&lt;/artifactId&gt;\n            &lt;version&gt;2.9.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml.bind&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxb-api&lt;/artifactId&gt;\n            &lt;version&gt;2.3.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxb-impl&lt;/artifactId&gt;\n            &lt;version&gt;2.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxb-xjc&lt;/artifactId&gt;\n            &lt;version&gt;2.0EA3&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.jdom&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxen-core&lt;/artifactId&gt;\n            &lt;version&gt;1.0-FCS&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.jdom&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxen-jdom&lt;/artifactId&gt;\n            &lt;version&gt;1.0-FCS&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml.ws&lt;/groupId&gt;\n            &lt;artifactId&gt;jaxws-api&lt;/artifactId&gt;\n            &lt;version&gt;2.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt;\n            &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.jdom&lt;/groupId&gt;\n            &lt;artifactId&gt;jdom&lt;/artifactId&gt;\n            &lt;version&gt;1.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;joda-time&lt;/groupId&gt;\n              &lt;artifactId&gt;joda-time&lt;/artifactId&gt;\n              &lt;version&gt;2.9.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;json&lt;/groupId&gt;\n              &lt;artifactId&gt;json&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n            &lt;artifactId&gt;jstl&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;jul-to-slf4j&lt;/artifactId&gt;\n            &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;log4j&lt;/groupId&gt;\n            &lt;artifactId&gt;log4j&lt;/artifactId&gt;\n            &lt;version&gt;1.2.17&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;\n            &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;\n            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;\n            &lt;version&gt;1.1.7&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;\n            &lt;artifactId&gt;logback-core&lt;/artifactId&gt;\n            &lt;version&gt;1.1.7&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.logback-extensions&lt;/groupId&gt;\n            &lt;artifactId&gt;logback-ext-spring&lt;/artifactId&gt;\n            &lt;version&gt;0.1.4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.sun&lt;/groupId&gt;\n              &lt;artifactId&gt;mail&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.mapstruct&lt;/groupId&gt;\n            &lt;artifactId&gt;mapstruct&lt;/artifactId&gt;\n            &lt;version&gt;1.0.0.Final&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;net.percederberg.mibble&lt;/groupId&gt;\n            &lt;artifactId&gt;mibble-mibs&lt;/artifactId&gt;\n            &lt;version&gt;2.9.3&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;net.percederberg.mibble&lt;/groupId&gt;\n            &lt;artifactId&gt;mibble-parser&lt;/artifactId&gt;\n            &lt;version&gt;2.9.3&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;gephi.toolkit&lt;/groupId&gt;\n            &lt;artifactId&gt;gephi-toolkit&lt;/artifactId&gt;\n            &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!-- dependency&gt;\n              &lt;groupId&gt;multiTenancy&lt;/groupId&gt;\n              &lt;artifactId&gt;multiTenancy&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency --&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;version&gt;5.1.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.neethi&lt;/groupId&gt;\n            &lt;artifactId&gt;neethi&lt;/artifactId&gt;\n            &lt;version&gt;3.0.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.belerweb&lt;/groupId&gt;\n            &lt;artifactId&gt;pinyin4j&lt;/artifactId&gt;\n            &lt;version&gt;2.5.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi&lt;/artifactId&gt;\n            &lt;version&gt;3.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi-contrib&lt;/artifactId&gt;\n            &lt;version&gt;3.2-FINAL&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;\n            &lt;version&gt;3.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi-ooxml-schemas&lt;/artifactId&gt;\n            &lt;version&gt;3.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n            &lt;artifactId&gt;poi-scratchpad&lt;/artifactId&gt;\n            &lt;version&gt;3.1-FINAL&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.xml.soap&lt;/groupId&gt;\n            &lt;artifactId&gt;saaj-api&lt;/artifactId&gt;\n            &lt;version&gt;1.3.5&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.sun.xml.messaging.saaj&lt;/groupId&gt;\n            &lt;artifactId&gt;saaj-impl&lt;/artifactId&gt;\n            &lt;version&gt;1.4.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;saxpath&lt;/groupId&gt;\n            &lt;artifactId&gt;saxpath&lt;/artifactId&gt;\n            &lt;version&gt;1.0-FCS&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;\n            &lt;version&gt;1.7.25&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.snmp4j&lt;/groupId&gt;\n            &lt;artifactId&gt;snmp4j&lt;/artifactId&gt;\n            &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-core&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n            &lt;artifactId&gt;springfox-schema&lt;/artifactId&gt;\n            &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n            &lt;artifactId&gt;springfox-spi&lt;/artifactId&gt;\n            &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n            &lt;artifactId&gt;springfox-spring-web&lt;/artifactId&gt;\n            &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n              &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;\n              &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n              &lt;artifactId&gt;springfox-swagger-common&lt;/artifactId&gt;\n              &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!--需要用自己的--&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n              &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;\n              &lt;version&gt;2.5.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-orm&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.plugin&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-plugin-core&lt;/artifactId&gt;\n            &lt;version&gt;1.2.0.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.plugin&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-plugin-metadata&lt;/artifactId&gt;\n            &lt;version&gt;1.2.0.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!-- dependency&gt;\n              &lt;groupId&gt;spring-security-config&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-security-config&lt;/artifactId&gt;\n              &lt;version&gt;3.2.10.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;spring-security-core&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-security-core&lt;/artifactId&gt;\n              &lt;version&gt;3.2.10.RELEASE&lt;/version&gt;\n          &lt;/dependency\n          &lt;dependency&gt;\n              &lt;groupId&gt;spring-security-oauth2&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-security-oauth2&lt;/artifactId&gt;\n              &lt;version&gt;2.1.0.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;spring-security-web&lt;/groupId&gt;\n              &lt;artifactId&gt;spring-security-web&lt;/artifactId&gt;\n              &lt;version&gt;3.2.10.RELEASE&lt;/version&gt;\n          &lt;/dependency --&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-test&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n            &lt;version&gt;4.3.12.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;!--dependency&gt;\n              &lt;groupId&gt;sqljdbc4&lt;/groupId&gt;\n              &lt;artifactId&gt;sqljdbc4&lt;/artifactId&gt;\n              &lt;version&gt;4.0.2206.100&lt;/version&gt;\n          &lt;/dependency--&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.swagger&lt;/groupId&gt;\n            &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt;\n            &lt;version&gt;1.5.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;io.swagger&lt;/groupId&gt;\n            &lt;artifactId&gt;swagger-models&lt;/artifactId&gt;\n            &lt;version&gt;1.5.9&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-api&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-autotag-core-runtime&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-core&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-jsp&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-request-api&lt;/artifactId&gt;\n            &lt;version&gt;1.0.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-request-jsp&lt;/artifactId&gt;\n            &lt;version&gt;1.0.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-request-servlet&lt;/artifactId&gt;\n            &lt;version&gt;1.0.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-servlet&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.tiles&lt;/groupId&gt;\n            &lt;artifactId&gt;tiles-template&lt;/artifactId&gt;\n            &lt;version&gt;3.0.8&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.baidu&lt;/groupId&gt;\n              &lt;artifactId&gt;ueditor&lt;/artifactId&gt;\n              &lt;version&gt;1.1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;javax.validation&lt;/groupId&gt;\n            &lt;artifactId&gt;validation-api&lt;/artifactId&gt;\n            &lt;version&gt;1.1.0.Final&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.apache&lt;/groupId&gt;\n              &lt;artifactId&gt;wss4j&lt;/artifactId&gt;\n              &lt;version&gt;1.6.4&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.xmlbeans&lt;/groupId&gt;\n            &lt;artifactId&gt;xmlbeans&lt;/artifactId&gt;\n            &lt;version&gt;2.6.0&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;xml-resolver&lt;/groupId&gt;\n            &lt;artifactId&gt;xml-resolver&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.ws.xmlschema&lt;/groupId&gt;\n            &lt;artifactId&gt;xmlschema-core&lt;/artifactId&gt;\n            &lt;version&gt;2.0.1&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.itextpdf.tool&lt;/groupId&gt;\n            &lt;artifactId&gt;xmlworker&lt;/artifactId&gt;\n            &lt;version&gt;5.5.6&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;\n              &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n              &lt;scope&gt;provided&lt;/scope&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;\n              &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n              &lt;scope&gt;provided&lt;/scope&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;jbnshx-remote&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;sysmanager&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;solution&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;configmgr&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;easyitsm&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;EMIClient&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;EasyAlert&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;agent&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;api-logmgr&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;jxl&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;kernel&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;license&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;lms.node&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;mindterm&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.jbns&lt;/groupId&gt;\n              &lt;artifactId&gt;multiping&lt;/artifactId&gt;\n              &lt;version&gt;${jbns.version}&lt;/version&gt;\n          &lt;/dependency&gt;\n          &lt;dependency&gt;\n              &lt;groupId&gt;com.sinopec&lt;/groupId&gt;\n              &lt;artifactId&gt;siam-am-agent-simple&lt;/artifactId&gt;\n              &lt;version&gt;3.07.RELEASE&lt;/version&gt;\n          &lt;/dependency&gt;\n      &lt;/dependencies&gt;\n      &lt;build&gt;\n          &lt;finalName&gt;${project.artifactId}&lt;/finalName&gt;\n          &lt;resources&gt;\n           &lt;resource&gt;\n          &lt;directory&gt;src/main/resources&lt;/directory&gt;\n      &lt;/resource&gt;\n              &lt;resource&gt;\n                  &lt;directory&gt;src/main/java&lt;/directory&gt;\n                  &lt;includes&gt;\n                      &lt;include&gt;**/*.properties&lt;/include&gt;\n                      &lt;include&gt;**/*.xml&lt;/include&gt;\n                      &lt;include&gt;**/*.tld&lt;/include&gt;\n                  &lt;/includes&gt;\n                  &lt;filtering&gt;false&lt;/filtering&gt;\n              &lt;/resource&gt;\n          &lt;/resources&gt;\n          &lt;pluginManagement&gt;\n          &lt;plugins&gt;\n\n              &lt;!-- compiler插件, 设定JDK版本 --&gt;\n              &lt;plugin&gt;\n                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                  &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                  &lt;version&gt;2.3.1&lt;/version&gt;\n                  &lt;configuration&gt;\n                      &lt;source&gt;1.7&lt;/source&gt;\n                      &lt;target&gt;1.7&lt;/target&gt;\n                      &lt;encoding&gt;UTF-8&lt;/encoding&gt;\n                      &lt;compilerArguments&gt;\n                          &lt;verbose /&gt;\n                          &lt;bootclasspath&gt;${env.JAVA_HOME}\\jre\\lib\\rt.jar;${env.JAVA_HOME}\\jre\\lib\\jce.jar&lt;/bootclasspath&gt;\n                      &lt;/compilerArguments&gt;\n                  &lt;/configuration&gt;\n              &lt;/plugin&gt;\n              &lt;plugin&gt;\n                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                  &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;\n                  &lt;version&gt;2.4.3&lt;/version&gt;\n                  &lt;configuration&gt;\n                      &lt;encoding&gt;UTF-8&lt;/encoding&gt;\n                  &lt;/configuration&gt;\n              &lt;/plugin&gt;\n              &lt;!-- 将scope为system的jar包拷贝到war里面 --&gt;\n              &lt;plugin&gt;\n                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                  &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\n                  &lt;version&gt;2.7&lt;/version&gt;\n                  &lt;executions&gt;\n                      &lt;execution&gt;\n                          &lt;phase&gt;compile&lt;/phase&gt;\n                          &lt;goals&gt;\n                              &lt;goal&gt;copy-dependencies&lt;/goal&gt;\n                          &lt;/goals&gt;\n                      &lt;/execution&gt;\n                  &lt;/executions&gt;\n                  &lt;configuration&gt;\n                      &lt;includeScope&gt;system&lt;/includeScope&gt;\n                      &lt;outputDirectory&gt;${project.build.directory}/${project.build.finalName}/WEB-INF/lib&lt;/outputDirectory&gt;\n                  &lt;/configuration&gt;\n              &lt;/plugin&gt;\n              &lt;!-- war插件, 将工程打包为war包 --&gt;\n              &lt;plugin&gt;\n                  &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;\n                  &lt;version&gt;2.6&lt;/version&gt;\n              &lt;/plugin&gt;\n          &lt;/plugins&gt;\n          &lt;/pluginManagement&gt;\n      &lt;/build&gt;\n  &lt;/project&gt;\n</code></pre>"},{"title":"mysql数据库灾备方案——chapter01（定时任务全备份）","author":"zjy","date":"2017-11-20T05:59:49.000Z","_content":"# 介绍几个常用的命令\n\n\n#### 修改文件的修改时间\n\ttouch -m -d \"2000-01-01 10:10:10\" ubuntugege.txt\n\n#### 转换文件的格式\n\t（如果执行脚本报 \\n 等错误，是文件格式问题）    \n \t\t报如下错误是格式问题\n        $'\\r': command not found\n\t\t./incres_mysql.sh: line 8: $'\\r': command not found\n\n###### 命令简介：\n\t参考：https://www.cnblogs.com/kerrycode/archive/2015/12/26/5077969.html\n\n\t\tdos2unix是将Windows格式文件转换为Unix、Linux格式的实用命令。Windows格式文件的换行符为\\r\\n ,而Unix&Linux文件的换行符为\\n. dos2unix命令其实就是将文件中的\\r\\n 转换为\\n。\n\t\t而unix2dos则是和dos2unix互为孪生的一个命令，它是将Linux&Unix格式文件转换为Windows格式文件的命令。\n        \n        :dos2unix filename1 filename2 filename3\n        \n        \n#### 查找修改日期前n天的文件列表\n\t例如查找：/home/back/mysql目录下所有后缀.sql.gz的修改日期在14天以前的文件\n\t:$(which find) /home/backup/mysql/*.sql.gz -mtime +14\n\n#### 查找到并删除文件\n\t:$(which find) /home/backup/mysql/*.sql.gz -mtime +14 -exec rm {} +\n    \n    \n ## 下面介绍数据库脚本文件\n \tmysql_backup.sh\n \n \t\t#使用sqldump 遍历mysql所有非系统数据库列表，并且执行导出sql操作\n \t\t#保存了sql文件之后，检查备份目录下创建时间较早的文件进行删除操作 \n        \n\t\t#!/bin/bash\n\n        # BEGIN CONFIGURATION =================修改mysql链接信息===========================\n\n        BACKUP_DIR=\"/home/backup\"  # The directory in which you want backups placed 备份路径\n        KEEP_MYSQL=\"14\" # How many days worth of mysql dumps to keep 早于当前日期的天数\n\n        MYSQL_HOST=\"127.0.0.1\"\n        MYSQL_USER=\"root\"\n        MYSQL_PASS=\"123\"\n        MYSQL_BACKUP_DIR=\"$BACKUP_DIR/mysql/\"\n\n        # You probably won't have to change these\n        THE_DATE=\"$(date '+%Y-%m-%d')\"\n\n        MYSQL_PATH=\"$(which mysql)\"\n        MYSQLDUMP_PATH=\"$(which mysqldump)\"\n        FIND_PATH=\"$(which find)\"\n        TAR_PATH=\"$(which tar)\"\n        RSYNC_PATH=\"$(which rsync)\"\n\n        # END CONFIGURATION ============================================================\n\n\n\n        # Announce the backup time\n        echo \"Backup Started: $(date)\"\n\n        # Create the backup dirs if they don't exist\n        if [[ ! -d $BACKUP_DIR ]]\n          then\n          mkdir -p \"$BACKUP_DIR\"\n        fi\n        if [[ ! -d $MYSQL_BACKUP_DIR ]]\n          then\n          mkdir -p \"$MYSQL_BACKUP_DIR\"\n        fi\n\n        # Get a list of mysql databases and dump them one by one\n        echo \"------------------------------------\"\n        ALL_DBS=($($MYSQL_PATH -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS -Bse 'show databases'))\n        SYSTEM_DBS=(\"information_schema\" \"mysql\" \"performance_schema\" \"test\")\n        DBS=()\n\n        for i in \"${ALL_DBS[@]}\"; do\n          skip=\n          for j in \"${SYSTEM_DBS[@]}\"; do\n            [[ $i == $j ]] && { skip=1; break; }\n          done\n          [[ -n $skip ]] || DBS+=(\"$i\")\n        done\n\n        for db in \"${DBS[@]}\"; do\n          echo \"Dumping: $db...\"\n          $MYSQLDUMP_PATH --opt --skip-add-locks -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS $db | gzip > $MYSQL_BACKUP_DIR$db\\_$THE_DATE.sql.gz\n        done\n\n        # Delete old dumps\n        echo \"------------------------------------\"\n        echo \"Deleting old backups...\"\n        # List dumps to be deleted to stdout (for report)\n        $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL\n        # Delete dumps older than specified number of days\n        $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL -exec rm {} +\n\n\n        # Announce the completion time\n        echo \"------------------------------------\"\n        echo \"Backup Completed: $(date)\"\n        \n        \n        \n## 下面介绍定时任务\n参考：https://www.cnblogs.com/michaelzhao10/p/4875719.html\n \n### 安装启动\n\tapt-get install cron\n    service cron status/stop/start\n### 卸载\n\tapt-get安装记录，软件列表  \n      dpkg  -l\n      \n    卸载：\n    apt-get purge / apt-get –purge remove \n    删除已安装包（不保留配置文件)。 \n    如软件包a，依赖软件包b，则执行该命令会删除a，而且不保留配置文件\n    apt-get autoremove \n    删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件。\n    apt-get remove \n    删除已安装的软件包（保留配置文件），不会删除依赖软件包，且保留配置文件。\n    apt-get autoclean \n    APT的底层包是dpkg, 而dpkg 安装Package时, 会将 *.deb 放在 /var/cache/apt/archives/中，apt-get autoclean 只会删除 /var/cache/apt/archives/ 已经过期的deb。\n    apt-get clean \n    使用 apt-get clean 会将 /var/cache/apt/archives/ 的 所有 deb 删掉，可以理解为 rm /var/cache/apt/archives/*.deb。\n\n### 添加一个定时任务\n\t（默认是将定时任务执行日志邮件发送到邮箱，如果没有安装smtp服务器，可以指定定时任务的执行日志输出到某个文件）\n\tcrontab –e\n    # 在打开的编辑器里写下你要执行的脚本例如：（每天五点运行backup.sh）\n#### 安装了smtp服务器的，如下编辑\n     #shell脚本环境\n     SHELL=/bin/bash\n     #path执行命令的路径\n     PATH=/sbin:/bin:/usr/sbin:/usr/bin\n     #邮件发送给1211079133@qq.com\n     MAILTO=1211079133@qq.com\n     #home是脚本执行时候的主目录（建议脚本执行写全路径）\n     HOME=/ \n     #上面是发送邮件以及环境的配置，下面是脚本列表。。。\n     0 5 * * * /root/bin/mysql_backup.sh\n     \n#### 未安装smtp服务器的，可以输出到某个日志文件\n\t#每分钟执行这个脚本，并且执行日志输出到这个mysqlback.log路径\n    */1 * * * * /home/task_script/mysql_back_up.sh >/home/backup/mysqlback.log>&1 &\n    \n    \n    \n### 查看定时任务列表\n\t#查看用户username的定时任务\n\tcrontab -u username -l \n    \n### 删除定时任务：\n\t直接 crontab -e 将对应脚本给注释掉即可。\n    \n    \n    \n# 最后总结一下操作\n\t1.新建定时任务\n    \tcrontab -e\n    2.加入以下内容（因为测试想看效果，频率是每分钟，具体频率设置请自行百度）\n     */1 * * * * /home/task_script/mysql_back_up.sh >/home/backup/mysqlback.log>&1 &\n     \n     \n     \n     \n     \n## ps\n\t每五分钟执行  */5 * * * *\n\n    每小时执行     0 * * * *\n\n    每天执行        0 0 * * *\n\n    每周执行       0 0 * * 0\n\n    每月执行        0 0 1 * *\n\n    每年执行       0 0 1 1 *\n    \n    \n    \n    \n    \n    \n    \n下篇文章介绍利用二进制文件，增量备份","source":"_posts/服务器定时任务，部署相关.md","raw":"title: mysql数据库灾备方案——chapter01（定时任务全备份）\nauthor: zjy\ndate: 2017-11-20 13:59:49\ntags:\n---\n# 介绍几个常用的命令\n\n\n#### 修改文件的修改时间\n\ttouch -m -d \"2000-01-01 10:10:10\" ubuntugege.txt\n\n#### 转换文件的格式\n\t（如果执行脚本报 \\n 等错误，是文件格式问题）    \n \t\t报如下错误是格式问题\n        $'\\r': command not found\n\t\t./incres_mysql.sh: line 8: $'\\r': command not found\n\n###### 命令简介：\n\t参考：https://www.cnblogs.com/kerrycode/archive/2015/12/26/5077969.html\n\n\t\tdos2unix是将Windows格式文件转换为Unix、Linux格式的实用命令。Windows格式文件的换行符为\\r\\n ,而Unix&Linux文件的换行符为\\n. dos2unix命令其实就是将文件中的\\r\\n 转换为\\n。\n\t\t而unix2dos则是和dos2unix互为孪生的一个命令，它是将Linux&Unix格式文件转换为Windows格式文件的命令。\n        \n        :dos2unix filename1 filename2 filename3\n        \n        \n#### 查找修改日期前n天的文件列表\n\t例如查找：/home/back/mysql目录下所有后缀.sql.gz的修改日期在14天以前的文件\n\t:$(which find) /home/backup/mysql/*.sql.gz -mtime +14\n\n#### 查找到并删除文件\n\t:$(which find) /home/backup/mysql/*.sql.gz -mtime +14 -exec rm {} +\n    \n    \n ## 下面介绍数据库脚本文件\n \tmysql_backup.sh\n \n \t\t#使用sqldump 遍历mysql所有非系统数据库列表，并且执行导出sql操作\n \t\t#保存了sql文件之后，检查备份目录下创建时间较早的文件进行删除操作 \n        \n\t\t#!/bin/bash\n\n        # BEGIN CONFIGURATION =================修改mysql链接信息===========================\n\n        BACKUP_DIR=\"/home/backup\"  # The directory in which you want backups placed 备份路径\n        KEEP_MYSQL=\"14\" # How many days worth of mysql dumps to keep 早于当前日期的天数\n\n        MYSQL_HOST=\"127.0.0.1\"\n        MYSQL_USER=\"root\"\n        MYSQL_PASS=\"123\"\n        MYSQL_BACKUP_DIR=\"$BACKUP_DIR/mysql/\"\n\n        # You probably won't have to change these\n        THE_DATE=\"$(date '+%Y-%m-%d')\"\n\n        MYSQL_PATH=\"$(which mysql)\"\n        MYSQLDUMP_PATH=\"$(which mysqldump)\"\n        FIND_PATH=\"$(which find)\"\n        TAR_PATH=\"$(which tar)\"\n        RSYNC_PATH=\"$(which rsync)\"\n\n        # END CONFIGURATION ============================================================\n\n\n\n        # Announce the backup time\n        echo \"Backup Started: $(date)\"\n\n        # Create the backup dirs if they don't exist\n        if [[ ! -d $BACKUP_DIR ]]\n          then\n          mkdir -p \"$BACKUP_DIR\"\n        fi\n        if [[ ! -d $MYSQL_BACKUP_DIR ]]\n          then\n          mkdir -p \"$MYSQL_BACKUP_DIR\"\n        fi\n\n        # Get a list of mysql databases and dump them one by one\n        echo \"------------------------------------\"\n        ALL_DBS=($($MYSQL_PATH -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS -Bse 'show databases'))\n        SYSTEM_DBS=(\"information_schema\" \"mysql\" \"performance_schema\" \"test\")\n        DBS=()\n\n        for i in \"${ALL_DBS[@]}\"; do\n          skip=\n          for j in \"${SYSTEM_DBS[@]}\"; do\n            [[ $i == $j ]] && { skip=1; break; }\n          done\n          [[ -n $skip ]] || DBS+=(\"$i\")\n        done\n\n        for db in \"${DBS[@]}\"; do\n          echo \"Dumping: $db...\"\n          $MYSQLDUMP_PATH --opt --skip-add-locks -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS $db | gzip > $MYSQL_BACKUP_DIR$db\\_$THE_DATE.sql.gz\n        done\n\n        # Delete old dumps\n        echo \"------------------------------------\"\n        echo \"Deleting old backups...\"\n        # List dumps to be deleted to stdout (for report)\n        $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL\n        # Delete dumps older than specified number of days\n        $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL -exec rm {} +\n\n\n        # Announce the completion time\n        echo \"------------------------------------\"\n        echo \"Backup Completed: $(date)\"\n        \n        \n        \n## 下面介绍定时任务\n参考：https://www.cnblogs.com/michaelzhao10/p/4875719.html\n \n### 安装启动\n\tapt-get install cron\n    service cron status/stop/start\n### 卸载\n\tapt-get安装记录，软件列表  \n      dpkg  -l\n      \n    卸载：\n    apt-get purge / apt-get –purge remove \n    删除已安装包（不保留配置文件)。 \n    如软件包a，依赖软件包b，则执行该命令会删除a，而且不保留配置文件\n    apt-get autoremove \n    删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件。\n    apt-get remove \n    删除已安装的软件包（保留配置文件），不会删除依赖软件包，且保留配置文件。\n    apt-get autoclean \n    APT的底层包是dpkg, 而dpkg 安装Package时, 会将 *.deb 放在 /var/cache/apt/archives/中，apt-get autoclean 只会删除 /var/cache/apt/archives/ 已经过期的deb。\n    apt-get clean \n    使用 apt-get clean 会将 /var/cache/apt/archives/ 的 所有 deb 删掉，可以理解为 rm /var/cache/apt/archives/*.deb。\n\n### 添加一个定时任务\n\t（默认是将定时任务执行日志邮件发送到邮箱，如果没有安装smtp服务器，可以指定定时任务的执行日志输出到某个文件）\n\tcrontab –e\n    # 在打开的编辑器里写下你要执行的脚本例如：（每天五点运行backup.sh）\n#### 安装了smtp服务器的，如下编辑\n     #shell脚本环境\n     SHELL=/bin/bash\n     #path执行命令的路径\n     PATH=/sbin:/bin:/usr/sbin:/usr/bin\n     #邮件发送给1211079133@qq.com\n     MAILTO=1211079133@qq.com\n     #home是脚本执行时候的主目录（建议脚本执行写全路径）\n     HOME=/ \n     #上面是发送邮件以及环境的配置，下面是脚本列表。。。\n     0 5 * * * /root/bin/mysql_backup.sh\n     \n#### 未安装smtp服务器的，可以输出到某个日志文件\n\t#每分钟执行这个脚本，并且执行日志输出到这个mysqlback.log路径\n    */1 * * * * /home/task_script/mysql_back_up.sh >/home/backup/mysqlback.log>&1 &\n    \n    \n    \n### 查看定时任务列表\n\t#查看用户username的定时任务\n\tcrontab -u username -l \n    \n### 删除定时任务：\n\t直接 crontab -e 将对应脚本给注释掉即可。\n    \n    \n    \n# 最后总结一下操作\n\t1.新建定时任务\n    \tcrontab -e\n    2.加入以下内容（因为测试想看效果，频率是每分钟，具体频率设置请自行百度）\n     */1 * * * * /home/task_script/mysql_back_up.sh >/home/backup/mysqlback.log>&1 &\n     \n     \n     \n     \n     \n## ps\n\t每五分钟执行  */5 * * * *\n\n    每小时执行     0 * * * *\n\n    每天执行        0 0 * * *\n\n    每周执行       0 0 * * 0\n\n    每月执行        0 0 1 * *\n\n    每年执行       0 0 1 1 *\n    \n    \n    \n    \n    \n    \n    \n下篇文章介绍利用二进制文件，增量备份","slug":"服务器定时任务，部署相关","published":1,"updated":"2017-11-20T10:26:24.117Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjma58erp001nawpfea3nnld0","content":"<h1 id=\"介绍几个常用的命令\"><a href=\"#介绍几个常用的命令\" class=\"headerlink\" title=\"介绍几个常用的命令\"></a>介绍几个常用的命令</h1><h4 id=\"修改文件的修改时间\"><a href=\"#修改文件的修改时间\" class=\"headerlink\" title=\"修改文件的修改时间\"></a>修改文件的修改时间</h4><pre><code>touch -m -d &quot;2000-01-01 10:10:10&quot; ubuntugege.txt\n</code></pre><h4 id=\"转换文件的格式\"><a href=\"#转换文件的格式\" class=\"headerlink\" title=\"转换文件的格式\"></a>转换文件的格式</h4><pre><code>（如果执行脚本报 \\n 等错误，是文件格式问题）    \n     报如下错误是格式问题\n    $&apos;\\r&apos;: command not found\n    ./incres_mysql.sh: line 8: $&apos;\\r&apos;: command not found\n</code></pre><h6 id=\"命令简介：\"><a href=\"#命令简介：\" class=\"headerlink\" title=\"命令简介：\"></a>命令简介：</h6><pre><code>参考：https://www.cnblogs.com/kerrycode/archive/2015/12/26/5077969.html\n\n    dos2unix是将Windows格式文件转换为Unix、Linux格式的实用命令。Windows格式文件的换行符为\\r\\n ,而Unix&amp;Linux文件的换行符为\\n. dos2unix命令其实就是将文件中的\\r\\n 转换为\\n。\n    而unix2dos则是和dos2unix互为孪生的一个命令，它是将Linux&amp;Unix格式文件转换为Windows格式文件的命令。\n\n    :dos2unix filename1 filename2 filename3\n</code></pre><h4 id=\"查找修改日期前n天的文件列表\"><a href=\"#查找修改日期前n天的文件列表\" class=\"headerlink\" title=\"查找修改日期前n天的文件列表\"></a>查找修改日期前n天的文件列表</h4><pre><code>例如查找：/home/back/mysql目录下所有后缀.sql.gz的修改日期在14天以前的文件\n:$(which find) /home/backup/mysql/*.sql.gz -mtime +14\n</code></pre><h4 id=\"查找到并删除文件\"><a href=\"#查找到并删除文件\" class=\"headerlink\" title=\"查找到并删除文件\"></a>查找到并删除文件</h4><pre><code>:$(which find) /home/backup/mysql/*.sql.gz -mtime +14 -exec rm {} +\n</code></pre><h2 id=\"下面介绍数据库脚本文件\"><a href=\"#下面介绍数据库脚本文件\" class=\"headerlink\" title=\"下面介绍数据库脚本文件\"></a>下面介绍数据库脚本文件</h2><pre><code>mysql_backup.sh\n\n    #使用sqldump 遍历mysql所有非系统数据库列表，并且执行导出sql操作\n    #保存了sql文件之后，检查备份目录下创建时间较早的文件进行删除操作 \n\n   #!/bin/bash\n\n   # BEGIN CONFIGURATION =================修改mysql链接信息===========================\n\n   BACKUP_DIR=&quot;/home/backup&quot;  # The directory in which you want backups placed 备份路径\n   KEEP_MYSQL=&quot;14&quot; # How many days worth of mysql dumps to keep 早于当前日期的天数\n\n   MYSQL_HOST=&quot;127.0.0.1&quot;\n   MYSQL_USER=&quot;root&quot;\n   MYSQL_PASS=&quot;123&quot;\n   MYSQL_BACKUP_DIR=&quot;$BACKUP_DIR/mysql/&quot;\n\n   # You probably won&apos;t have to change these\n   THE_DATE=&quot;$(date &apos;+%Y-%m-%d&apos;)&quot;\n\n   MYSQL_PATH=&quot;$(which mysql)&quot;\n   MYSQLDUMP_PATH=&quot;$(which mysqldump)&quot;\n   FIND_PATH=&quot;$(which find)&quot;\n   TAR_PATH=&quot;$(which tar)&quot;\n   RSYNC_PATH=&quot;$(which rsync)&quot;\n\n   # END CONFIGURATION ============================================================\n\n\n\n   # Announce the backup time\n   echo &quot;Backup Started: $(date)&quot;\n\n   # Create the backup dirs if they don&apos;t exist\n   if [[ ! -d $BACKUP_DIR ]]\n     then\n     mkdir -p &quot;$BACKUP_DIR&quot;\n   fi\n   if [[ ! -d $MYSQL_BACKUP_DIR ]]\n     then\n     mkdir -p &quot;$MYSQL_BACKUP_DIR&quot;\n   fi\n\n   # Get a list of mysql databases and dump them one by one\n   echo &quot;------------------------------------&quot;\n   ALL_DBS=($($MYSQL_PATH -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS -Bse &apos;show databases&apos;))\n   SYSTEM_DBS=(&quot;information_schema&quot; &quot;mysql&quot; &quot;performance_schema&quot; &quot;test&quot;)\n   DBS=()\n\n   for i in &quot;${ALL_DBS[@]}&quot;; do\n     skip=\n     for j in &quot;${SYSTEM_DBS[@]}&quot;; do\n       [[ $i == $j ]] &amp;&amp; { skip=1; break; }\n     done\n     [[ -n $skip ]] || DBS+=(&quot;$i&quot;)\n   done\n\n   for db in &quot;${DBS[@]}&quot;; do\n     echo &quot;Dumping: $db...&quot;\n     $MYSQLDUMP_PATH --opt --skip-add-locks -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS $db | gzip &gt; $MYSQL_BACKUP_DIR$db\\_$THE_DATE.sql.gz\n   done\n\n   # Delete old dumps\n   echo &quot;------------------------------------&quot;\n   echo &quot;Deleting old backups...&quot;\n   # List dumps to be deleted to stdout (for report)\n   $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL\n   # Delete dumps older than specified number of days\n   $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL -exec rm {} +\n\n\n   # Announce the completion time\n   echo &quot;------------------------------------&quot;\n   echo &quot;Backup Completed: $(date)&quot;\n</code></pre><h2 id=\"下面介绍定时任务\"><a href=\"#下面介绍定时任务\" class=\"headerlink\" title=\"下面介绍定时任务\"></a>下面介绍定时任务</h2><p>参考：<a href=\"https://www.cnblogs.com/michaelzhao10/p/4875719.html\" target=\"_blank\" rel=\"external\">https://www.cnblogs.com/michaelzhao10/p/4875719.html</a></p>\n<h3 id=\"安装启动\"><a href=\"#安装启动\" class=\"headerlink\" title=\"安装启动\"></a>安装启动</h3><pre><code>apt-get install cron\nservice cron status/stop/start\n</code></pre><h3 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h3><pre><code>apt-get安装记录，软件列表  \n  dpkg  -l\n\n卸载：\napt-get purge / apt-get –purge remove \n删除已安装包（不保留配置文件)。 \n如软件包a，依赖软件包b，则执行该命令会删除a，而且不保留配置文件\napt-get autoremove \n删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件。\napt-get remove \n删除已安装的软件包（保留配置文件），不会删除依赖软件包，且保留配置文件。\napt-get autoclean \nAPT的底层包是dpkg, 而dpkg 安装Package时, 会将 *.deb 放在 /var/cache/apt/archives/中，apt-get autoclean 只会删除 /var/cache/apt/archives/ 已经过期的deb。\napt-get clean \n使用 apt-get clean 会将 /var/cache/apt/archives/ 的 所有 deb 删掉，可以理解为 rm /var/cache/apt/archives/*.deb。\n</code></pre><h3 id=\"添加一个定时任务\"><a href=\"#添加一个定时任务\" class=\"headerlink\" title=\"添加一个定时任务\"></a>添加一个定时任务</h3><pre><code>（默认是将定时任务执行日志邮件发送到邮箱，如果没有安装smtp服务器，可以指定定时任务的执行日志输出到某个文件）\ncrontab –e\n# 在打开的编辑器里写下你要执行的脚本例如：（每天五点运行backup.sh）\n</code></pre><h4 id=\"安装了smtp服务器的，如下编辑\"><a href=\"#安装了smtp服务器的，如下编辑\" class=\"headerlink\" title=\"安装了smtp服务器的，如下编辑\"></a>安装了smtp服务器的，如下编辑</h4><pre><code>#shell脚本环境\nSHELL=/bin/bash\n#path执行命令的路径\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\n#邮件发送给1211079133@qq.com\nMAILTO=1211079133@qq.com\n#home是脚本执行时候的主目录（建议脚本执行写全路径）\nHOME=/ \n#上面是发送邮件以及环境的配置，下面是脚本列表。。。\n0 5 * * * /root/bin/mysql_backup.sh\n</code></pre><h4 id=\"未安装smtp服务器的，可以输出到某个日志文件\"><a href=\"#未安装smtp服务器的，可以输出到某个日志文件\" class=\"headerlink\" title=\"未安装smtp服务器的，可以输出到某个日志文件\"></a>未安装smtp服务器的，可以输出到某个日志文件</h4><pre><code>#每分钟执行这个脚本，并且执行日志输出到这个mysqlback.log路径\n*/1 * * * * /home/task_script/mysql_back_up.sh &gt;/home/backup/mysqlback.log&gt;&amp;1 &amp;\n</code></pre><h3 id=\"查看定时任务列表\"><a href=\"#查看定时任务列表\" class=\"headerlink\" title=\"查看定时任务列表\"></a>查看定时任务列表</h3><pre><code>#查看用户username的定时任务\ncrontab -u username -l \n</code></pre><h3 id=\"删除定时任务：\"><a href=\"#删除定时任务：\" class=\"headerlink\" title=\"删除定时任务：\"></a>删除定时任务：</h3><pre><code>直接 crontab -e 将对应脚本给注释掉即可。\n</code></pre><h1 id=\"最后总结一下操作\"><a href=\"#最后总结一下操作\" class=\"headerlink\" title=\"最后总结一下操作\"></a>最后总结一下操作</h1><pre><code>1.新建定时任务\n    crontab -e\n2.加入以下内容（因为测试想看效果，频率是每分钟，具体频率设置请自行百度）\n */1 * * * * /home/task_script/mysql_back_up.sh &gt;/home/backup/mysqlback.log&gt;&amp;1 &amp;\n</code></pre><h2 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h2><pre><code>每五分钟执行  */5 * * * *\n\n每小时执行     0 * * * *\n\n每天执行        0 0 * * *\n\n每周执行       0 0 * * 0\n\n每月执行        0 0 1 * *\n\n每年执行       0 0 1 1 *\n</code></pre><p>下篇文章介绍利用二进制文件，增量备份</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"介绍几个常用的命令\"><a href=\"#介绍几个常用的命令\" class=\"headerlink\" title=\"介绍几个常用的命令\"></a>介绍几个常用的命令</h1><h4 id=\"修改文件的修改时间\"><a href=\"#修改文件的修改时间\" class=\"headerlink\" title=\"修改文件的修改时间\"></a>修改文件的修改时间</h4><pre><code>touch -m -d &quot;2000-01-01 10:10:10&quot; ubuntugege.txt\n</code></pre><h4 id=\"转换文件的格式\"><a href=\"#转换文件的格式\" class=\"headerlink\" title=\"转换文件的格式\"></a>转换文件的格式</h4><pre><code>（如果执行脚本报 \\n 等错误，是文件格式问题）    \n     报如下错误是格式问题\n    $&apos;\\r&apos;: command not found\n    ./incres_mysql.sh: line 8: $&apos;\\r&apos;: command not found\n</code></pre><h6 id=\"命令简介：\"><a href=\"#命令简介：\" class=\"headerlink\" title=\"命令简介：\"></a>命令简介：</h6><pre><code>参考：https://www.cnblogs.com/kerrycode/archive/2015/12/26/5077969.html\n\n    dos2unix是将Windows格式文件转换为Unix、Linux格式的实用命令。Windows格式文件的换行符为\\r\\n ,而Unix&amp;Linux文件的换行符为\\n. dos2unix命令其实就是将文件中的\\r\\n 转换为\\n。\n    而unix2dos则是和dos2unix互为孪生的一个命令，它是将Linux&amp;Unix格式文件转换为Windows格式文件的命令。\n\n    :dos2unix filename1 filename2 filename3\n</code></pre><h4 id=\"查找修改日期前n天的文件列表\"><a href=\"#查找修改日期前n天的文件列表\" class=\"headerlink\" title=\"查找修改日期前n天的文件列表\"></a>查找修改日期前n天的文件列表</h4><pre><code>例如查找：/home/back/mysql目录下所有后缀.sql.gz的修改日期在14天以前的文件\n:$(which find) /home/backup/mysql/*.sql.gz -mtime +14\n</code></pre><h4 id=\"查找到并删除文件\"><a href=\"#查找到并删除文件\" class=\"headerlink\" title=\"查找到并删除文件\"></a>查找到并删除文件</h4><pre><code>:$(which find) /home/backup/mysql/*.sql.gz -mtime +14 -exec rm {} +\n</code></pre><h2 id=\"下面介绍数据库脚本文件\"><a href=\"#下面介绍数据库脚本文件\" class=\"headerlink\" title=\"下面介绍数据库脚本文件\"></a>下面介绍数据库脚本文件</h2><pre><code>mysql_backup.sh\n\n    #使用sqldump 遍历mysql所有非系统数据库列表，并且执行导出sql操作\n    #保存了sql文件之后，检查备份目录下创建时间较早的文件进行删除操作 \n\n   #!/bin/bash\n\n   # BEGIN CONFIGURATION =================修改mysql链接信息===========================\n\n   BACKUP_DIR=&quot;/home/backup&quot;  # The directory in which you want backups placed 备份路径\n   KEEP_MYSQL=&quot;14&quot; # How many days worth of mysql dumps to keep 早于当前日期的天数\n\n   MYSQL_HOST=&quot;127.0.0.1&quot;\n   MYSQL_USER=&quot;root&quot;\n   MYSQL_PASS=&quot;123&quot;\n   MYSQL_BACKUP_DIR=&quot;$BACKUP_DIR/mysql/&quot;\n\n   # You probably won&apos;t have to change these\n   THE_DATE=&quot;$(date &apos;+%Y-%m-%d&apos;)&quot;\n\n   MYSQL_PATH=&quot;$(which mysql)&quot;\n   MYSQLDUMP_PATH=&quot;$(which mysqldump)&quot;\n   FIND_PATH=&quot;$(which find)&quot;\n   TAR_PATH=&quot;$(which tar)&quot;\n   RSYNC_PATH=&quot;$(which rsync)&quot;\n\n   # END CONFIGURATION ============================================================\n\n\n\n   # Announce the backup time\n   echo &quot;Backup Started: $(date)&quot;\n\n   # Create the backup dirs if they don&apos;t exist\n   if [[ ! -d $BACKUP_DIR ]]\n     then\n     mkdir -p &quot;$BACKUP_DIR&quot;\n   fi\n   if [[ ! -d $MYSQL_BACKUP_DIR ]]\n     then\n     mkdir -p &quot;$MYSQL_BACKUP_DIR&quot;\n   fi\n\n   # Get a list of mysql databases and dump them one by one\n   echo &quot;------------------------------------&quot;\n   ALL_DBS=($($MYSQL_PATH -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS -Bse &apos;show databases&apos;))\n   SYSTEM_DBS=(&quot;information_schema&quot; &quot;mysql&quot; &quot;performance_schema&quot; &quot;test&quot;)\n   DBS=()\n\n   for i in &quot;${ALL_DBS[@]}&quot;; do\n     skip=\n     for j in &quot;${SYSTEM_DBS[@]}&quot;; do\n       [[ $i == $j ]] &amp;&amp; { skip=1; break; }\n     done\n     [[ -n $skip ]] || DBS+=(&quot;$i&quot;)\n   done\n\n   for db in &quot;${DBS[@]}&quot;; do\n     echo &quot;Dumping: $db...&quot;\n     $MYSQLDUMP_PATH --opt --skip-add-locks -h $MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASS $db | gzip &gt; $MYSQL_BACKUP_DIR$db\\_$THE_DATE.sql.gz\n   done\n\n   # Delete old dumps\n   echo &quot;------------------------------------&quot;\n   echo &quot;Deleting old backups...&quot;\n   # List dumps to be deleted to stdout (for report)\n   $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL\n   # Delete dumps older than specified number of days\n   $FIND_PATH $MYSQL_BACKUP_DIR*.sql.gz -mtime +$KEEP_MYSQL -exec rm {} +\n\n\n   # Announce the completion time\n   echo &quot;------------------------------------&quot;\n   echo &quot;Backup Completed: $(date)&quot;\n</code></pre><h2 id=\"下面介绍定时任务\"><a href=\"#下面介绍定时任务\" class=\"headerlink\" title=\"下面介绍定时任务\"></a>下面介绍定时任务</h2><p>参考：<a href=\"https://www.cnblogs.com/michaelzhao10/p/4875719.html\">https://www.cnblogs.com/michaelzhao10/p/4875719.html</a></p>\n<h3 id=\"安装启动\"><a href=\"#安装启动\" class=\"headerlink\" title=\"安装启动\"></a>安装启动</h3><pre><code>apt-get install cron\nservice cron status/stop/start\n</code></pre><h3 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h3><pre><code>apt-get安装记录，软件列表  \n  dpkg  -l\n\n卸载：\napt-get purge / apt-get –purge remove \n删除已安装包（不保留配置文件)。 \n如软件包a，依赖软件包b，则执行该命令会删除a，而且不保留配置文件\napt-get autoremove \n删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件。\napt-get remove \n删除已安装的软件包（保留配置文件），不会删除依赖软件包，且保留配置文件。\napt-get autoclean \nAPT的底层包是dpkg, 而dpkg 安装Package时, 会将 *.deb 放在 /var/cache/apt/archives/中，apt-get autoclean 只会删除 /var/cache/apt/archives/ 已经过期的deb。\napt-get clean \n使用 apt-get clean 会将 /var/cache/apt/archives/ 的 所有 deb 删掉，可以理解为 rm /var/cache/apt/archives/*.deb。\n</code></pre><h3 id=\"添加一个定时任务\"><a href=\"#添加一个定时任务\" class=\"headerlink\" title=\"添加一个定时任务\"></a>添加一个定时任务</h3><pre><code>（默认是将定时任务执行日志邮件发送到邮箱，如果没有安装smtp服务器，可以指定定时任务的执行日志输出到某个文件）\ncrontab –e\n# 在打开的编辑器里写下你要执行的脚本例如：（每天五点运行backup.sh）\n</code></pre><h4 id=\"安装了smtp服务器的，如下编辑\"><a href=\"#安装了smtp服务器的，如下编辑\" class=\"headerlink\" title=\"安装了smtp服务器的，如下编辑\"></a>安装了smtp服务器的，如下编辑</h4><pre><code>#shell脚本环境\nSHELL=/bin/bash\n#path执行命令的路径\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\n#邮件发送给1211079133@qq.com\nMAILTO=1211079133@qq.com\n#home是脚本执行时候的主目录（建议脚本执行写全路径）\nHOME=/ \n#上面是发送邮件以及环境的配置，下面是脚本列表。。。\n0 5 * * * /root/bin/mysql_backup.sh\n</code></pre><h4 id=\"未安装smtp服务器的，可以输出到某个日志文件\"><a href=\"#未安装smtp服务器的，可以输出到某个日志文件\" class=\"headerlink\" title=\"未安装smtp服务器的，可以输出到某个日志文件\"></a>未安装smtp服务器的，可以输出到某个日志文件</h4><pre><code>#每分钟执行这个脚本，并且执行日志输出到这个mysqlback.log路径\n*/1 * * * * /home/task_script/mysql_back_up.sh &gt;/home/backup/mysqlback.log&gt;&amp;1 &amp;\n</code></pre><h3 id=\"查看定时任务列表\"><a href=\"#查看定时任务列表\" class=\"headerlink\" title=\"查看定时任务列表\"></a>查看定时任务列表</h3><pre><code>#查看用户username的定时任务\ncrontab -u username -l \n</code></pre><h3 id=\"删除定时任务：\"><a href=\"#删除定时任务：\" class=\"headerlink\" title=\"删除定时任务：\"></a>删除定时任务：</h3><pre><code>直接 crontab -e 将对应脚本给注释掉即可。\n</code></pre><h1 id=\"最后总结一下操作\"><a href=\"#最后总结一下操作\" class=\"headerlink\" title=\"最后总结一下操作\"></a>最后总结一下操作</h1><pre><code>1.新建定时任务\n    crontab -e\n2.加入以下内容（因为测试想看效果，频率是每分钟，具体频率设置请自行百度）\n */1 * * * * /home/task_script/mysql_back_up.sh &gt;/home/backup/mysqlback.log&gt;&amp;1 &amp;\n</code></pre><h2 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h2><pre><code>每五分钟执行  */5 * * * *\n\n每小时执行     0 * * * *\n\n每天执行        0 0 * * *\n\n每周执行       0 0 * * 0\n\n每月执行        0 0 1 * *\n\n每年执行       0 0 1 1 *\n</code></pre><p>下篇文章介绍利用二进制文件，增量备份</p>\n"}],"PostAsset":[{"_id":"source/_posts/mybatis-generator-源码浅析与修改/images/mybatis_mapper.png","slug":"images/mybatis_mapper.png","post":"cjma58eqm000vawpfhrbi0n4z","modified":1,"renderable":0},{"_id":"source/_posts/mybatis-plus代码生成步骤/1.png","post":"cjma58eqr000zawpfufh0vwnn","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/异构数据库同步方案1-触发器/pasted-1.png","post":"cjma58erm001iawpfn8qw9ksl","slug":"pasted-1.png","modified":1,"renderable":1},{"_id":"source/_posts/批处理脚本初识/jiegou.png","post":"cjma58ero001mawpfhajp2kyd","slug":"jiegou.png","modified":1,"renderable":1},{"_id":"source/_posts/active_mq/index.png","post":"cjma58ep90003awpfdq4pu3eb","slug":"index.png","modified":1,"renderable":1},{"_id":"source/_posts/active_mq/user.png","post":"cjma58ep90003awpfdq4pu3eb","slug":"user.png","modified":1,"renderable":1},{"_id":"source/_posts/http升级https协议-tomcat-nginx/pasted-2.png","post":"cjma58eq8000hawpf67buiy28","slug":"pasted-2.png","modified":1,"renderable":1},{"_id":"source/_posts/http升级https协议-tomcat-nginx/pasted-3.png","post":"cjma58eq8000hawpf67buiy28","slug":"pasted-3.png","modified":1,"renderable":1},{"_id":"source/_posts/怎样为我的博客添加图片/1.png","post":"cjma58ern001kawpfdkfrg25s","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/怎样为我的博客添加图片/pasted-0.png","post":"cjma58ern001kawpfdkfrg25s","slug":"pasted-0.png","modified":1,"renderable":1},{"_id":"source/_posts/mysql/1.png","post":"cjma58eqz0012awpfs1t5i17q","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/mysql/2.png","post":"cjma58eqz0012awpfs1t5i17q","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/mysql/3.png","slug":"3.png","post":"cjma58eqz0012awpfs1t5i17q","modified":1,"renderable":0},{"_id":"source/_posts/state_design_pattern/1.png","post":"cjma58erd001cawpfbve02axm","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/state_design_pattern/2.png","post":"cjma58erd001cawpfbve02axm","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/state_design_pattern/3.png","post":"cjma58erd001cawpfbve02axm","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/state_design_pattern/4.png","post":"cjma58erd001cawpfbve02axm","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/timeDocker/1.png","post":"cjma58erf001dawpfs2tjyvoq","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/timeDocker/2.png","post":"cjma58erf001dawpfs2tjyvoq","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/timeDocker/3.png","post":"cjma58erf001dawpfs2tjyvoq","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/timeDocker/4.png","post":"cjma58erf001dawpfs2tjyvoq","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/timeDocker/5.png","post":"cjma58erf001dawpfs2tjyvoq","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/timeDocker/6.png","post":"cjma58erf001dawpfs2tjyvoq","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/1.png","post":"cjma58er30016awpfj026ebbo","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/2.png","post":"cjma58er30016awpfj026ebbo","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/3.png","post":"cjma58er30016awpfj026ebbo","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/4.png","post":"cjma58er30016awpfj026ebbo","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/5.png","post":"cjma58er30016awpfj026ebbo","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/6.png","post":"cjma58er30016awpfj026ebbo","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/7.png","post":"cjma58er30016awpfj026ebbo","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/first/images/tom.png","slug":"images/tom.png","post":"cjma58eq2000cawpf7axdtalw","modified":1,"renderable":0}],"PostCategory":[{"post_id":"cjma58eqj000tawpfs28uodjm","category_id":"cjma58eqo000wawpfl2xj60th","_id":"cjma58er10013awpfvgvtmhaf"}],"PostTag":[{"post_id":"cjma58ep90003awpfdq4pu3eb","tag_id":"cjma58epl0005awpfzi9mvy3v","_id":"cjma58epz000aawpfn0pkegob"},{"post_id":"cjma58eq0000bawpf87d7qdzi","tag_id":"cjma58epy0009awpf62iulgz6","_id":"cjma58eq4000eawpf6yzcugoe"},{"post_id":"cjma58epj0004awpfk0pkt9kd","tag_id":"cjma58epy0009awpf62iulgz6","_id":"cjma58eq8000gawpf7hf8s556"},{"post_id":"cjma58eq2000cawpf7axdtalw","tag_id":"cjma58epl0005awpfzi9mvy3v","_id":"cjma58eqa000jawpfdqv6jz74"},{"post_id":"cjma58epw0007awpf6j1vuo82","tag_id":"cjma58eq4000dawpfe2r0mgei","_id":"cjma58eqc000lawpffotaazqk"},{"post_id":"cjma58eqb000kawpfbgwfsro0","tag_id":"cjma58epy0009awpf62iulgz6","_id":"cjma58eqe000oawpf4qckmdm7"},{"post_id":"cjma58epx0008awpfbtluun1s","tag_id":"cjma58epy0009awpf62iulgz6","_id":"cjma58eqg000qawpfxiyyd8mu"},{"post_id":"cjma58eqf000pawpftqnu39ao","tag_id":"cjma58epl0005awpfzi9mvy3v","_id":"cjma58eqi000sawpfihf05scs"},{"post_id":"cjma58eq5000fawpfqo0rwit0","tag_id":"cjma58eqe000nawpfug2jg1ms","_id":"cjma58eqm000uawpfdchwws42"},{"post_id":"cjma58eqj000tawpfs28uodjm","tag_id":"cjma58eqo000xawpf7l3sr8zo","_id":"cjma58eqv0011awpfcdddoze9"},{"post_id":"cjma58eqz0012awpfs1t5i17q","tag_id":"cjma58epl0005awpfzi9mvy3v","_id":"cjma58er30015awpfdpj0jhg0"},{"post_id":"cjma58er30016awpfj026ebbo","tag_id":"cjma58epl0005awpfzi9mvy3v","_id":"cjma58er90018awpfvi7wagdx"},{"post_id":"cjma58erd001cawpfbve02axm","tag_id":"cjma58epy0009awpf62iulgz6","_id":"cjma58erg001fawpfjd8jg4g2"},{"post_id":"cjma58er60017awpfn0k4tuil","tag_id":"cjma58era001aawpf06hzf7w1","_id":"cjma58erm001hawpf41bxgdzy"},{"post_id":"cjma58erf001dawpfs2tjyvoq","tag_id":"cjma58eq4000dawpfe2r0mgei","_id":"cjma58ern001jawpfzp727wce"},{"post_id":"cjma58erb001bawpfsyq2pa96","tag_id":"cjma58erg001eawpfrznc1tfr","_id":"cjma58ero001lawpfskg7np63"}],"Tag":[{"name":"server,linux,ubuntu","_id":"cjma58epl0005awpfzi9mvy3v"},{"name":"java","_id":"cjma58epy0009awpf62iulgz6"},{"name":"docker  ubuntu","_id":"cjma58eq4000dawpfe2r0mgei"},{"name":"js   跨域","_id":"cjma58eqe000nawpfug2jg1ms"},{"name":"a","_id":"cjma58eqo000xawpf7l3sr8zo"},{"name":"node js","_id":"cjma58era001aawpf06hzf7w1"},{"name":"java  redis","_id":"cjma58erg001eawpfrznc1tfr"}]}}